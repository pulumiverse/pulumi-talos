// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Talos
{
    public static class GetImageFactoryExtensionsVersions
    {
        /// <summary>
        /// The image factory extensions versions data source provides a list of available extensions for a specific talos version from the image factory.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Talos = Pulumi.Talos;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = Talos.GetImageFactoryExtensionsVersions.Invoke(new()
        ///     {
        ///         TalosVersion = "v1.7.5",
        ///         Filters = new Talos.Inputs.GetImageFactoryExtensionsVersionsFiltersInputArgs
        ///         {
        ///             Names = new[]
        ///             {
        ///                 "amdgpu",
        ///                 "tailscale",
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetImageFactoryExtensionsVersionsResult> InvokeAsync(GetImageFactoryExtensionsVersionsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetImageFactoryExtensionsVersionsResult>("talos:index/getImageFactoryExtensionsVersions:getImageFactoryExtensionsVersions", args ?? new GetImageFactoryExtensionsVersionsArgs(), options.WithDefaults());

        /// <summary>
        /// The image factory extensions versions data source provides a list of available extensions for a specific talos version from the image factory.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Talos = Pulumi.Talos;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = Talos.GetImageFactoryExtensionsVersions.Invoke(new()
        ///     {
        ///         TalosVersion = "v1.7.5",
        ///         Filters = new Talos.Inputs.GetImageFactoryExtensionsVersionsFiltersInputArgs
        ///         {
        ///             Names = new[]
        ///             {
        ///                 "amdgpu",
        ///                 "tailscale",
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetImageFactoryExtensionsVersionsResult> Invoke(GetImageFactoryExtensionsVersionsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetImageFactoryExtensionsVersionsResult>("talos:index/getImageFactoryExtensionsVersions:getImageFactoryExtensionsVersions", args ?? new GetImageFactoryExtensionsVersionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetImageFactoryExtensionsVersionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The filter to apply to the extensions list.
        /// </summary>
        [Input("filters")]
        public Inputs.GetImageFactoryExtensionsVersionsFiltersArgs? Filters { get; set; }

        /// <summary>
        /// The talos version to get extensions for.
        /// </summary>
        [Input("talosVersion", required: true)]
        public string TalosVersion { get; set; } = null!;

        public GetImageFactoryExtensionsVersionsArgs()
        {
        }
        public static new GetImageFactoryExtensionsVersionsArgs Empty => new GetImageFactoryExtensionsVersionsArgs();
    }

    public sealed class GetImageFactoryExtensionsVersionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The filter to apply to the extensions list.
        /// </summary>
        [Input("filters")]
        public Input<Inputs.GetImageFactoryExtensionsVersionsFiltersInputArgs>? Filters { get; set; }

        /// <summary>
        /// The talos version to get extensions for.
        /// </summary>
        [Input("talosVersion", required: true)]
        public Input<string> TalosVersion { get; set; } = null!;

        public GetImageFactoryExtensionsVersionsInvokeArgs()
        {
        }
        public static new GetImageFactoryExtensionsVersionsInvokeArgs Empty => new GetImageFactoryExtensionsVersionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetImageFactoryExtensionsVersionsResult
    {
        /// <summary>
        /// The list of available extensions for the specified talos version.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetImageFactoryExtensionsVersionsExtensionsInfoResult> ExtensionsInfos;
        /// <summary>
        /// The filter to apply to the extensions list.
        /// </summary>
        public readonly Outputs.GetImageFactoryExtensionsVersionsFiltersResult? Filters;
        /// <summary>
        /// The ID of this resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The talos version to get extensions for.
        /// </summary>
        public readonly string TalosVersion;

        [OutputConstructor]
        private GetImageFactoryExtensionsVersionsResult(
            ImmutableArray<Outputs.GetImageFactoryExtensionsVersionsExtensionsInfoResult> extensionsInfos,

            Outputs.GetImageFactoryExtensionsVersionsFiltersResult? filters,

            string id,

            string talosVersion)
        {
            ExtensionsInfos = extensionsInfos;
            Filters = filters;
            Id = id;
            TalosVersion = talosVersion;
        }
    }
}
