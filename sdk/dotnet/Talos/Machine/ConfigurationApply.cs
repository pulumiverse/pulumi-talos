// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace SideroLabs.Pulumi.Talos.Machine
{
    /// <summary>
    /// Applies machine configuration to a Talos node.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.IO;
    /// using Pulumi;
    /// using Talos = SideroLabs.Pulumi.Talos;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var machineSecrets = new Talos.Machine.Secrets("machineSecrets");
    /// 
    ///     var talosconfig = new Talos.Client.Configuration("talosconfig", new()
    ///     {
    ///         ClusterName = "example-cluster",
    ///         MachineSecrets = machineSecrets.MachineSecrets,
    ///         Endpoints = new[]
    ///         {
    ///             "10.5.0.2",
    ///         },
    ///     });
    /// 
    ///     var machineconfigCp = new Talos.Machine.ConfigurationControlplane("machineconfigCp", new()
    ///     {
    ///         ClusterName = talosconfig.ClusterName,
    ///         ClusterEndpoint = "https://cluster.local:6443",
    ///         MachineSecrets = machineSecrets.MachineSecrets,
    ///     });
    /// 
    ///     var configApply = new Talos.Machine.ConfigurationApply("configApply", new()
    ///     {
    ///         TalosConfig = talosconfig.TalosConfig,
    ///         MachineConfiguration = machineconfigCp.MachineConfig,
    ///         ConfigPatches = new[]
    ///         {
    ///             File.ReadAllText($"{path.Module}/files/worker.yaml"),
    ///         },
    ///         Endpoint = "10.5.0.2",
    ///         Node = "10.5.0.2",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [TalosResourceType("talos:machine/configurationApply:ConfigurationApply")]
    public partial class ConfigurationApply : global::Pulumi.CustomResource
    {
        /// <summary>
        /// config patches to apply to the generated config
        /// </summary>
        [Output("configPatches")]
        public Output<ImmutableArray<string>> ConfigPatches { get; private set; } = null!;

        /// <summary>
        /// machine endpoint
        /// </summary>
        [Output("endpoint")]
        public Output<string> Endpoint { get; private set; } = null!;

        /// <summary>
        /// machine configuration
        /// </summary>
        [Output("machineConfiguration")]
        public Output<string> MachineConfiguration { get; private set; } = null!;

        /// <summary>
        /// The mode to apply the configuration in.
        /// </summary>
        [Output("mode")]
        public Output<string?> Mode { get; private set; } = null!;

        /// <summary>
        /// node to apply the config against
        /// </summary>
        [Output("node")]
        public Output<string> Node { get; private set; } = null!;

        /// <summary>
        /// talos client configuration for authentication
        /// </summary>
        [Output("talosConfig")]
        public Output<string> TalosConfig { get; private set; } = null!;


        /// <summary>
        /// Create a ConfigurationApply resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ConfigurationApply(string name, ConfigurationApplyArgs args, CustomResourceOptions? options = null)
            : base("talos:machine/configurationApply:ConfigurationApply", name, args ?? new ConfigurationApplyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ConfigurationApply(string name, Input<string> id, ConfigurationApplyState? state = null, CustomResourceOptions? options = null)
            : base("talos:machine/configurationApply:ConfigurationApply", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/siderolabs/pulumi-provider-talos",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ConfigurationApply resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ConfigurationApply Get(string name, Input<string> id, ConfigurationApplyState? state = null, CustomResourceOptions? options = null)
        {
            return new ConfigurationApply(name, id, state, options);
        }
    }

    public sealed class ConfigurationApplyArgs : global::Pulumi.ResourceArgs
    {
        [Input("configPatches")]
        private InputList<string>? _configPatches;

        /// <summary>
        /// config patches to apply to the generated config
        /// </summary>
        public InputList<string> ConfigPatches
        {
            get => _configPatches ?? (_configPatches = new InputList<string>());
            set => _configPatches = value;
        }

        /// <summary>
        /// machine endpoint
        /// </summary>
        [Input("endpoint", required: true)]
        public Input<string> Endpoint { get; set; } = null!;

        /// <summary>
        /// machine configuration
        /// </summary>
        [Input("machineConfiguration", required: true)]
        public Input<string> MachineConfiguration { get; set; } = null!;

        /// <summary>
        /// The mode to apply the configuration in.
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        /// <summary>
        /// node to apply the config against
        /// </summary>
        [Input("node", required: true)]
        public Input<string> Node { get; set; } = null!;

        /// <summary>
        /// talos client configuration for authentication
        /// </summary>
        [Input("talosConfig", required: true)]
        public Input<string> TalosConfig { get; set; } = null!;

        public ConfigurationApplyArgs()
        {
        }
        public static new ConfigurationApplyArgs Empty => new ConfigurationApplyArgs();
    }

    public sealed class ConfigurationApplyState : global::Pulumi.ResourceArgs
    {
        [Input("configPatches")]
        private InputList<string>? _configPatches;

        /// <summary>
        /// config patches to apply to the generated config
        /// </summary>
        public InputList<string> ConfigPatches
        {
            get => _configPatches ?? (_configPatches = new InputList<string>());
            set => _configPatches = value;
        }

        /// <summary>
        /// machine endpoint
        /// </summary>
        [Input("endpoint")]
        public Input<string>? Endpoint { get; set; }

        /// <summary>
        /// machine configuration
        /// </summary>
        [Input("machineConfiguration")]
        public Input<string>? MachineConfiguration { get; set; }

        /// <summary>
        /// The mode to apply the configuration in.
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        /// <summary>
        /// node to apply the config against
        /// </summary>
        [Input("node")]
        public Input<string>? Node { get; set; }

        /// <summary>
        /// talos client configuration for authentication
        /// </summary>
        [Input("talosConfig")]
        public Input<string>? TalosConfig { get; set; }

        public ConfigurationApplyState()
        {
        }
        public static new ConfigurationApplyState Empty => new ConfigurationApplyState();
    }
}
