// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace SideroLabs.Pulumi.Talos.Machine
{
    /// <summary>
    /// Generate machine configuration for a Talos worker node.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Talos = SideroLabs.Pulumi.Talos;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var machineSecrets = new Talos.Machine.Secrets("machineSecrets");
    /// 
    ///     var talosconfig = new Talos.Client.Configuration("talosconfig", new()
    ///     {
    ///         ClusterName = "example-cluster",
    ///         MachineSecrets = machineSecrets.MachineSecrets,
    ///         Endpoints = new[]
    ///         {
    ///             "10.5.0.2",
    ///         },
    ///     });
    /// 
    ///     var machineconfigWorker = new Talos.Machine.ConfigurationWorker("machineconfigWorker", new()
    ///     {
    ///         ClusterName = talosconfig.ClusterName,
    ///         ClusterEndpoint = "https://cluster.local:6443",
    ///         MachineSecrets = machineSecrets.MachineSecrets,
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [TalosResourceType("talos:machine/configurationWorker:ConfigurationWorker")]
    public partial class ConfigurationWorker : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The endpoint of the Talos cluster
        /// </summary>
        [Output("clusterEndpoint")]
        public Output<string> ClusterEndpoint { get; private set; } = null!;

        /// <summary>
        /// The name of the cluster in the generated config
        /// </summary>
        [Output("clusterName")]
        public Output<string> ClusterName { get; private set; } = null!;

        /// <summary>
        /// config patches to apply to the generated config
        /// </summary>
        [Output("configPatches")]
        public Output<ImmutableArray<string>> ConfigPatches { get; private set; } = null!;

        /// <summary>
        /// the desired machine config version to generate
        /// </summary>
        [Output("configVersion")]
        public Output<string?> ConfigVersion { get; private set; } = null!;

        /// <summary>
        /// whether to render all machine configs adding the documentation for each field
        /// </summary>
        [Output("docsEnabled")]
        public Output<bool?> DocsEnabled { get; private set; } = null!;

        /// <summary>
        /// whether to render all machine configs with the commented examples
        /// </summary>
        [Output("examplesEnabled")]
        public Output<bool?> ExamplesEnabled { get; private set; } = null!;

        /// <summary>
        /// desired kubernetes version to run
        /// </summary>
        [Output("kubernetesVersion")]
        public Output<string?> KubernetesVersion { get; private set; } = null!;

        /// <summary>
        /// the generated worker config
        /// </summary>
        [Output("machineConfig")]
        public Output<string> MachineConfig { get; private set; } = null!;

        /// <summary>
        /// The machine secrets for the cluster
        /// </summary>
        [Output("machineSecrets")]
        public Output<string> MachineSecrets { get; private set; } = null!;

        /// <summary>
        /// The version of Talos for which to generate configs
        /// </summary>
        [Output("talosVersion")]
        public Output<string?> TalosVersion { get; private set; } = null!;


        /// <summary>
        /// Create a ConfigurationWorker resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ConfigurationWorker(string name, ConfigurationWorkerArgs args, CustomResourceOptions? options = null)
            : base("talos:machine/configurationWorker:ConfigurationWorker", name, args ?? new ConfigurationWorkerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ConfigurationWorker(string name, Input<string> id, ConfigurationWorkerState? state = null, CustomResourceOptions? options = null)
            : base("talos:machine/configurationWorker:ConfigurationWorker", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/siderolabs/pulumi-provider-talos",
                AdditionalSecretOutputs =
                {
                    "machineConfig",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ConfigurationWorker resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ConfigurationWorker Get(string name, Input<string> id, ConfigurationWorkerState? state = null, CustomResourceOptions? options = null)
        {
            return new ConfigurationWorker(name, id, state, options);
        }
    }

    public sealed class ConfigurationWorkerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The endpoint of the Talos cluster
        /// </summary>
        [Input("clusterEndpoint", required: true)]
        public Input<string> ClusterEndpoint { get; set; } = null!;

        /// <summary>
        /// The name of the cluster in the generated config
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        [Input("configPatches")]
        private InputList<string>? _configPatches;

        /// <summary>
        /// config patches to apply to the generated config
        /// </summary>
        public InputList<string> ConfigPatches
        {
            get => _configPatches ?? (_configPatches = new InputList<string>());
            set => _configPatches = value;
        }

        /// <summary>
        /// the desired machine config version to generate
        /// </summary>
        [Input("configVersion")]
        public Input<string>? ConfigVersion { get; set; }

        /// <summary>
        /// whether to render all machine configs adding the documentation for each field
        /// </summary>
        [Input("docsEnabled")]
        public Input<bool>? DocsEnabled { get; set; }

        /// <summary>
        /// whether to render all machine configs with the commented examples
        /// </summary>
        [Input("examplesEnabled")]
        public Input<bool>? ExamplesEnabled { get; set; }

        /// <summary>
        /// desired kubernetes version to run
        /// </summary>
        [Input("kubernetesVersion")]
        public Input<string>? KubernetesVersion { get; set; }

        /// <summary>
        /// The machine secrets for the cluster
        /// </summary>
        [Input("machineSecrets", required: true)]
        public Input<string> MachineSecrets { get; set; } = null!;

        /// <summary>
        /// The version of Talos for which to generate configs
        /// </summary>
        [Input("talosVersion")]
        public Input<string>? TalosVersion { get; set; }

        public ConfigurationWorkerArgs()
        {
        }
        public static new ConfigurationWorkerArgs Empty => new ConfigurationWorkerArgs();
    }

    public sealed class ConfigurationWorkerState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The endpoint of the Talos cluster
        /// </summary>
        [Input("clusterEndpoint")]
        public Input<string>? ClusterEndpoint { get; set; }

        /// <summary>
        /// The name of the cluster in the generated config
        /// </summary>
        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        [Input("configPatches")]
        private InputList<string>? _configPatches;

        /// <summary>
        /// config patches to apply to the generated config
        /// </summary>
        public InputList<string> ConfigPatches
        {
            get => _configPatches ?? (_configPatches = new InputList<string>());
            set => _configPatches = value;
        }

        /// <summary>
        /// the desired machine config version to generate
        /// </summary>
        [Input("configVersion")]
        public Input<string>? ConfigVersion { get; set; }

        /// <summary>
        /// whether to render all machine configs adding the documentation for each field
        /// </summary>
        [Input("docsEnabled")]
        public Input<bool>? DocsEnabled { get; set; }

        /// <summary>
        /// whether to render all machine configs with the commented examples
        /// </summary>
        [Input("examplesEnabled")]
        public Input<bool>? ExamplesEnabled { get; set; }

        /// <summary>
        /// desired kubernetes version to run
        /// </summary>
        [Input("kubernetesVersion")]
        public Input<string>? KubernetesVersion { get; set; }

        [Input("machineConfig")]
        private Input<string>? _machineConfig;

        /// <summary>
        /// the generated worker config
        /// </summary>
        public Input<string>? MachineConfig
        {
            get => _machineConfig;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _machineConfig = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The machine secrets for the cluster
        /// </summary>
        [Input("machineSecrets")]
        public Input<string>? MachineSecrets { get; set; }

        /// <summary>
        /// The version of Talos for which to generate configs
        /// </summary>
        [Input("talosVersion")]
        public Input<string>? TalosVersion { get; set; }

        public ConfigurationWorkerState()
        {
        }
        public static new ConfigurationWorkerState Empty => new ConfigurationWorkerState();
    }
}
