// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package machine

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Applies machine configuration to a Talos node.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/siderolabs/pulumi-provider-talos/sdk/go/talos/client"
//	"github.com/siderolabs/pulumi-provider-talos/sdk/go/talos/machine"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			machineSecrets, err := machine.NewSecrets(ctx, "machineSecrets", nil)
//			if err != nil {
//				return err
//			}
//			talosconfig, err := client.NewConfiguration(ctx, "talosconfig", &client.ConfigurationArgs{
//				ClusterName:    pulumi.String("example-cluster"),
//				MachineSecrets: machineSecrets.MachineSecrets,
//				Endpoints: pulumi.StringArray{
//					pulumi.String("10.5.0.2"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = machine.NewBootstrap(ctx, "bootstrap", &machine.BootstrapArgs{
//				TalosConfig: talosconfig.TalosConfig,
//				Endpoint:    pulumi.String("10.5.0.2"),
//				Node:        pulumi.String("10.5.0.2"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type Bootstrap struct {
	pulumi.CustomResourceState

	// machine endpoint
	Endpoint pulumi.StringOutput `pulumi:"endpoint"`
	// node to bootstrap
	Node pulumi.StringOutput `pulumi:"node"`
	// talos client configuration for authentication
	TalosConfig pulumi.StringOutput `pulumi:"talosConfig"`
}

// NewBootstrap registers a new resource with the given unique name, arguments, and options.
func NewBootstrap(ctx *pulumi.Context,
	name string, args *BootstrapArgs, opts ...pulumi.ResourceOption) (*Bootstrap, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Endpoint == nil {
		return nil, errors.New("invalid value for required argument 'Endpoint'")
	}
	if args.Node == nil {
		return nil, errors.New("invalid value for required argument 'Node'")
	}
	if args.TalosConfig == nil {
		return nil, errors.New("invalid value for required argument 'TalosConfig'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource Bootstrap
	err := ctx.RegisterResource("talos:machine/bootstrap:Bootstrap", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBootstrap gets an existing Bootstrap resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBootstrap(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BootstrapState, opts ...pulumi.ResourceOption) (*Bootstrap, error) {
	var resource Bootstrap
	err := ctx.ReadResource("talos:machine/bootstrap:Bootstrap", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Bootstrap resources.
type bootstrapState struct {
	// machine endpoint
	Endpoint *string `pulumi:"endpoint"`
	// node to bootstrap
	Node *string `pulumi:"node"`
	// talos client configuration for authentication
	TalosConfig *string `pulumi:"talosConfig"`
}

type BootstrapState struct {
	// machine endpoint
	Endpoint pulumi.StringPtrInput
	// node to bootstrap
	Node pulumi.StringPtrInput
	// talos client configuration for authentication
	TalosConfig pulumi.StringPtrInput
}

func (BootstrapState) ElementType() reflect.Type {
	return reflect.TypeOf((*bootstrapState)(nil)).Elem()
}

type bootstrapArgs struct {
	// machine endpoint
	Endpoint string `pulumi:"endpoint"`
	// node to bootstrap
	Node string `pulumi:"node"`
	// talos client configuration for authentication
	TalosConfig string `pulumi:"talosConfig"`
}

// The set of arguments for constructing a Bootstrap resource.
type BootstrapArgs struct {
	// machine endpoint
	Endpoint pulumi.StringInput
	// node to bootstrap
	Node pulumi.StringInput
	// talos client configuration for authentication
	TalosConfig pulumi.StringInput
}

func (BootstrapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bootstrapArgs)(nil)).Elem()
}

type BootstrapInput interface {
	pulumi.Input

	ToBootstrapOutput() BootstrapOutput
	ToBootstrapOutputWithContext(ctx context.Context) BootstrapOutput
}

func (*Bootstrap) ElementType() reflect.Type {
	return reflect.TypeOf((**Bootstrap)(nil)).Elem()
}

func (i *Bootstrap) ToBootstrapOutput() BootstrapOutput {
	return i.ToBootstrapOutputWithContext(context.Background())
}

func (i *Bootstrap) ToBootstrapOutputWithContext(ctx context.Context) BootstrapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BootstrapOutput)
}

// BootstrapArrayInput is an input type that accepts BootstrapArray and BootstrapArrayOutput values.
// You can construct a concrete instance of `BootstrapArrayInput` via:
//
//	BootstrapArray{ BootstrapArgs{...} }
type BootstrapArrayInput interface {
	pulumi.Input

	ToBootstrapArrayOutput() BootstrapArrayOutput
	ToBootstrapArrayOutputWithContext(context.Context) BootstrapArrayOutput
}

type BootstrapArray []BootstrapInput

func (BootstrapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Bootstrap)(nil)).Elem()
}

func (i BootstrapArray) ToBootstrapArrayOutput() BootstrapArrayOutput {
	return i.ToBootstrapArrayOutputWithContext(context.Background())
}

func (i BootstrapArray) ToBootstrapArrayOutputWithContext(ctx context.Context) BootstrapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BootstrapArrayOutput)
}

// BootstrapMapInput is an input type that accepts BootstrapMap and BootstrapMapOutput values.
// You can construct a concrete instance of `BootstrapMapInput` via:
//
//	BootstrapMap{ "key": BootstrapArgs{...} }
type BootstrapMapInput interface {
	pulumi.Input

	ToBootstrapMapOutput() BootstrapMapOutput
	ToBootstrapMapOutputWithContext(context.Context) BootstrapMapOutput
}

type BootstrapMap map[string]BootstrapInput

func (BootstrapMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Bootstrap)(nil)).Elem()
}

func (i BootstrapMap) ToBootstrapMapOutput() BootstrapMapOutput {
	return i.ToBootstrapMapOutputWithContext(context.Background())
}

func (i BootstrapMap) ToBootstrapMapOutputWithContext(ctx context.Context) BootstrapMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BootstrapMapOutput)
}

type BootstrapOutput struct{ *pulumi.OutputState }

func (BootstrapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Bootstrap)(nil)).Elem()
}

func (o BootstrapOutput) ToBootstrapOutput() BootstrapOutput {
	return o
}

func (o BootstrapOutput) ToBootstrapOutputWithContext(ctx context.Context) BootstrapOutput {
	return o
}

// machine endpoint
func (o BootstrapOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *Bootstrap) pulumi.StringOutput { return v.Endpoint }).(pulumi.StringOutput)
}

// node to bootstrap
func (o BootstrapOutput) Node() pulumi.StringOutput {
	return o.ApplyT(func(v *Bootstrap) pulumi.StringOutput { return v.Node }).(pulumi.StringOutput)
}

// talos client configuration for authentication
func (o BootstrapOutput) TalosConfig() pulumi.StringOutput {
	return o.ApplyT(func(v *Bootstrap) pulumi.StringOutput { return v.TalosConfig }).(pulumi.StringOutput)
}

type BootstrapArrayOutput struct{ *pulumi.OutputState }

func (BootstrapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Bootstrap)(nil)).Elem()
}

func (o BootstrapArrayOutput) ToBootstrapArrayOutput() BootstrapArrayOutput {
	return o
}

func (o BootstrapArrayOutput) ToBootstrapArrayOutputWithContext(ctx context.Context) BootstrapArrayOutput {
	return o
}

func (o BootstrapArrayOutput) Index(i pulumi.IntInput) BootstrapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Bootstrap {
		return vs[0].([]*Bootstrap)[vs[1].(int)]
	}).(BootstrapOutput)
}

type BootstrapMapOutput struct{ *pulumi.OutputState }

func (BootstrapMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Bootstrap)(nil)).Elem()
}

func (o BootstrapMapOutput) ToBootstrapMapOutput() BootstrapMapOutput {
	return o
}

func (o BootstrapMapOutput) ToBootstrapMapOutputWithContext(ctx context.Context) BootstrapMapOutput {
	return o
}

func (o BootstrapMapOutput) MapIndex(k pulumi.StringInput) BootstrapOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Bootstrap {
		return vs[0].(map[string]*Bootstrap)[vs[1].(string)]
	}).(BootstrapOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BootstrapInput)(nil)).Elem(), &Bootstrap{})
	pulumi.RegisterInputType(reflect.TypeOf((*BootstrapArrayInput)(nil)).Elem(), BootstrapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BootstrapMapInput)(nil)).Elem(), BootstrapMap{})
	pulumi.RegisterOutputType(BootstrapOutput{})
	pulumi.RegisterOutputType(BootstrapArrayOutput{})
	pulumi.RegisterOutputType(BootstrapMapOutput{})
}
