// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package machine

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Generate machine configuration for a Talos worker node.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/siderolabs/pulumi-provider-talos/sdk/go/talos/client"
//	"github.com/siderolabs/pulumi-provider-talos/sdk/go/talos/machine"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			machineSecrets, err := machine.NewSecrets(ctx, "machineSecrets", nil)
//			if err != nil {
//				return err
//			}
//			talosconfig, err := client.NewConfiguration(ctx, "talosconfig", &client.ConfigurationArgs{
//				ClusterName:    pulumi.String("example-cluster"),
//				MachineSecrets: machineSecrets.MachineSecrets,
//				Endpoints: pulumi.StringArray{
//					pulumi.String("10.5.0.2"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = machine.NewConfigurationWorker(ctx, "machineconfigWorker", &machine.ConfigurationWorkerArgs{
//				ClusterName:     talosconfig.ClusterName,
//				ClusterEndpoint: pulumi.String("https://cluster.local:6443"),
//				MachineSecrets:  machineSecrets.MachineSecrets,
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type ConfigurationWorker struct {
	pulumi.CustomResourceState

	// The endpoint of the Talos cluster
	ClusterEndpoint pulumi.StringOutput `pulumi:"clusterEndpoint"`
	// The name of the cluster in the generated config
	ClusterName pulumi.StringOutput `pulumi:"clusterName"`
	// config patches to apply to the generated config
	ConfigPatches pulumi.StringArrayOutput `pulumi:"configPatches"`
	// the desired machine config version to generate
	ConfigVersion pulumi.StringPtrOutput `pulumi:"configVersion"`
	// whether to render all machine configs adding the documentation for each field
	DocsEnabled pulumi.BoolPtrOutput `pulumi:"docsEnabled"`
	// whether to render all machine configs with the commented examples
	ExamplesEnabled pulumi.BoolPtrOutput `pulumi:"examplesEnabled"`
	// desired kubernetes version to run
	KubernetesVersion pulumi.StringPtrOutput `pulumi:"kubernetesVersion"`
	// the generated worker config
	MachineConfig pulumi.StringOutput `pulumi:"machineConfig"`
	// The machine secrets for the cluster
	MachineSecrets pulumi.StringOutput `pulumi:"machineSecrets"`
	// The version of Talos for which to generate configs
	TalosVersion pulumi.StringPtrOutput `pulumi:"talosVersion"`
}

// NewConfigurationWorker registers a new resource with the given unique name, arguments, and options.
func NewConfigurationWorker(ctx *pulumi.Context,
	name string, args *ConfigurationWorkerArgs, opts ...pulumi.ResourceOption) (*ConfigurationWorker, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterEndpoint == nil {
		return nil, errors.New("invalid value for required argument 'ClusterEndpoint'")
	}
	if args.ClusterName == nil {
		return nil, errors.New("invalid value for required argument 'ClusterName'")
	}
	if args.MachineSecrets == nil {
		return nil, errors.New("invalid value for required argument 'MachineSecrets'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"machineConfig",
	})
	opts = append(opts, secrets)
	opts = pkgResourceDefaultOpts(opts)
	var resource ConfigurationWorker
	err := ctx.RegisterResource("talos:machine/configurationWorker:ConfigurationWorker", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConfigurationWorker gets an existing ConfigurationWorker resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConfigurationWorker(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConfigurationWorkerState, opts ...pulumi.ResourceOption) (*ConfigurationWorker, error) {
	var resource ConfigurationWorker
	err := ctx.ReadResource("talos:machine/configurationWorker:ConfigurationWorker", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConfigurationWorker resources.
type configurationWorkerState struct {
	// The endpoint of the Talos cluster
	ClusterEndpoint *string `pulumi:"clusterEndpoint"`
	// The name of the cluster in the generated config
	ClusterName *string `pulumi:"clusterName"`
	// config patches to apply to the generated config
	ConfigPatches []string `pulumi:"configPatches"`
	// the desired machine config version to generate
	ConfigVersion *string `pulumi:"configVersion"`
	// whether to render all machine configs adding the documentation for each field
	DocsEnabled *bool `pulumi:"docsEnabled"`
	// whether to render all machine configs with the commented examples
	ExamplesEnabled *bool `pulumi:"examplesEnabled"`
	// desired kubernetes version to run
	KubernetesVersion *string `pulumi:"kubernetesVersion"`
	// the generated worker config
	MachineConfig *string `pulumi:"machineConfig"`
	// The machine secrets for the cluster
	MachineSecrets *string `pulumi:"machineSecrets"`
	// The version of Talos for which to generate configs
	TalosVersion *string `pulumi:"talosVersion"`
}

type ConfigurationWorkerState struct {
	// The endpoint of the Talos cluster
	ClusterEndpoint pulumi.StringPtrInput
	// The name of the cluster in the generated config
	ClusterName pulumi.StringPtrInput
	// config patches to apply to the generated config
	ConfigPatches pulumi.StringArrayInput
	// the desired machine config version to generate
	ConfigVersion pulumi.StringPtrInput
	// whether to render all machine configs adding the documentation for each field
	DocsEnabled pulumi.BoolPtrInput
	// whether to render all machine configs with the commented examples
	ExamplesEnabled pulumi.BoolPtrInput
	// desired kubernetes version to run
	KubernetesVersion pulumi.StringPtrInput
	// the generated worker config
	MachineConfig pulumi.StringPtrInput
	// The machine secrets for the cluster
	MachineSecrets pulumi.StringPtrInput
	// The version of Talos for which to generate configs
	TalosVersion pulumi.StringPtrInput
}

func (ConfigurationWorkerState) ElementType() reflect.Type {
	return reflect.TypeOf((*configurationWorkerState)(nil)).Elem()
}

type configurationWorkerArgs struct {
	// The endpoint of the Talos cluster
	ClusterEndpoint string `pulumi:"clusterEndpoint"`
	// The name of the cluster in the generated config
	ClusterName string `pulumi:"clusterName"`
	// config patches to apply to the generated config
	ConfigPatches []string `pulumi:"configPatches"`
	// the desired machine config version to generate
	ConfigVersion *string `pulumi:"configVersion"`
	// whether to render all machine configs adding the documentation for each field
	DocsEnabled *bool `pulumi:"docsEnabled"`
	// whether to render all machine configs with the commented examples
	ExamplesEnabled *bool `pulumi:"examplesEnabled"`
	// desired kubernetes version to run
	KubernetesVersion *string `pulumi:"kubernetesVersion"`
	// The machine secrets for the cluster
	MachineSecrets string `pulumi:"machineSecrets"`
	// The version of Talos for which to generate configs
	TalosVersion *string `pulumi:"talosVersion"`
}

// The set of arguments for constructing a ConfigurationWorker resource.
type ConfigurationWorkerArgs struct {
	// The endpoint of the Talos cluster
	ClusterEndpoint pulumi.StringInput
	// The name of the cluster in the generated config
	ClusterName pulumi.StringInput
	// config patches to apply to the generated config
	ConfigPatches pulumi.StringArrayInput
	// the desired machine config version to generate
	ConfigVersion pulumi.StringPtrInput
	// whether to render all machine configs adding the documentation for each field
	DocsEnabled pulumi.BoolPtrInput
	// whether to render all machine configs with the commented examples
	ExamplesEnabled pulumi.BoolPtrInput
	// desired kubernetes version to run
	KubernetesVersion pulumi.StringPtrInput
	// The machine secrets for the cluster
	MachineSecrets pulumi.StringInput
	// The version of Talos for which to generate configs
	TalosVersion pulumi.StringPtrInput
}

func (ConfigurationWorkerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*configurationWorkerArgs)(nil)).Elem()
}

type ConfigurationWorkerInput interface {
	pulumi.Input

	ToConfigurationWorkerOutput() ConfigurationWorkerOutput
	ToConfigurationWorkerOutputWithContext(ctx context.Context) ConfigurationWorkerOutput
}

func (*ConfigurationWorker) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationWorker)(nil)).Elem()
}

func (i *ConfigurationWorker) ToConfigurationWorkerOutput() ConfigurationWorkerOutput {
	return i.ToConfigurationWorkerOutputWithContext(context.Background())
}

func (i *ConfigurationWorker) ToConfigurationWorkerOutputWithContext(ctx context.Context) ConfigurationWorkerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationWorkerOutput)
}

// ConfigurationWorkerArrayInput is an input type that accepts ConfigurationWorkerArray and ConfigurationWorkerArrayOutput values.
// You can construct a concrete instance of `ConfigurationWorkerArrayInput` via:
//
//	ConfigurationWorkerArray{ ConfigurationWorkerArgs{...} }
type ConfigurationWorkerArrayInput interface {
	pulumi.Input

	ToConfigurationWorkerArrayOutput() ConfigurationWorkerArrayOutput
	ToConfigurationWorkerArrayOutputWithContext(context.Context) ConfigurationWorkerArrayOutput
}

type ConfigurationWorkerArray []ConfigurationWorkerInput

func (ConfigurationWorkerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConfigurationWorker)(nil)).Elem()
}

func (i ConfigurationWorkerArray) ToConfigurationWorkerArrayOutput() ConfigurationWorkerArrayOutput {
	return i.ToConfigurationWorkerArrayOutputWithContext(context.Background())
}

func (i ConfigurationWorkerArray) ToConfigurationWorkerArrayOutputWithContext(ctx context.Context) ConfigurationWorkerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationWorkerArrayOutput)
}

// ConfigurationWorkerMapInput is an input type that accepts ConfigurationWorkerMap and ConfigurationWorkerMapOutput values.
// You can construct a concrete instance of `ConfigurationWorkerMapInput` via:
//
//	ConfigurationWorkerMap{ "key": ConfigurationWorkerArgs{...} }
type ConfigurationWorkerMapInput interface {
	pulumi.Input

	ToConfigurationWorkerMapOutput() ConfigurationWorkerMapOutput
	ToConfigurationWorkerMapOutputWithContext(context.Context) ConfigurationWorkerMapOutput
}

type ConfigurationWorkerMap map[string]ConfigurationWorkerInput

func (ConfigurationWorkerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConfigurationWorker)(nil)).Elem()
}

func (i ConfigurationWorkerMap) ToConfigurationWorkerMapOutput() ConfigurationWorkerMapOutput {
	return i.ToConfigurationWorkerMapOutputWithContext(context.Background())
}

func (i ConfigurationWorkerMap) ToConfigurationWorkerMapOutputWithContext(ctx context.Context) ConfigurationWorkerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationWorkerMapOutput)
}

type ConfigurationWorkerOutput struct{ *pulumi.OutputState }

func (ConfigurationWorkerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationWorker)(nil)).Elem()
}

func (o ConfigurationWorkerOutput) ToConfigurationWorkerOutput() ConfigurationWorkerOutput {
	return o
}

func (o ConfigurationWorkerOutput) ToConfigurationWorkerOutputWithContext(ctx context.Context) ConfigurationWorkerOutput {
	return o
}

// The endpoint of the Talos cluster
func (o ConfigurationWorkerOutput) ClusterEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigurationWorker) pulumi.StringOutput { return v.ClusterEndpoint }).(pulumi.StringOutput)
}

// The name of the cluster in the generated config
func (o ConfigurationWorkerOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigurationWorker) pulumi.StringOutput { return v.ClusterName }).(pulumi.StringOutput)
}

// config patches to apply to the generated config
func (o ConfigurationWorkerOutput) ConfigPatches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConfigurationWorker) pulumi.StringArrayOutput { return v.ConfigPatches }).(pulumi.StringArrayOutput)
}

// the desired machine config version to generate
func (o ConfigurationWorkerOutput) ConfigVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationWorker) pulumi.StringPtrOutput { return v.ConfigVersion }).(pulumi.StringPtrOutput)
}

// whether to render all machine configs adding the documentation for each field
func (o ConfigurationWorkerOutput) DocsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigurationWorker) pulumi.BoolPtrOutput { return v.DocsEnabled }).(pulumi.BoolPtrOutput)
}

// whether to render all machine configs with the commented examples
func (o ConfigurationWorkerOutput) ExamplesEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigurationWorker) pulumi.BoolPtrOutput { return v.ExamplesEnabled }).(pulumi.BoolPtrOutput)
}

// desired kubernetes version to run
func (o ConfigurationWorkerOutput) KubernetesVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationWorker) pulumi.StringPtrOutput { return v.KubernetesVersion }).(pulumi.StringPtrOutput)
}

// the generated worker config
func (o ConfigurationWorkerOutput) MachineConfig() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigurationWorker) pulumi.StringOutput { return v.MachineConfig }).(pulumi.StringOutput)
}

// The machine secrets for the cluster
func (o ConfigurationWorkerOutput) MachineSecrets() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigurationWorker) pulumi.StringOutput { return v.MachineSecrets }).(pulumi.StringOutput)
}

// The version of Talos for which to generate configs
func (o ConfigurationWorkerOutput) TalosVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationWorker) pulumi.StringPtrOutput { return v.TalosVersion }).(pulumi.StringPtrOutput)
}

type ConfigurationWorkerArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationWorkerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConfigurationWorker)(nil)).Elem()
}

func (o ConfigurationWorkerArrayOutput) ToConfigurationWorkerArrayOutput() ConfigurationWorkerArrayOutput {
	return o
}

func (o ConfigurationWorkerArrayOutput) ToConfigurationWorkerArrayOutputWithContext(ctx context.Context) ConfigurationWorkerArrayOutput {
	return o
}

func (o ConfigurationWorkerArrayOutput) Index(i pulumi.IntInput) ConfigurationWorkerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ConfigurationWorker {
		return vs[0].([]*ConfigurationWorker)[vs[1].(int)]
	}).(ConfigurationWorkerOutput)
}

type ConfigurationWorkerMapOutput struct{ *pulumi.OutputState }

func (ConfigurationWorkerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConfigurationWorker)(nil)).Elem()
}

func (o ConfigurationWorkerMapOutput) ToConfigurationWorkerMapOutput() ConfigurationWorkerMapOutput {
	return o
}

func (o ConfigurationWorkerMapOutput) ToConfigurationWorkerMapOutputWithContext(ctx context.Context) ConfigurationWorkerMapOutput {
	return o
}

func (o ConfigurationWorkerMapOutput) MapIndex(k pulumi.StringInput) ConfigurationWorkerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ConfigurationWorker {
		return vs[0].(map[string]*ConfigurationWorker)[vs[1].(string)]
	}).(ConfigurationWorkerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationWorkerInput)(nil)).Elem(), &ConfigurationWorker{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationWorkerArrayInput)(nil)).Elem(), ConfigurationWorkerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationWorkerMapInput)(nil)).Elem(), ConfigurationWorkerMap{})
	pulumi.RegisterOutputType(ConfigurationWorkerOutput{})
	pulumi.RegisterOutputType(ConfigurationWorkerArrayOutput{})
	pulumi.RegisterOutputType(ConfigurationWorkerMapOutput{})
}
