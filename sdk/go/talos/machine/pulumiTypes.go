// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package machine

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-talos/sdk/go/talos/internal"
)

var _ = internal.GetEnvOrDefault

type BootstrapClientConfiguration struct {
	// The client CA certificate
	CaCertificate string `pulumi:"caCertificate"`
	// The client certificate
	ClientCertificate string `pulumi:"clientCertificate"`
	// The client key
	ClientKey string `pulumi:"clientKey"`
}

// BootstrapClientConfigurationInput is an input type that accepts BootstrapClientConfigurationArgs and BootstrapClientConfigurationOutput values.
// You can construct a concrete instance of `BootstrapClientConfigurationInput` via:
//
//	BootstrapClientConfigurationArgs{...}
type BootstrapClientConfigurationInput interface {
	pulumi.Input

	ToBootstrapClientConfigurationOutput() BootstrapClientConfigurationOutput
	ToBootstrapClientConfigurationOutputWithContext(context.Context) BootstrapClientConfigurationOutput
}

type BootstrapClientConfigurationArgs struct {
	// The client CA certificate
	CaCertificate pulumi.StringInput `pulumi:"caCertificate"`
	// The client certificate
	ClientCertificate pulumi.StringInput `pulumi:"clientCertificate"`
	// The client key
	ClientKey pulumi.StringInput `pulumi:"clientKey"`
}

func (BootstrapClientConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BootstrapClientConfiguration)(nil)).Elem()
}

func (i BootstrapClientConfigurationArgs) ToBootstrapClientConfigurationOutput() BootstrapClientConfigurationOutput {
	return i.ToBootstrapClientConfigurationOutputWithContext(context.Background())
}

func (i BootstrapClientConfigurationArgs) ToBootstrapClientConfigurationOutputWithContext(ctx context.Context) BootstrapClientConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BootstrapClientConfigurationOutput)
}

type BootstrapClientConfigurationOutput struct{ *pulumi.OutputState }

func (BootstrapClientConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BootstrapClientConfiguration)(nil)).Elem()
}

func (o BootstrapClientConfigurationOutput) ToBootstrapClientConfigurationOutput() BootstrapClientConfigurationOutput {
	return o
}

func (o BootstrapClientConfigurationOutput) ToBootstrapClientConfigurationOutputWithContext(ctx context.Context) BootstrapClientConfigurationOutput {
	return o
}

// The client CA certificate
func (o BootstrapClientConfigurationOutput) CaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v BootstrapClientConfiguration) string { return v.CaCertificate }).(pulumi.StringOutput)
}

// The client certificate
func (o BootstrapClientConfigurationOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v BootstrapClientConfiguration) string { return v.ClientCertificate }).(pulumi.StringOutput)
}

// The client key
func (o BootstrapClientConfigurationOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v BootstrapClientConfiguration) string { return v.ClientKey }).(pulumi.StringOutput)
}

type BootstrapTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
}

// BootstrapTimeoutsInput is an input type that accepts BootstrapTimeoutsArgs and BootstrapTimeoutsOutput values.
// You can construct a concrete instance of `BootstrapTimeoutsInput` via:
//
//	BootstrapTimeoutsArgs{...}
type BootstrapTimeoutsInput interface {
	pulumi.Input

	ToBootstrapTimeoutsOutput() BootstrapTimeoutsOutput
	ToBootstrapTimeoutsOutputWithContext(context.Context) BootstrapTimeoutsOutput
}

type BootstrapTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
}

func (BootstrapTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BootstrapTimeouts)(nil)).Elem()
}

func (i BootstrapTimeoutsArgs) ToBootstrapTimeoutsOutput() BootstrapTimeoutsOutput {
	return i.ToBootstrapTimeoutsOutputWithContext(context.Background())
}

func (i BootstrapTimeoutsArgs) ToBootstrapTimeoutsOutputWithContext(ctx context.Context) BootstrapTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BootstrapTimeoutsOutput)
}

func (i BootstrapTimeoutsArgs) ToBootstrapTimeoutsPtrOutput() BootstrapTimeoutsPtrOutput {
	return i.ToBootstrapTimeoutsPtrOutputWithContext(context.Background())
}

func (i BootstrapTimeoutsArgs) ToBootstrapTimeoutsPtrOutputWithContext(ctx context.Context) BootstrapTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BootstrapTimeoutsOutput).ToBootstrapTimeoutsPtrOutputWithContext(ctx)
}

// BootstrapTimeoutsPtrInput is an input type that accepts BootstrapTimeoutsArgs, BootstrapTimeoutsPtr and BootstrapTimeoutsPtrOutput values.
// You can construct a concrete instance of `BootstrapTimeoutsPtrInput` via:
//
//	        BootstrapTimeoutsArgs{...}
//
//	or:
//
//	        nil
type BootstrapTimeoutsPtrInput interface {
	pulumi.Input

	ToBootstrapTimeoutsPtrOutput() BootstrapTimeoutsPtrOutput
	ToBootstrapTimeoutsPtrOutputWithContext(context.Context) BootstrapTimeoutsPtrOutput
}

type bootstrapTimeoutsPtrType BootstrapTimeoutsArgs

func BootstrapTimeoutsPtr(v *BootstrapTimeoutsArgs) BootstrapTimeoutsPtrInput {
	return (*bootstrapTimeoutsPtrType)(v)
}

func (*bootstrapTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BootstrapTimeouts)(nil)).Elem()
}

func (i *bootstrapTimeoutsPtrType) ToBootstrapTimeoutsPtrOutput() BootstrapTimeoutsPtrOutput {
	return i.ToBootstrapTimeoutsPtrOutputWithContext(context.Background())
}

func (i *bootstrapTimeoutsPtrType) ToBootstrapTimeoutsPtrOutputWithContext(ctx context.Context) BootstrapTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BootstrapTimeoutsPtrOutput)
}

type BootstrapTimeoutsOutput struct{ *pulumi.OutputState }

func (BootstrapTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BootstrapTimeouts)(nil)).Elem()
}

func (o BootstrapTimeoutsOutput) ToBootstrapTimeoutsOutput() BootstrapTimeoutsOutput {
	return o
}

func (o BootstrapTimeoutsOutput) ToBootstrapTimeoutsOutputWithContext(ctx context.Context) BootstrapTimeoutsOutput {
	return o
}

func (o BootstrapTimeoutsOutput) ToBootstrapTimeoutsPtrOutput() BootstrapTimeoutsPtrOutput {
	return o.ToBootstrapTimeoutsPtrOutputWithContext(context.Background())
}

func (o BootstrapTimeoutsOutput) ToBootstrapTimeoutsPtrOutputWithContext(ctx context.Context) BootstrapTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BootstrapTimeouts) *BootstrapTimeouts {
		return &v
	}).(BootstrapTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o BootstrapTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BootstrapTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

type BootstrapTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (BootstrapTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BootstrapTimeouts)(nil)).Elem()
}

func (o BootstrapTimeoutsPtrOutput) ToBootstrapTimeoutsPtrOutput() BootstrapTimeoutsPtrOutput {
	return o
}

func (o BootstrapTimeoutsPtrOutput) ToBootstrapTimeoutsPtrOutputWithContext(ctx context.Context) BootstrapTimeoutsPtrOutput {
	return o
}

func (o BootstrapTimeoutsPtrOutput) Elem() BootstrapTimeoutsOutput {
	return o.ApplyT(func(v *BootstrapTimeouts) BootstrapTimeouts {
		if v != nil {
			return *v
		}
		var ret BootstrapTimeouts
		return ret
	}).(BootstrapTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o BootstrapTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BootstrapTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

type ConfigurationApplyClientConfiguration struct {
	// The client CA certificate
	CaCertificate string `pulumi:"caCertificate"`
	// The client certificate
	ClientCertificate string `pulumi:"clientCertificate"`
	// The client key
	ClientKey string `pulumi:"clientKey"`
}

// ConfigurationApplyClientConfigurationInput is an input type that accepts ConfigurationApplyClientConfigurationArgs and ConfigurationApplyClientConfigurationOutput values.
// You can construct a concrete instance of `ConfigurationApplyClientConfigurationInput` via:
//
//	ConfigurationApplyClientConfigurationArgs{...}
type ConfigurationApplyClientConfigurationInput interface {
	pulumi.Input

	ToConfigurationApplyClientConfigurationOutput() ConfigurationApplyClientConfigurationOutput
	ToConfigurationApplyClientConfigurationOutputWithContext(context.Context) ConfigurationApplyClientConfigurationOutput
}

type ConfigurationApplyClientConfigurationArgs struct {
	// The client CA certificate
	CaCertificate pulumi.StringInput `pulumi:"caCertificate"`
	// The client certificate
	ClientCertificate pulumi.StringInput `pulumi:"clientCertificate"`
	// The client key
	ClientKey pulumi.StringInput `pulumi:"clientKey"`
}

func (ConfigurationApplyClientConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationApplyClientConfiguration)(nil)).Elem()
}

func (i ConfigurationApplyClientConfigurationArgs) ToConfigurationApplyClientConfigurationOutput() ConfigurationApplyClientConfigurationOutput {
	return i.ToConfigurationApplyClientConfigurationOutputWithContext(context.Background())
}

func (i ConfigurationApplyClientConfigurationArgs) ToConfigurationApplyClientConfigurationOutputWithContext(ctx context.Context) ConfigurationApplyClientConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationApplyClientConfigurationOutput)
}

type ConfigurationApplyClientConfigurationOutput struct{ *pulumi.OutputState }

func (ConfigurationApplyClientConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationApplyClientConfiguration)(nil)).Elem()
}

func (o ConfigurationApplyClientConfigurationOutput) ToConfigurationApplyClientConfigurationOutput() ConfigurationApplyClientConfigurationOutput {
	return o
}

func (o ConfigurationApplyClientConfigurationOutput) ToConfigurationApplyClientConfigurationOutputWithContext(ctx context.Context) ConfigurationApplyClientConfigurationOutput {
	return o
}

// The client CA certificate
func (o ConfigurationApplyClientConfigurationOutput) CaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationApplyClientConfiguration) string { return v.CaCertificate }).(pulumi.StringOutput)
}

// The client certificate
func (o ConfigurationApplyClientConfigurationOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationApplyClientConfiguration) string { return v.ClientCertificate }).(pulumi.StringOutput)
}

// The client key
func (o ConfigurationApplyClientConfigurationOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationApplyClientConfiguration) string { return v.ClientKey }).(pulumi.StringOutput)
}

type ConfigurationApplyOnDestroy struct {
	// Graceful indicates whether node should leave etcd before the upgrade, it also enforces etcd checks before leaving. Default true
	Graceful *bool `pulumi:"graceful"`
	// Reboot indicates whether node should reboot or halt after resetting. Default false
	Reboot *bool `pulumi:"reboot"`
	// Reset the machine to the initial state (STATE and EPHEMERAL will be wiped). Default false
	Reset *bool `pulumi:"reset"`
}

// ConfigurationApplyOnDestroyInput is an input type that accepts ConfigurationApplyOnDestroyArgs and ConfigurationApplyOnDestroyOutput values.
// You can construct a concrete instance of `ConfigurationApplyOnDestroyInput` via:
//
//	ConfigurationApplyOnDestroyArgs{...}
type ConfigurationApplyOnDestroyInput interface {
	pulumi.Input

	ToConfigurationApplyOnDestroyOutput() ConfigurationApplyOnDestroyOutput
	ToConfigurationApplyOnDestroyOutputWithContext(context.Context) ConfigurationApplyOnDestroyOutput
}

type ConfigurationApplyOnDestroyArgs struct {
	// Graceful indicates whether node should leave etcd before the upgrade, it also enforces etcd checks before leaving. Default true
	Graceful pulumi.BoolPtrInput `pulumi:"graceful"`
	// Reboot indicates whether node should reboot or halt after resetting. Default false
	Reboot pulumi.BoolPtrInput `pulumi:"reboot"`
	// Reset the machine to the initial state (STATE and EPHEMERAL will be wiped). Default false
	Reset pulumi.BoolPtrInput `pulumi:"reset"`
}

func (ConfigurationApplyOnDestroyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationApplyOnDestroy)(nil)).Elem()
}

func (i ConfigurationApplyOnDestroyArgs) ToConfigurationApplyOnDestroyOutput() ConfigurationApplyOnDestroyOutput {
	return i.ToConfigurationApplyOnDestroyOutputWithContext(context.Background())
}

func (i ConfigurationApplyOnDestroyArgs) ToConfigurationApplyOnDestroyOutputWithContext(ctx context.Context) ConfigurationApplyOnDestroyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationApplyOnDestroyOutput)
}

func (i ConfigurationApplyOnDestroyArgs) ToConfigurationApplyOnDestroyPtrOutput() ConfigurationApplyOnDestroyPtrOutput {
	return i.ToConfigurationApplyOnDestroyPtrOutputWithContext(context.Background())
}

func (i ConfigurationApplyOnDestroyArgs) ToConfigurationApplyOnDestroyPtrOutputWithContext(ctx context.Context) ConfigurationApplyOnDestroyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationApplyOnDestroyOutput).ToConfigurationApplyOnDestroyPtrOutputWithContext(ctx)
}

// ConfigurationApplyOnDestroyPtrInput is an input type that accepts ConfigurationApplyOnDestroyArgs, ConfigurationApplyOnDestroyPtr and ConfigurationApplyOnDestroyPtrOutput values.
// You can construct a concrete instance of `ConfigurationApplyOnDestroyPtrInput` via:
//
//	        ConfigurationApplyOnDestroyArgs{...}
//
//	or:
//
//	        nil
type ConfigurationApplyOnDestroyPtrInput interface {
	pulumi.Input

	ToConfigurationApplyOnDestroyPtrOutput() ConfigurationApplyOnDestroyPtrOutput
	ToConfigurationApplyOnDestroyPtrOutputWithContext(context.Context) ConfigurationApplyOnDestroyPtrOutput
}

type configurationApplyOnDestroyPtrType ConfigurationApplyOnDestroyArgs

func ConfigurationApplyOnDestroyPtr(v *ConfigurationApplyOnDestroyArgs) ConfigurationApplyOnDestroyPtrInput {
	return (*configurationApplyOnDestroyPtrType)(v)
}

func (*configurationApplyOnDestroyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationApplyOnDestroy)(nil)).Elem()
}

func (i *configurationApplyOnDestroyPtrType) ToConfigurationApplyOnDestroyPtrOutput() ConfigurationApplyOnDestroyPtrOutput {
	return i.ToConfigurationApplyOnDestroyPtrOutputWithContext(context.Background())
}

func (i *configurationApplyOnDestroyPtrType) ToConfigurationApplyOnDestroyPtrOutputWithContext(ctx context.Context) ConfigurationApplyOnDestroyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationApplyOnDestroyPtrOutput)
}

type ConfigurationApplyOnDestroyOutput struct{ *pulumi.OutputState }

func (ConfigurationApplyOnDestroyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationApplyOnDestroy)(nil)).Elem()
}

func (o ConfigurationApplyOnDestroyOutput) ToConfigurationApplyOnDestroyOutput() ConfigurationApplyOnDestroyOutput {
	return o
}

func (o ConfigurationApplyOnDestroyOutput) ToConfigurationApplyOnDestroyOutputWithContext(ctx context.Context) ConfigurationApplyOnDestroyOutput {
	return o
}

func (o ConfigurationApplyOnDestroyOutput) ToConfigurationApplyOnDestroyPtrOutput() ConfigurationApplyOnDestroyPtrOutput {
	return o.ToConfigurationApplyOnDestroyPtrOutputWithContext(context.Background())
}

func (o ConfigurationApplyOnDestroyOutput) ToConfigurationApplyOnDestroyPtrOutputWithContext(ctx context.Context) ConfigurationApplyOnDestroyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigurationApplyOnDestroy) *ConfigurationApplyOnDestroy {
		return &v
	}).(ConfigurationApplyOnDestroyPtrOutput)
}

// Graceful indicates whether node should leave etcd before the upgrade, it also enforces etcd checks before leaving. Default true
func (o ConfigurationApplyOnDestroyOutput) Graceful() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigurationApplyOnDestroy) *bool { return v.Graceful }).(pulumi.BoolPtrOutput)
}

// Reboot indicates whether node should reboot or halt after resetting. Default false
func (o ConfigurationApplyOnDestroyOutput) Reboot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigurationApplyOnDestroy) *bool { return v.Reboot }).(pulumi.BoolPtrOutput)
}

// Reset the machine to the initial state (STATE and EPHEMERAL will be wiped). Default false
func (o ConfigurationApplyOnDestroyOutput) Reset() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigurationApplyOnDestroy) *bool { return v.Reset }).(pulumi.BoolPtrOutput)
}

type ConfigurationApplyOnDestroyPtrOutput struct{ *pulumi.OutputState }

func (ConfigurationApplyOnDestroyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationApplyOnDestroy)(nil)).Elem()
}

func (o ConfigurationApplyOnDestroyPtrOutput) ToConfigurationApplyOnDestroyPtrOutput() ConfigurationApplyOnDestroyPtrOutput {
	return o
}

func (o ConfigurationApplyOnDestroyPtrOutput) ToConfigurationApplyOnDestroyPtrOutputWithContext(ctx context.Context) ConfigurationApplyOnDestroyPtrOutput {
	return o
}

func (o ConfigurationApplyOnDestroyPtrOutput) Elem() ConfigurationApplyOnDestroyOutput {
	return o.ApplyT(func(v *ConfigurationApplyOnDestroy) ConfigurationApplyOnDestroy {
		if v != nil {
			return *v
		}
		var ret ConfigurationApplyOnDestroy
		return ret
	}).(ConfigurationApplyOnDestroyOutput)
}

// Graceful indicates whether node should leave etcd before the upgrade, it also enforces etcd checks before leaving. Default true
func (o ConfigurationApplyOnDestroyPtrOutput) Graceful() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigurationApplyOnDestroy) *bool {
		if v == nil {
			return nil
		}
		return v.Graceful
	}).(pulumi.BoolPtrOutput)
}

// Reboot indicates whether node should reboot or halt after resetting. Default false
func (o ConfigurationApplyOnDestroyPtrOutput) Reboot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigurationApplyOnDestroy) *bool {
		if v == nil {
			return nil
		}
		return v.Reboot
	}).(pulumi.BoolPtrOutput)
}

// Reset the machine to the initial state (STATE and EPHEMERAL will be wiped). Default false
func (o ConfigurationApplyOnDestroyPtrOutput) Reset() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigurationApplyOnDestroy) *bool {
		if v == nil {
			return nil
		}
		return v.Reset
	}).(pulumi.BoolPtrOutput)
}

type SecretsClientConfiguration struct {
	// The client CA certificate
	CaCertificate *string `pulumi:"caCertificate"`
	// The client certificate
	ClientCertificate *string `pulumi:"clientCertificate"`
	// The client key
	ClientKey *string `pulumi:"clientKey"`
}

// SecretsClientConfigurationInput is an input type that accepts SecretsClientConfigurationArgs and SecretsClientConfigurationOutput values.
// You can construct a concrete instance of `SecretsClientConfigurationInput` via:
//
//	SecretsClientConfigurationArgs{...}
type SecretsClientConfigurationInput interface {
	pulumi.Input

	ToSecretsClientConfigurationOutput() SecretsClientConfigurationOutput
	ToSecretsClientConfigurationOutputWithContext(context.Context) SecretsClientConfigurationOutput
}

type SecretsClientConfigurationArgs struct {
	// The client CA certificate
	CaCertificate pulumi.StringPtrInput `pulumi:"caCertificate"`
	// The client certificate
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// The client key
	ClientKey pulumi.StringPtrInput `pulumi:"clientKey"`
}

func (SecretsClientConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsClientConfiguration)(nil)).Elem()
}

func (i SecretsClientConfigurationArgs) ToSecretsClientConfigurationOutput() SecretsClientConfigurationOutput {
	return i.ToSecretsClientConfigurationOutputWithContext(context.Background())
}

func (i SecretsClientConfigurationArgs) ToSecretsClientConfigurationOutputWithContext(ctx context.Context) SecretsClientConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsClientConfigurationOutput)
}

type SecretsClientConfigurationOutput struct{ *pulumi.OutputState }

func (SecretsClientConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsClientConfiguration)(nil)).Elem()
}

func (o SecretsClientConfigurationOutput) ToSecretsClientConfigurationOutput() SecretsClientConfigurationOutput {
	return o
}

func (o SecretsClientConfigurationOutput) ToSecretsClientConfigurationOutputWithContext(ctx context.Context) SecretsClientConfigurationOutput {
	return o
}

// The client CA certificate
func (o SecretsClientConfigurationOutput) CaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsClientConfiguration) *string { return v.CaCertificate }).(pulumi.StringPtrOutput)
}

// The client certificate
func (o SecretsClientConfigurationOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsClientConfiguration) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// The client key
func (o SecretsClientConfigurationOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsClientConfiguration) *string { return v.ClientKey }).(pulumi.StringPtrOutput)
}

type SecretsMachineSecrets struct {
	Certs *SecretsMachineSecretsCerts `pulumi:"certs"`
	// The cluster secrets
	Cluster *SecretsMachineSecretsCluster `pulumi:"cluster"`
	// kubernetes cluster secrets
	Secrets *SecretsMachineSecretsSecrets `pulumi:"secrets"`
	// trustd secrets
	Trustdinfo *SecretsMachineSecretsTrustdinfo `pulumi:"trustdinfo"`
}

// SecretsMachineSecretsInput is an input type that accepts SecretsMachineSecretsArgs and SecretsMachineSecretsOutput values.
// You can construct a concrete instance of `SecretsMachineSecretsInput` via:
//
//	SecretsMachineSecretsArgs{...}
type SecretsMachineSecretsInput interface {
	pulumi.Input

	ToSecretsMachineSecretsOutput() SecretsMachineSecretsOutput
	ToSecretsMachineSecretsOutputWithContext(context.Context) SecretsMachineSecretsOutput
}

type SecretsMachineSecretsArgs struct {
	Certs SecretsMachineSecretsCertsPtrInput `pulumi:"certs"`
	// The cluster secrets
	Cluster SecretsMachineSecretsClusterPtrInput `pulumi:"cluster"`
	// kubernetes cluster secrets
	Secrets SecretsMachineSecretsSecretsPtrInput `pulumi:"secrets"`
	// trustd secrets
	Trustdinfo SecretsMachineSecretsTrustdinfoPtrInput `pulumi:"trustdinfo"`
}

func (SecretsMachineSecretsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecrets)(nil)).Elem()
}

func (i SecretsMachineSecretsArgs) ToSecretsMachineSecretsOutput() SecretsMachineSecretsOutput {
	return i.ToSecretsMachineSecretsOutputWithContext(context.Background())
}

func (i SecretsMachineSecretsArgs) ToSecretsMachineSecretsOutputWithContext(ctx context.Context) SecretsMachineSecretsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsOutput)
}

type SecretsMachineSecretsOutput struct{ *pulumi.OutputState }

func (SecretsMachineSecretsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecrets)(nil)).Elem()
}

func (o SecretsMachineSecretsOutput) ToSecretsMachineSecretsOutput() SecretsMachineSecretsOutput {
	return o
}

func (o SecretsMachineSecretsOutput) ToSecretsMachineSecretsOutputWithContext(ctx context.Context) SecretsMachineSecretsOutput {
	return o
}

func (o SecretsMachineSecretsOutput) Certs() SecretsMachineSecretsCertsPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecrets) *SecretsMachineSecretsCerts { return v.Certs }).(SecretsMachineSecretsCertsPtrOutput)
}

// The cluster secrets
func (o SecretsMachineSecretsOutput) Cluster() SecretsMachineSecretsClusterPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecrets) *SecretsMachineSecretsCluster { return v.Cluster }).(SecretsMachineSecretsClusterPtrOutput)
}

// kubernetes cluster secrets
func (o SecretsMachineSecretsOutput) Secrets() SecretsMachineSecretsSecretsPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecrets) *SecretsMachineSecretsSecrets { return v.Secrets }).(SecretsMachineSecretsSecretsPtrOutput)
}

// trustd secrets
func (o SecretsMachineSecretsOutput) Trustdinfo() SecretsMachineSecretsTrustdinfoPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecrets) *SecretsMachineSecretsTrustdinfo { return v.Trustdinfo }).(SecretsMachineSecretsTrustdinfoPtrOutput)
}

type SecretsMachineSecretsCerts struct {
	// The certificate and key pair
	Etcd *SecretsMachineSecretsCertsEtcd `pulumi:"etcd"`
	// The certificate and key pair
	K8s *SecretsMachineSecretsCertsK8s `pulumi:"k8s"`
	// The certificate and key pair
	K8sAggregator *SecretsMachineSecretsCertsK8sAggregator `pulumi:"k8sAggregator"`
	// The service account secrets
	K8sServiceaccount *SecretsMachineSecretsCertsK8sServiceaccount `pulumi:"k8sServiceaccount"`
	// The certificate and key pair
	Os *SecretsMachineSecretsCertsOs `pulumi:"os"`
}

// SecretsMachineSecretsCertsInput is an input type that accepts SecretsMachineSecretsCertsArgs and SecretsMachineSecretsCertsOutput values.
// You can construct a concrete instance of `SecretsMachineSecretsCertsInput` via:
//
//	SecretsMachineSecretsCertsArgs{...}
type SecretsMachineSecretsCertsInput interface {
	pulumi.Input

	ToSecretsMachineSecretsCertsOutput() SecretsMachineSecretsCertsOutput
	ToSecretsMachineSecretsCertsOutputWithContext(context.Context) SecretsMachineSecretsCertsOutput
}

type SecretsMachineSecretsCertsArgs struct {
	// The certificate and key pair
	Etcd SecretsMachineSecretsCertsEtcdPtrInput `pulumi:"etcd"`
	// The certificate and key pair
	K8s SecretsMachineSecretsCertsK8sPtrInput `pulumi:"k8s"`
	// The certificate and key pair
	K8sAggregator SecretsMachineSecretsCertsK8sAggregatorPtrInput `pulumi:"k8sAggregator"`
	// The service account secrets
	K8sServiceaccount SecretsMachineSecretsCertsK8sServiceaccountPtrInput `pulumi:"k8sServiceaccount"`
	// The certificate and key pair
	Os SecretsMachineSecretsCertsOsPtrInput `pulumi:"os"`
}

func (SecretsMachineSecretsCertsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecretsCerts)(nil)).Elem()
}

func (i SecretsMachineSecretsCertsArgs) ToSecretsMachineSecretsCertsOutput() SecretsMachineSecretsCertsOutput {
	return i.ToSecretsMachineSecretsCertsOutputWithContext(context.Background())
}

func (i SecretsMachineSecretsCertsArgs) ToSecretsMachineSecretsCertsOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsCertsOutput)
}

func (i SecretsMachineSecretsCertsArgs) ToSecretsMachineSecretsCertsPtrOutput() SecretsMachineSecretsCertsPtrOutput {
	return i.ToSecretsMachineSecretsCertsPtrOutputWithContext(context.Background())
}

func (i SecretsMachineSecretsCertsArgs) ToSecretsMachineSecretsCertsPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsCertsOutput).ToSecretsMachineSecretsCertsPtrOutputWithContext(ctx)
}

// SecretsMachineSecretsCertsPtrInput is an input type that accepts SecretsMachineSecretsCertsArgs, SecretsMachineSecretsCertsPtr and SecretsMachineSecretsCertsPtrOutput values.
// You can construct a concrete instance of `SecretsMachineSecretsCertsPtrInput` via:
//
//	        SecretsMachineSecretsCertsArgs{...}
//
//	or:
//
//	        nil
type SecretsMachineSecretsCertsPtrInput interface {
	pulumi.Input

	ToSecretsMachineSecretsCertsPtrOutput() SecretsMachineSecretsCertsPtrOutput
	ToSecretsMachineSecretsCertsPtrOutputWithContext(context.Context) SecretsMachineSecretsCertsPtrOutput
}

type secretsMachineSecretsCertsPtrType SecretsMachineSecretsCertsArgs

func SecretsMachineSecretsCertsPtr(v *SecretsMachineSecretsCertsArgs) SecretsMachineSecretsCertsPtrInput {
	return (*secretsMachineSecretsCertsPtrType)(v)
}

func (*secretsMachineSecretsCertsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsMachineSecretsCerts)(nil)).Elem()
}

func (i *secretsMachineSecretsCertsPtrType) ToSecretsMachineSecretsCertsPtrOutput() SecretsMachineSecretsCertsPtrOutput {
	return i.ToSecretsMachineSecretsCertsPtrOutputWithContext(context.Background())
}

func (i *secretsMachineSecretsCertsPtrType) ToSecretsMachineSecretsCertsPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsCertsPtrOutput)
}

type SecretsMachineSecretsCertsOutput struct{ *pulumi.OutputState }

func (SecretsMachineSecretsCertsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecretsCerts)(nil)).Elem()
}

func (o SecretsMachineSecretsCertsOutput) ToSecretsMachineSecretsCertsOutput() SecretsMachineSecretsCertsOutput {
	return o
}

func (o SecretsMachineSecretsCertsOutput) ToSecretsMachineSecretsCertsOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsOutput {
	return o
}

func (o SecretsMachineSecretsCertsOutput) ToSecretsMachineSecretsCertsPtrOutput() SecretsMachineSecretsCertsPtrOutput {
	return o.ToSecretsMachineSecretsCertsPtrOutputWithContext(context.Background())
}

func (o SecretsMachineSecretsCertsOutput) ToSecretsMachineSecretsCertsPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretsMachineSecretsCerts) *SecretsMachineSecretsCerts {
		return &v
	}).(SecretsMachineSecretsCertsPtrOutput)
}

// The certificate and key pair
func (o SecretsMachineSecretsCertsOutput) Etcd() SecretsMachineSecretsCertsEtcdPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsCerts) *SecretsMachineSecretsCertsEtcd { return v.Etcd }).(SecretsMachineSecretsCertsEtcdPtrOutput)
}

// The certificate and key pair
func (o SecretsMachineSecretsCertsOutput) K8s() SecretsMachineSecretsCertsK8sPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsCerts) *SecretsMachineSecretsCertsK8s { return v.K8s }).(SecretsMachineSecretsCertsK8sPtrOutput)
}

// The certificate and key pair
func (o SecretsMachineSecretsCertsOutput) K8sAggregator() SecretsMachineSecretsCertsK8sAggregatorPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsCerts) *SecretsMachineSecretsCertsK8sAggregator { return v.K8sAggregator }).(SecretsMachineSecretsCertsK8sAggregatorPtrOutput)
}

// The service account secrets
func (o SecretsMachineSecretsCertsOutput) K8sServiceaccount() SecretsMachineSecretsCertsK8sServiceaccountPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsCerts) *SecretsMachineSecretsCertsK8sServiceaccount {
		return v.K8sServiceaccount
	}).(SecretsMachineSecretsCertsK8sServiceaccountPtrOutput)
}

// The certificate and key pair
func (o SecretsMachineSecretsCertsOutput) Os() SecretsMachineSecretsCertsOsPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsCerts) *SecretsMachineSecretsCertsOs { return v.Os }).(SecretsMachineSecretsCertsOsPtrOutput)
}

type SecretsMachineSecretsCertsPtrOutput struct{ *pulumi.OutputState }

func (SecretsMachineSecretsCertsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsMachineSecretsCerts)(nil)).Elem()
}

func (o SecretsMachineSecretsCertsPtrOutput) ToSecretsMachineSecretsCertsPtrOutput() SecretsMachineSecretsCertsPtrOutput {
	return o
}

func (o SecretsMachineSecretsCertsPtrOutput) ToSecretsMachineSecretsCertsPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsPtrOutput {
	return o
}

func (o SecretsMachineSecretsCertsPtrOutput) Elem() SecretsMachineSecretsCertsOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCerts) SecretsMachineSecretsCerts {
		if v != nil {
			return *v
		}
		var ret SecretsMachineSecretsCerts
		return ret
	}).(SecretsMachineSecretsCertsOutput)
}

// The certificate and key pair
func (o SecretsMachineSecretsCertsPtrOutput) Etcd() SecretsMachineSecretsCertsEtcdPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCerts) *SecretsMachineSecretsCertsEtcd {
		if v == nil {
			return nil
		}
		return v.Etcd
	}).(SecretsMachineSecretsCertsEtcdPtrOutput)
}

// The certificate and key pair
func (o SecretsMachineSecretsCertsPtrOutput) K8s() SecretsMachineSecretsCertsK8sPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCerts) *SecretsMachineSecretsCertsK8s {
		if v == nil {
			return nil
		}
		return v.K8s
	}).(SecretsMachineSecretsCertsK8sPtrOutput)
}

// The certificate and key pair
func (o SecretsMachineSecretsCertsPtrOutput) K8sAggregator() SecretsMachineSecretsCertsK8sAggregatorPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCerts) *SecretsMachineSecretsCertsK8sAggregator {
		if v == nil {
			return nil
		}
		return v.K8sAggregator
	}).(SecretsMachineSecretsCertsK8sAggregatorPtrOutput)
}

// The service account secrets
func (o SecretsMachineSecretsCertsPtrOutput) K8sServiceaccount() SecretsMachineSecretsCertsK8sServiceaccountPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCerts) *SecretsMachineSecretsCertsK8sServiceaccount {
		if v == nil {
			return nil
		}
		return v.K8sServiceaccount
	}).(SecretsMachineSecretsCertsK8sServiceaccountPtrOutput)
}

// The certificate and key pair
func (o SecretsMachineSecretsCertsPtrOutput) Os() SecretsMachineSecretsCertsOsPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCerts) *SecretsMachineSecretsCertsOs {
		if v == nil {
			return nil
		}
		return v.Os
	}).(SecretsMachineSecretsCertsOsPtrOutput)
}

type SecretsMachineSecretsCertsEtcd struct {
	// certificate data
	Cert *string `pulumi:"cert"`
	// key data
	Key *string `pulumi:"key"`
}

// SecretsMachineSecretsCertsEtcdInput is an input type that accepts SecretsMachineSecretsCertsEtcdArgs and SecretsMachineSecretsCertsEtcdOutput values.
// You can construct a concrete instance of `SecretsMachineSecretsCertsEtcdInput` via:
//
//	SecretsMachineSecretsCertsEtcdArgs{...}
type SecretsMachineSecretsCertsEtcdInput interface {
	pulumi.Input

	ToSecretsMachineSecretsCertsEtcdOutput() SecretsMachineSecretsCertsEtcdOutput
	ToSecretsMachineSecretsCertsEtcdOutputWithContext(context.Context) SecretsMachineSecretsCertsEtcdOutput
}

type SecretsMachineSecretsCertsEtcdArgs struct {
	// certificate data
	Cert pulumi.StringPtrInput `pulumi:"cert"`
	// key data
	Key pulumi.StringPtrInput `pulumi:"key"`
}

func (SecretsMachineSecretsCertsEtcdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecretsCertsEtcd)(nil)).Elem()
}

func (i SecretsMachineSecretsCertsEtcdArgs) ToSecretsMachineSecretsCertsEtcdOutput() SecretsMachineSecretsCertsEtcdOutput {
	return i.ToSecretsMachineSecretsCertsEtcdOutputWithContext(context.Background())
}

func (i SecretsMachineSecretsCertsEtcdArgs) ToSecretsMachineSecretsCertsEtcdOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsEtcdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsCertsEtcdOutput)
}

func (i SecretsMachineSecretsCertsEtcdArgs) ToSecretsMachineSecretsCertsEtcdPtrOutput() SecretsMachineSecretsCertsEtcdPtrOutput {
	return i.ToSecretsMachineSecretsCertsEtcdPtrOutputWithContext(context.Background())
}

func (i SecretsMachineSecretsCertsEtcdArgs) ToSecretsMachineSecretsCertsEtcdPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsEtcdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsCertsEtcdOutput).ToSecretsMachineSecretsCertsEtcdPtrOutputWithContext(ctx)
}

// SecretsMachineSecretsCertsEtcdPtrInput is an input type that accepts SecretsMachineSecretsCertsEtcdArgs, SecretsMachineSecretsCertsEtcdPtr and SecretsMachineSecretsCertsEtcdPtrOutput values.
// You can construct a concrete instance of `SecretsMachineSecretsCertsEtcdPtrInput` via:
//
//	        SecretsMachineSecretsCertsEtcdArgs{...}
//
//	or:
//
//	        nil
type SecretsMachineSecretsCertsEtcdPtrInput interface {
	pulumi.Input

	ToSecretsMachineSecretsCertsEtcdPtrOutput() SecretsMachineSecretsCertsEtcdPtrOutput
	ToSecretsMachineSecretsCertsEtcdPtrOutputWithContext(context.Context) SecretsMachineSecretsCertsEtcdPtrOutput
}

type secretsMachineSecretsCertsEtcdPtrType SecretsMachineSecretsCertsEtcdArgs

func SecretsMachineSecretsCertsEtcdPtr(v *SecretsMachineSecretsCertsEtcdArgs) SecretsMachineSecretsCertsEtcdPtrInput {
	return (*secretsMachineSecretsCertsEtcdPtrType)(v)
}

func (*secretsMachineSecretsCertsEtcdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsMachineSecretsCertsEtcd)(nil)).Elem()
}

func (i *secretsMachineSecretsCertsEtcdPtrType) ToSecretsMachineSecretsCertsEtcdPtrOutput() SecretsMachineSecretsCertsEtcdPtrOutput {
	return i.ToSecretsMachineSecretsCertsEtcdPtrOutputWithContext(context.Background())
}

func (i *secretsMachineSecretsCertsEtcdPtrType) ToSecretsMachineSecretsCertsEtcdPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsEtcdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsCertsEtcdPtrOutput)
}

type SecretsMachineSecretsCertsEtcdOutput struct{ *pulumi.OutputState }

func (SecretsMachineSecretsCertsEtcdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecretsCertsEtcd)(nil)).Elem()
}

func (o SecretsMachineSecretsCertsEtcdOutput) ToSecretsMachineSecretsCertsEtcdOutput() SecretsMachineSecretsCertsEtcdOutput {
	return o
}

func (o SecretsMachineSecretsCertsEtcdOutput) ToSecretsMachineSecretsCertsEtcdOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsEtcdOutput {
	return o
}

func (o SecretsMachineSecretsCertsEtcdOutput) ToSecretsMachineSecretsCertsEtcdPtrOutput() SecretsMachineSecretsCertsEtcdPtrOutput {
	return o.ToSecretsMachineSecretsCertsEtcdPtrOutputWithContext(context.Background())
}

func (o SecretsMachineSecretsCertsEtcdOutput) ToSecretsMachineSecretsCertsEtcdPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsEtcdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretsMachineSecretsCertsEtcd) *SecretsMachineSecretsCertsEtcd {
		return &v
	}).(SecretsMachineSecretsCertsEtcdPtrOutput)
}

// certificate data
func (o SecretsMachineSecretsCertsEtcdOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsCertsEtcd) *string { return v.Cert }).(pulumi.StringPtrOutput)
}

// key data
func (o SecretsMachineSecretsCertsEtcdOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsCertsEtcd) *string { return v.Key }).(pulumi.StringPtrOutput)
}

type SecretsMachineSecretsCertsEtcdPtrOutput struct{ *pulumi.OutputState }

func (SecretsMachineSecretsCertsEtcdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsMachineSecretsCertsEtcd)(nil)).Elem()
}

func (o SecretsMachineSecretsCertsEtcdPtrOutput) ToSecretsMachineSecretsCertsEtcdPtrOutput() SecretsMachineSecretsCertsEtcdPtrOutput {
	return o
}

func (o SecretsMachineSecretsCertsEtcdPtrOutput) ToSecretsMachineSecretsCertsEtcdPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsEtcdPtrOutput {
	return o
}

func (o SecretsMachineSecretsCertsEtcdPtrOutput) Elem() SecretsMachineSecretsCertsEtcdOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCertsEtcd) SecretsMachineSecretsCertsEtcd {
		if v != nil {
			return *v
		}
		var ret SecretsMachineSecretsCertsEtcd
		return ret
	}).(SecretsMachineSecretsCertsEtcdOutput)
}

// certificate data
func (o SecretsMachineSecretsCertsEtcdPtrOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCertsEtcd) *string {
		if v == nil {
			return nil
		}
		return v.Cert
	}).(pulumi.StringPtrOutput)
}

// key data
func (o SecretsMachineSecretsCertsEtcdPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCertsEtcd) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

type SecretsMachineSecretsCertsK8s struct {
	// certificate data
	Cert *string `pulumi:"cert"`
	// key data
	Key *string `pulumi:"key"`
}

// SecretsMachineSecretsCertsK8sInput is an input type that accepts SecretsMachineSecretsCertsK8sArgs and SecretsMachineSecretsCertsK8sOutput values.
// You can construct a concrete instance of `SecretsMachineSecretsCertsK8sInput` via:
//
//	SecretsMachineSecretsCertsK8sArgs{...}
type SecretsMachineSecretsCertsK8sInput interface {
	pulumi.Input

	ToSecretsMachineSecretsCertsK8sOutput() SecretsMachineSecretsCertsK8sOutput
	ToSecretsMachineSecretsCertsK8sOutputWithContext(context.Context) SecretsMachineSecretsCertsK8sOutput
}

type SecretsMachineSecretsCertsK8sArgs struct {
	// certificate data
	Cert pulumi.StringPtrInput `pulumi:"cert"`
	// key data
	Key pulumi.StringPtrInput `pulumi:"key"`
}

func (SecretsMachineSecretsCertsK8sArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecretsCertsK8s)(nil)).Elem()
}

func (i SecretsMachineSecretsCertsK8sArgs) ToSecretsMachineSecretsCertsK8sOutput() SecretsMachineSecretsCertsK8sOutput {
	return i.ToSecretsMachineSecretsCertsK8sOutputWithContext(context.Background())
}

func (i SecretsMachineSecretsCertsK8sArgs) ToSecretsMachineSecretsCertsK8sOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsK8sOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsCertsK8sOutput)
}

func (i SecretsMachineSecretsCertsK8sArgs) ToSecretsMachineSecretsCertsK8sPtrOutput() SecretsMachineSecretsCertsK8sPtrOutput {
	return i.ToSecretsMachineSecretsCertsK8sPtrOutputWithContext(context.Background())
}

func (i SecretsMachineSecretsCertsK8sArgs) ToSecretsMachineSecretsCertsK8sPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsK8sPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsCertsK8sOutput).ToSecretsMachineSecretsCertsK8sPtrOutputWithContext(ctx)
}

// SecretsMachineSecretsCertsK8sPtrInput is an input type that accepts SecretsMachineSecretsCertsK8sArgs, SecretsMachineSecretsCertsK8sPtr and SecretsMachineSecretsCertsK8sPtrOutput values.
// You can construct a concrete instance of `SecretsMachineSecretsCertsK8sPtrInput` via:
//
//	        SecretsMachineSecretsCertsK8sArgs{...}
//
//	or:
//
//	        nil
type SecretsMachineSecretsCertsK8sPtrInput interface {
	pulumi.Input

	ToSecretsMachineSecretsCertsK8sPtrOutput() SecretsMachineSecretsCertsK8sPtrOutput
	ToSecretsMachineSecretsCertsK8sPtrOutputWithContext(context.Context) SecretsMachineSecretsCertsK8sPtrOutput
}

type secretsMachineSecretsCertsK8sPtrType SecretsMachineSecretsCertsK8sArgs

func SecretsMachineSecretsCertsK8sPtr(v *SecretsMachineSecretsCertsK8sArgs) SecretsMachineSecretsCertsK8sPtrInput {
	return (*secretsMachineSecretsCertsK8sPtrType)(v)
}

func (*secretsMachineSecretsCertsK8sPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsMachineSecretsCertsK8s)(nil)).Elem()
}

func (i *secretsMachineSecretsCertsK8sPtrType) ToSecretsMachineSecretsCertsK8sPtrOutput() SecretsMachineSecretsCertsK8sPtrOutput {
	return i.ToSecretsMachineSecretsCertsK8sPtrOutputWithContext(context.Background())
}

func (i *secretsMachineSecretsCertsK8sPtrType) ToSecretsMachineSecretsCertsK8sPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsK8sPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsCertsK8sPtrOutput)
}

type SecretsMachineSecretsCertsK8sOutput struct{ *pulumi.OutputState }

func (SecretsMachineSecretsCertsK8sOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecretsCertsK8s)(nil)).Elem()
}

func (o SecretsMachineSecretsCertsK8sOutput) ToSecretsMachineSecretsCertsK8sOutput() SecretsMachineSecretsCertsK8sOutput {
	return o
}

func (o SecretsMachineSecretsCertsK8sOutput) ToSecretsMachineSecretsCertsK8sOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsK8sOutput {
	return o
}

func (o SecretsMachineSecretsCertsK8sOutput) ToSecretsMachineSecretsCertsK8sPtrOutput() SecretsMachineSecretsCertsK8sPtrOutput {
	return o.ToSecretsMachineSecretsCertsK8sPtrOutputWithContext(context.Background())
}

func (o SecretsMachineSecretsCertsK8sOutput) ToSecretsMachineSecretsCertsK8sPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsK8sPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretsMachineSecretsCertsK8s) *SecretsMachineSecretsCertsK8s {
		return &v
	}).(SecretsMachineSecretsCertsK8sPtrOutput)
}

// certificate data
func (o SecretsMachineSecretsCertsK8sOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsCertsK8s) *string { return v.Cert }).(pulumi.StringPtrOutput)
}

// key data
func (o SecretsMachineSecretsCertsK8sOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsCertsK8s) *string { return v.Key }).(pulumi.StringPtrOutput)
}

type SecretsMachineSecretsCertsK8sPtrOutput struct{ *pulumi.OutputState }

func (SecretsMachineSecretsCertsK8sPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsMachineSecretsCertsK8s)(nil)).Elem()
}

func (o SecretsMachineSecretsCertsK8sPtrOutput) ToSecretsMachineSecretsCertsK8sPtrOutput() SecretsMachineSecretsCertsK8sPtrOutput {
	return o
}

func (o SecretsMachineSecretsCertsK8sPtrOutput) ToSecretsMachineSecretsCertsK8sPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsK8sPtrOutput {
	return o
}

func (o SecretsMachineSecretsCertsK8sPtrOutput) Elem() SecretsMachineSecretsCertsK8sOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCertsK8s) SecretsMachineSecretsCertsK8s {
		if v != nil {
			return *v
		}
		var ret SecretsMachineSecretsCertsK8s
		return ret
	}).(SecretsMachineSecretsCertsK8sOutput)
}

// certificate data
func (o SecretsMachineSecretsCertsK8sPtrOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCertsK8s) *string {
		if v == nil {
			return nil
		}
		return v.Cert
	}).(pulumi.StringPtrOutput)
}

// key data
func (o SecretsMachineSecretsCertsK8sPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCertsK8s) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

type SecretsMachineSecretsCertsK8sAggregator struct {
	// certificate data
	Cert *string `pulumi:"cert"`
	// key data
	Key *string `pulumi:"key"`
}

// SecretsMachineSecretsCertsK8sAggregatorInput is an input type that accepts SecretsMachineSecretsCertsK8sAggregatorArgs and SecretsMachineSecretsCertsK8sAggregatorOutput values.
// You can construct a concrete instance of `SecretsMachineSecretsCertsK8sAggregatorInput` via:
//
//	SecretsMachineSecretsCertsK8sAggregatorArgs{...}
type SecretsMachineSecretsCertsK8sAggregatorInput interface {
	pulumi.Input

	ToSecretsMachineSecretsCertsK8sAggregatorOutput() SecretsMachineSecretsCertsK8sAggregatorOutput
	ToSecretsMachineSecretsCertsK8sAggregatorOutputWithContext(context.Context) SecretsMachineSecretsCertsK8sAggregatorOutput
}

type SecretsMachineSecretsCertsK8sAggregatorArgs struct {
	// certificate data
	Cert pulumi.StringPtrInput `pulumi:"cert"`
	// key data
	Key pulumi.StringPtrInput `pulumi:"key"`
}

func (SecretsMachineSecretsCertsK8sAggregatorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecretsCertsK8sAggregator)(nil)).Elem()
}

func (i SecretsMachineSecretsCertsK8sAggregatorArgs) ToSecretsMachineSecretsCertsK8sAggregatorOutput() SecretsMachineSecretsCertsK8sAggregatorOutput {
	return i.ToSecretsMachineSecretsCertsK8sAggregatorOutputWithContext(context.Background())
}

func (i SecretsMachineSecretsCertsK8sAggregatorArgs) ToSecretsMachineSecretsCertsK8sAggregatorOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsK8sAggregatorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsCertsK8sAggregatorOutput)
}

func (i SecretsMachineSecretsCertsK8sAggregatorArgs) ToSecretsMachineSecretsCertsK8sAggregatorPtrOutput() SecretsMachineSecretsCertsK8sAggregatorPtrOutput {
	return i.ToSecretsMachineSecretsCertsK8sAggregatorPtrOutputWithContext(context.Background())
}

func (i SecretsMachineSecretsCertsK8sAggregatorArgs) ToSecretsMachineSecretsCertsK8sAggregatorPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsK8sAggregatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsCertsK8sAggregatorOutput).ToSecretsMachineSecretsCertsK8sAggregatorPtrOutputWithContext(ctx)
}

// SecretsMachineSecretsCertsK8sAggregatorPtrInput is an input type that accepts SecretsMachineSecretsCertsK8sAggregatorArgs, SecretsMachineSecretsCertsK8sAggregatorPtr and SecretsMachineSecretsCertsK8sAggregatorPtrOutput values.
// You can construct a concrete instance of `SecretsMachineSecretsCertsK8sAggregatorPtrInput` via:
//
//	        SecretsMachineSecretsCertsK8sAggregatorArgs{...}
//
//	or:
//
//	        nil
type SecretsMachineSecretsCertsK8sAggregatorPtrInput interface {
	pulumi.Input

	ToSecretsMachineSecretsCertsK8sAggregatorPtrOutput() SecretsMachineSecretsCertsK8sAggregatorPtrOutput
	ToSecretsMachineSecretsCertsK8sAggregatorPtrOutputWithContext(context.Context) SecretsMachineSecretsCertsK8sAggregatorPtrOutput
}

type secretsMachineSecretsCertsK8sAggregatorPtrType SecretsMachineSecretsCertsK8sAggregatorArgs

func SecretsMachineSecretsCertsK8sAggregatorPtr(v *SecretsMachineSecretsCertsK8sAggregatorArgs) SecretsMachineSecretsCertsK8sAggregatorPtrInput {
	return (*secretsMachineSecretsCertsK8sAggregatorPtrType)(v)
}

func (*secretsMachineSecretsCertsK8sAggregatorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsMachineSecretsCertsK8sAggregator)(nil)).Elem()
}

func (i *secretsMachineSecretsCertsK8sAggregatorPtrType) ToSecretsMachineSecretsCertsK8sAggregatorPtrOutput() SecretsMachineSecretsCertsK8sAggregatorPtrOutput {
	return i.ToSecretsMachineSecretsCertsK8sAggregatorPtrOutputWithContext(context.Background())
}

func (i *secretsMachineSecretsCertsK8sAggregatorPtrType) ToSecretsMachineSecretsCertsK8sAggregatorPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsK8sAggregatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsCertsK8sAggregatorPtrOutput)
}

type SecretsMachineSecretsCertsK8sAggregatorOutput struct{ *pulumi.OutputState }

func (SecretsMachineSecretsCertsK8sAggregatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecretsCertsK8sAggregator)(nil)).Elem()
}

func (o SecretsMachineSecretsCertsK8sAggregatorOutput) ToSecretsMachineSecretsCertsK8sAggregatorOutput() SecretsMachineSecretsCertsK8sAggregatorOutput {
	return o
}

func (o SecretsMachineSecretsCertsK8sAggregatorOutput) ToSecretsMachineSecretsCertsK8sAggregatorOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsK8sAggregatorOutput {
	return o
}

func (o SecretsMachineSecretsCertsK8sAggregatorOutput) ToSecretsMachineSecretsCertsK8sAggregatorPtrOutput() SecretsMachineSecretsCertsK8sAggregatorPtrOutput {
	return o.ToSecretsMachineSecretsCertsK8sAggregatorPtrOutputWithContext(context.Background())
}

func (o SecretsMachineSecretsCertsK8sAggregatorOutput) ToSecretsMachineSecretsCertsK8sAggregatorPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsK8sAggregatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretsMachineSecretsCertsK8sAggregator) *SecretsMachineSecretsCertsK8sAggregator {
		return &v
	}).(SecretsMachineSecretsCertsK8sAggregatorPtrOutput)
}

// certificate data
func (o SecretsMachineSecretsCertsK8sAggregatorOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsCertsK8sAggregator) *string { return v.Cert }).(pulumi.StringPtrOutput)
}

// key data
func (o SecretsMachineSecretsCertsK8sAggregatorOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsCertsK8sAggregator) *string { return v.Key }).(pulumi.StringPtrOutput)
}

type SecretsMachineSecretsCertsK8sAggregatorPtrOutput struct{ *pulumi.OutputState }

func (SecretsMachineSecretsCertsK8sAggregatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsMachineSecretsCertsK8sAggregator)(nil)).Elem()
}

func (o SecretsMachineSecretsCertsK8sAggregatorPtrOutput) ToSecretsMachineSecretsCertsK8sAggregatorPtrOutput() SecretsMachineSecretsCertsK8sAggregatorPtrOutput {
	return o
}

func (o SecretsMachineSecretsCertsK8sAggregatorPtrOutput) ToSecretsMachineSecretsCertsK8sAggregatorPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsK8sAggregatorPtrOutput {
	return o
}

func (o SecretsMachineSecretsCertsK8sAggregatorPtrOutput) Elem() SecretsMachineSecretsCertsK8sAggregatorOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCertsK8sAggregator) SecretsMachineSecretsCertsK8sAggregator {
		if v != nil {
			return *v
		}
		var ret SecretsMachineSecretsCertsK8sAggregator
		return ret
	}).(SecretsMachineSecretsCertsK8sAggregatorOutput)
}

// certificate data
func (o SecretsMachineSecretsCertsK8sAggregatorPtrOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCertsK8sAggregator) *string {
		if v == nil {
			return nil
		}
		return v.Cert
	}).(pulumi.StringPtrOutput)
}

// key data
func (o SecretsMachineSecretsCertsK8sAggregatorPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCertsK8sAggregator) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

type SecretsMachineSecretsCertsK8sServiceaccount struct {
	// The service account key
	Key *string `pulumi:"key"`
}

// SecretsMachineSecretsCertsK8sServiceaccountInput is an input type that accepts SecretsMachineSecretsCertsK8sServiceaccountArgs and SecretsMachineSecretsCertsK8sServiceaccountOutput values.
// You can construct a concrete instance of `SecretsMachineSecretsCertsK8sServiceaccountInput` via:
//
//	SecretsMachineSecretsCertsK8sServiceaccountArgs{...}
type SecretsMachineSecretsCertsK8sServiceaccountInput interface {
	pulumi.Input

	ToSecretsMachineSecretsCertsK8sServiceaccountOutput() SecretsMachineSecretsCertsK8sServiceaccountOutput
	ToSecretsMachineSecretsCertsK8sServiceaccountOutputWithContext(context.Context) SecretsMachineSecretsCertsK8sServiceaccountOutput
}

type SecretsMachineSecretsCertsK8sServiceaccountArgs struct {
	// The service account key
	Key pulumi.StringPtrInput `pulumi:"key"`
}

func (SecretsMachineSecretsCertsK8sServiceaccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecretsCertsK8sServiceaccount)(nil)).Elem()
}

func (i SecretsMachineSecretsCertsK8sServiceaccountArgs) ToSecretsMachineSecretsCertsK8sServiceaccountOutput() SecretsMachineSecretsCertsK8sServiceaccountOutput {
	return i.ToSecretsMachineSecretsCertsK8sServiceaccountOutputWithContext(context.Background())
}

func (i SecretsMachineSecretsCertsK8sServiceaccountArgs) ToSecretsMachineSecretsCertsK8sServiceaccountOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsK8sServiceaccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsCertsK8sServiceaccountOutput)
}

func (i SecretsMachineSecretsCertsK8sServiceaccountArgs) ToSecretsMachineSecretsCertsK8sServiceaccountPtrOutput() SecretsMachineSecretsCertsK8sServiceaccountPtrOutput {
	return i.ToSecretsMachineSecretsCertsK8sServiceaccountPtrOutputWithContext(context.Background())
}

func (i SecretsMachineSecretsCertsK8sServiceaccountArgs) ToSecretsMachineSecretsCertsK8sServiceaccountPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsK8sServiceaccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsCertsK8sServiceaccountOutput).ToSecretsMachineSecretsCertsK8sServiceaccountPtrOutputWithContext(ctx)
}

// SecretsMachineSecretsCertsK8sServiceaccountPtrInput is an input type that accepts SecretsMachineSecretsCertsK8sServiceaccountArgs, SecretsMachineSecretsCertsK8sServiceaccountPtr and SecretsMachineSecretsCertsK8sServiceaccountPtrOutput values.
// You can construct a concrete instance of `SecretsMachineSecretsCertsK8sServiceaccountPtrInput` via:
//
//	        SecretsMachineSecretsCertsK8sServiceaccountArgs{...}
//
//	or:
//
//	        nil
type SecretsMachineSecretsCertsK8sServiceaccountPtrInput interface {
	pulumi.Input

	ToSecretsMachineSecretsCertsK8sServiceaccountPtrOutput() SecretsMachineSecretsCertsK8sServiceaccountPtrOutput
	ToSecretsMachineSecretsCertsK8sServiceaccountPtrOutputWithContext(context.Context) SecretsMachineSecretsCertsK8sServiceaccountPtrOutput
}

type secretsMachineSecretsCertsK8sServiceaccountPtrType SecretsMachineSecretsCertsK8sServiceaccountArgs

func SecretsMachineSecretsCertsK8sServiceaccountPtr(v *SecretsMachineSecretsCertsK8sServiceaccountArgs) SecretsMachineSecretsCertsK8sServiceaccountPtrInput {
	return (*secretsMachineSecretsCertsK8sServiceaccountPtrType)(v)
}

func (*secretsMachineSecretsCertsK8sServiceaccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsMachineSecretsCertsK8sServiceaccount)(nil)).Elem()
}

func (i *secretsMachineSecretsCertsK8sServiceaccountPtrType) ToSecretsMachineSecretsCertsK8sServiceaccountPtrOutput() SecretsMachineSecretsCertsK8sServiceaccountPtrOutput {
	return i.ToSecretsMachineSecretsCertsK8sServiceaccountPtrOutputWithContext(context.Background())
}

func (i *secretsMachineSecretsCertsK8sServiceaccountPtrType) ToSecretsMachineSecretsCertsK8sServiceaccountPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsK8sServiceaccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsCertsK8sServiceaccountPtrOutput)
}

type SecretsMachineSecretsCertsK8sServiceaccountOutput struct{ *pulumi.OutputState }

func (SecretsMachineSecretsCertsK8sServiceaccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecretsCertsK8sServiceaccount)(nil)).Elem()
}

func (o SecretsMachineSecretsCertsK8sServiceaccountOutput) ToSecretsMachineSecretsCertsK8sServiceaccountOutput() SecretsMachineSecretsCertsK8sServiceaccountOutput {
	return o
}

func (o SecretsMachineSecretsCertsK8sServiceaccountOutput) ToSecretsMachineSecretsCertsK8sServiceaccountOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsK8sServiceaccountOutput {
	return o
}

func (o SecretsMachineSecretsCertsK8sServiceaccountOutput) ToSecretsMachineSecretsCertsK8sServiceaccountPtrOutput() SecretsMachineSecretsCertsK8sServiceaccountPtrOutput {
	return o.ToSecretsMachineSecretsCertsK8sServiceaccountPtrOutputWithContext(context.Background())
}

func (o SecretsMachineSecretsCertsK8sServiceaccountOutput) ToSecretsMachineSecretsCertsK8sServiceaccountPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsK8sServiceaccountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretsMachineSecretsCertsK8sServiceaccount) *SecretsMachineSecretsCertsK8sServiceaccount {
		return &v
	}).(SecretsMachineSecretsCertsK8sServiceaccountPtrOutput)
}

// The service account key
func (o SecretsMachineSecretsCertsK8sServiceaccountOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsCertsK8sServiceaccount) *string { return v.Key }).(pulumi.StringPtrOutput)
}

type SecretsMachineSecretsCertsK8sServiceaccountPtrOutput struct{ *pulumi.OutputState }

func (SecretsMachineSecretsCertsK8sServiceaccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsMachineSecretsCertsK8sServiceaccount)(nil)).Elem()
}

func (o SecretsMachineSecretsCertsK8sServiceaccountPtrOutput) ToSecretsMachineSecretsCertsK8sServiceaccountPtrOutput() SecretsMachineSecretsCertsK8sServiceaccountPtrOutput {
	return o
}

func (o SecretsMachineSecretsCertsK8sServiceaccountPtrOutput) ToSecretsMachineSecretsCertsK8sServiceaccountPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsK8sServiceaccountPtrOutput {
	return o
}

func (o SecretsMachineSecretsCertsK8sServiceaccountPtrOutput) Elem() SecretsMachineSecretsCertsK8sServiceaccountOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCertsK8sServiceaccount) SecretsMachineSecretsCertsK8sServiceaccount {
		if v != nil {
			return *v
		}
		var ret SecretsMachineSecretsCertsK8sServiceaccount
		return ret
	}).(SecretsMachineSecretsCertsK8sServiceaccountOutput)
}

// The service account key
func (o SecretsMachineSecretsCertsK8sServiceaccountPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCertsK8sServiceaccount) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

type SecretsMachineSecretsCertsOs struct {
	// certificate data
	Cert *string `pulumi:"cert"`
	// key data
	Key *string `pulumi:"key"`
}

// SecretsMachineSecretsCertsOsInput is an input type that accepts SecretsMachineSecretsCertsOsArgs and SecretsMachineSecretsCertsOsOutput values.
// You can construct a concrete instance of `SecretsMachineSecretsCertsOsInput` via:
//
//	SecretsMachineSecretsCertsOsArgs{...}
type SecretsMachineSecretsCertsOsInput interface {
	pulumi.Input

	ToSecretsMachineSecretsCertsOsOutput() SecretsMachineSecretsCertsOsOutput
	ToSecretsMachineSecretsCertsOsOutputWithContext(context.Context) SecretsMachineSecretsCertsOsOutput
}

type SecretsMachineSecretsCertsOsArgs struct {
	// certificate data
	Cert pulumi.StringPtrInput `pulumi:"cert"`
	// key data
	Key pulumi.StringPtrInput `pulumi:"key"`
}

func (SecretsMachineSecretsCertsOsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecretsCertsOs)(nil)).Elem()
}

func (i SecretsMachineSecretsCertsOsArgs) ToSecretsMachineSecretsCertsOsOutput() SecretsMachineSecretsCertsOsOutput {
	return i.ToSecretsMachineSecretsCertsOsOutputWithContext(context.Background())
}

func (i SecretsMachineSecretsCertsOsArgs) ToSecretsMachineSecretsCertsOsOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsOsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsCertsOsOutput)
}

func (i SecretsMachineSecretsCertsOsArgs) ToSecretsMachineSecretsCertsOsPtrOutput() SecretsMachineSecretsCertsOsPtrOutput {
	return i.ToSecretsMachineSecretsCertsOsPtrOutputWithContext(context.Background())
}

func (i SecretsMachineSecretsCertsOsArgs) ToSecretsMachineSecretsCertsOsPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsOsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsCertsOsOutput).ToSecretsMachineSecretsCertsOsPtrOutputWithContext(ctx)
}

// SecretsMachineSecretsCertsOsPtrInput is an input type that accepts SecretsMachineSecretsCertsOsArgs, SecretsMachineSecretsCertsOsPtr and SecretsMachineSecretsCertsOsPtrOutput values.
// You can construct a concrete instance of `SecretsMachineSecretsCertsOsPtrInput` via:
//
//	        SecretsMachineSecretsCertsOsArgs{...}
//
//	or:
//
//	        nil
type SecretsMachineSecretsCertsOsPtrInput interface {
	pulumi.Input

	ToSecretsMachineSecretsCertsOsPtrOutput() SecretsMachineSecretsCertsOsPtrOutput
	ToSecretsMachineSecretsCertsOsPtrOutputWithContext(context.Context) SecretsMachineSecretsCertsOsPtrOutput
}

type secretsMachineSecretsCertsOsPtrType SecretsMachineSecretsCertsOsArgs

func SecretsMachineSecretsCertsOsPtr(v *SecretsMachineSecretsCertsOsArgs) SecretsMachineSecretsCertsOsPtrInput {
	return (*secretsMachineSecretsCertsOsPtrType)(v)
}

func (*secretsMachineSecretsCertsOsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsMachineSecretsCertsOs)(nil)).Elem()
}

func (i *secretsMachineSecretsCertsOsPtrType) ToSecretsMachineSecretsCertsOsPtrOutput() SecretsMachineSecretsCertsOsPtrOutput {
	return i.ToSecretsMachineSecretsCertsOsPtrOutputWithContext(context.Background())
}

func (i *secretsMachineSecretsCertsOsPtrType) ToSecretsMachineSecretsCertsOsPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsOsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsCertsOsPtrOutput)
}

type SecretsMachineSecretsCertsOsOutput struct{ *pulumi.OutputState }

func (SecretsMachineSecretsCertsOsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecretsCertsOs)(nil)).Elem()
}

func (o SecretsMachineSecretsCertsOsOutput) ToSecretsMachineSecretsCertsOsOutput() SecretsMachineSecretsCertsOsOutput {
	return o
}

func (o SecretsMachineSecretsCertsOsOutput) ToSecretsMachineSecretsCertsOsOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsOsOutput {
	return o
}

func (o SecretsMachineSecretsCertsOsOutput) ToSecretsMachineSecretsCertsOsPtrOutput() SecretsMachineSecretsCertsOsPtrOutput {
	return o.ToSecretsMachineSecretsCertsOsPtrOutputWithContext(context.Background())
}

func (o SecretsMachineSecretsCertsOsOutput) ToSecretsMachineSecretsCertsOsPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsOsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretsMachineSecretsCertsOs) *SecretsMachineSecretsCertsOs {
		return &v
	}).(SecretsMachineSecretsCertsOsPtrOutput)
}

// certificate data
func (o SecretsMachineSecretsCertsOsOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsCertsOs) *string { return v.Cert }).(pulumi.StringPtrOutput)
}

// key data
func (o SecretsMachineSecretsCertsOsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsCertsOs) *string { return v.Key }).(pulumi.StringPtrOutput)
}

type SecretsMachineSecretsCertsOsPtrOutput struct{ *pulumi.OutputState }

func (SecretsMachineSecretsCertsOsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsMachineSecretsCertsOs)(nil)).Elem()
}

func (o SecretsMachineSecretsCertsOsPtrOutput) ToSecretsMachineSecretsCertsOsPtrOutput() SecretsMachineSecretsCertsOsPtrOutput {
	return o
}

func (o SecretsMachineSecretsCertsOsPtrOutput) ToSecretsMachineSecretsCertsOsPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsOsPtrOutput {
	return o
}

func (o SecretsMachineSecretsCertsOsPtrOutput) Elem() SecretsMachineSecretsCertsOsOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCertsOs) SecretsMachineSecretsCertsOs {
		if v != nil {
			return *v
		}
		var ret SecretsMachineSecretsCertsOs
		return ret
	}).(SecretsMachineSecretsCertsOsOutput)
}

// certificate data
func (o SecretsMachineSecretsCertsOsPtrOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCertsOs) *string {
		if v == nil {
			return nil
		}
		return v.Cert
	}).(pulumi.StringPtrOutput)
}

// key data
func (o SecretsMachineSecretsCertsOsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCertsOs) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

type SecretsMachineSecretsCluster struct {
	// The cluster ID
	Id *string `pulumi:"id"`
	// The cluster secret
	Secret *string `pulumi:"secret"`
}

// SecretsMachineSecretsClusterInput is an input type that accepts SecretsMachineSecretsClusterArgs and SecretsMachineSecretsClusterOutput values.
// You can construct a concrete instance of `SecretsMachineSecretsClusterInput` via:
//
//	SecretsMachineSecretsClusterArgs{...}
type SecretsMachineSecretsClusterInput interface {
	pulumi.Input

	ToSecretsMachineSecretsClusterOutput() SecretsMachineSecretsClusterOutput
	ToSecretsMachineSecretsClusterOutputWithContext(context.Context) SecretsMachineSecretsClusterOutput
}

type SecretsMachineSecretsClusterArgs struct {
	// The cluster ID
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The cluster secret
	Secret pulumi.StringPtrInput `pulumi:"secret"`
}

func (SecretsMachineSecretsClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecretsCluster)(nil)).Elem()
}

func (i SecretsMachineSecretsClusterArgs) ToSecretsMachineSecretsClusterOutput() SecretsMachineSecretsClusterOutput {
	return i.ToSecretsMachineSecretsClusterOutputWithContext(context.Background())
}

func (i SecretsMachineSecretsClusterArgs) ToSecretsMachineSecretsClusterOutputWithContext(ctx context.Context) SecretsMachineSecretsClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsClusterOutput)
}

func (i SecretsMachineSecretsClusterArgs) ToSecretsMachineSecretsClusterPtrOutput() SecretsMachineSecretsClusterPtrOutput {
	return i.ToSecretsMachineSecretsClusterPtrOutputWithContext(context.Background())
}

func (i SecretsMachineSecretsClusterArgs) ToSecretsMachineSecretsClusterPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsClusterOutput).ToSecretsMachineSecretsClusterPtrOutputWithContext(ctx)
}

// SecretsMachineSecretsClusterPtrInput is an input type that accepts SecretsMachineSecretsClusterArgs, SecretsMachineSecretsClusterPtr and SecretsMachineSecretsClusterPtrOutput values.
// You can construct a concrete instance of `SecretsMachineSecretsClusterPtrInput` via:
//
//	        SecretsMachineSecretsClusterArgs{...}
//
//	or:
//
//	        nil
type SecretsMachineSecretsClusterPtrInput interface {
	pulumi.Input

	ToSecretsMachineSecretsClusterPtrOutput() SecretsMachineSecretsClusterPtrOutput
	ToSecretsMachineSecretsClusterPtrOutputWithContext(context.Context) SecretsMachineSecretsClusterPtrOutput
}

type secretsMachineSecretsClusterPtrType SecretsMachineSecretsClusterArgs

func SecretsMachineSecretsClusterPtr(v *SecretsMachineSecretsClusterArgs) SecretsMachineSecretsClusterPtrInput {
	return (*secretsMachineSecretsClusterPtrType)(v)
}

func (*secretsMachineSecretsClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsMachineSecretsCluster)(nil)).Elem()
}

func (i *secretsMachineSecretsClusterPtrType) ToSecretsMachineSecretsClusterPtrOutput() SecretsMachineSecretsClusterPtrOutput {
	return i.ToSecretsMachineSecretsClusterPtrOutputWithContext(context.Background())
}

func (i *secretsMachineSecretsClusterPtrType) ToSecretsMachineSecretsClusterPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsClusterPtrOutput)
}

type SecretsMachineSecretsClusterOutput struct{ *pulumi.OutputState }

func (SecretsMachineSecretsClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecretsCluster)(nil)).Elem()
}

func (o SecretsMachineSecretsClusterOutput) ToSecretsMachineSecretsClusterOutput() SecretsMachineSecretsClusterOutput {
	return o
}

func (o SecretsMachineSecretsClusterOutput) ToSecretsMachineSecretsClusterOutputWithContext(ctx context.Context) SecretsMachineSecretsClusterOutput {
	return o
}

func (o SecretsMachineSecretsClusterOutput) ToSecretsMachineSecretsClusterPtrOutput() SecretsMachineSecretsClusterPtrOutput {
	return o.ToSecretsMachineSecretsClusterPtrOutputWithContext(context.Background())
}

func (o SecretsMachineSecretsClusterOutput) ToSecretsMachineSecretsClusterPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretsMachineSecretsCluster) *SecretsMachineSecretsCluster {
		return &v
	}).(SecretsMachineSecretsClusterPtrOutput)
}

// The cluster ID
func (o SecretsMachineSecretsClusterOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsCluster) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The cluster secret
func (o SecretsMachineSecretsClusterOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsCluster) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

type SecretsMachineSecretsClusterPtrOutput struct{ *pulumi.OutputState }

func (SecretsMachineSecretsClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsMachineSecretsCluster)(nil)).Elem()
}

func (o SecretsMachineSecretsClusterPtrOutput) ToSecretsMachineSecretsClusterPtrOutput() SecretsMachineSecretsClusterPtrOutput {
	return o
}

func (o SecretsMachineSecretsClusterPtrOutput) ToSecretsMachineSecretsClusterPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsClusterPtrOutput {
	return o
}

func (o SecretsMachineSecretsClusterPtrOutput) Elem() SecretsMachineSecretsClusterOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCluster) SecretsMachineSecretsCluster {
		if v != nil {
			return *v
		}
		var ret SecretsMachineSecretsCluster
		return ret
	}).(SecretsMachineSecretsClusterOutput)
}

// The cluster ID
func (o SecretsMachineSecretsClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCluster) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The cluster secret
func (o SecretsMachineSecretsClusterPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCluster) *string {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(pulumi.StringPtrOutput)
}

type SecretsMachineSecretsSecrets struct {
	// The AES-CBC encryption secret
	AescbcEncryptionSecret *string `pulumi:"aescbcEncryptionSecret"`
	// The bootstrap token
	BootstrapToken *string `pulumi:"bootstrapToken"`
	// The secretbox encryption secret
	SecretboxEncryptionSecret *string `pulumi:"secretboxEncryptionSecret"`
}

// SecretsMachineSecretsSecretsInput is an input type that accepts SecretsMachineSecretsSecretsArgs and SecretsMachineSecretsSecretsOutput values.
// You can construct a concrete instance of `SecretsMachineSecretsSecretsInput` via:
//
//	SecretsMachineSecretsSecretsArgs{...}
type SecretsMachineSecretsSecretsInput interface {
	pulumi.Input

	ToSecretsMachineSecretsSecretsOutput() SecretsMachineSecretsSecretsOutput
	ToSecretsMachineSecretsSecretsOutputWithContext(context.Context) SecretsMachineSecretsSecretsOutput
}

type SecretsMachineSecretsSecretsArgs struct {
	// The AES-CBC encryption secret
	AescbcEncryptionSecret pulumi.StringPtrInput `pulumi:"aescbcEncryptionSecret"`
	// The bootstrap token
	BootstrapToken pulumi.StringPtrInput `pulumi:"bootstrapToken"`
	// The secretbox encryption secret
	SecretboxEncryptionSecret pulumi.StringPtrInput `pulumi:"secretboxEncryptionSecret"`
}

func (SecretsMachineSecretsSecretsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecretsSecrets)(nil)).Elem()
}

func (i SecretsMachineSecretsSecretsArgs) ToSecretsMachineSecretsSecretsOutput() SecretsMachineSecretsSecretsOutput {
	return i.ToSecretsMachineSecretsSecretsOutputWithContext(context.Background())
}

func (i SecretsMachineSecretsSecretsArgs) ToSecretsMachineSecretsSecretsOutputWithContext(ctx context.Context) SecretsMachineSecretsSecretsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsSecretsOutput)
}

func (i SecretsMachineSecretsSecretsArgs) ToSecretsMachineSecretsSecretsPtrOutput() SecretsMachineSecretsSecretsPtrOutput {
	return i.ToSecretsMachineSecretsSecretsPtrOutputWithContext(context.Background())
}

func (i SecretsMachineSecretsSecretsArgs) ToSecretsMachineSecretsSecretsPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsSecretsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsSecretsOutput).ToSecretsMachineSecretsSecretsPtrOutputWithContext(ctx)
}

// SecretsMachineSecretsSecretsPtrInput is an input type that accepts SecretsMachineSecretsSecretsArgs, SecretsMachineSecretsSecretsPtr and SecretsMachineSecretsSecretsPtrOutput values.
// You can construct a concrete instance of `SecretsMachineSecretsSecretsPtrInput` via:
//
//	        SecretsMachineSecretsSecretsArgs{...}
//
//	or:
//
//	        nil
type SecretsMachineSecretsSecretsPtrInput interface {
	pulumi.Input

	ToSecretsMachineSecretsSecretsPtrOutput() SecretsMachineSecretsSecretsPtrOutput
	ToSecretsMachineSecretsSecretsPtrOutputWithContext(context.Context) SecretsMachineSecretsSecretsPtrOutput
}

type secretsMachineSecretsSecretsPtrType SecretsMachineSecretsSecretsArgs

func SecretsMachineSecretsSecretsPtr(v *SecretsMachineSecretsSecretsArgs) SecretsMachineSecretsSecretsPtrInput {
	return (*secretsMachineSecretsSecretsPtrType)(v)
}

func (*secretsMachineSecretsSecretsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsMachineSecretsSecrets)(nil)).Elem()
}

func (i *secretsMachineSecretsSecretsPtrType) ToSecretsMachineSecretsSecretsPtrOutput() SecretsMachineSecretsSecretsPtrOutput {
	return i.ToSecretsMachineSecretsSecretsPtrOutputWithContext(context.Background())
}

func (i *secretsMachineSecretsSecretsPtrType) ToSecretsMachineSecretsSecretsPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsSecretsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsSecretsPtrOutput)
}

type SecretsMachineSecretsSecretsOutput struct{ *pulumi.OutputState }

func (SecretsMachineSecretsSecretsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecretsSecrets)(nil)).Elem()
}

func (o SecretsMachineSecretsSecretsOutput) ToSecretsMachineSecretsSecretsOutput() SecretsMachineSecretsSecretsOutput {
	return o
}

func (o SecretsMachineSecretsSecretsOutput) ToSecretsMachineSecretsSecretsOutputWithContext(ctx context.Context) SecretsMachineSecretsSecretsOutput {
	return o
}

func (o SecretsMachineSecretsSecretsOutput) ToSecretsMachineSecretsSecretsPtrOutput() SecretsMachineSecretsSecretsPtrOutput {
	return o.ToSecretsMachineSecretsSecretsPtrOutputWithContext(context.Background())
}

func (o SecretsMachineSecretsSecretsOutput) ToSecretsMachineSecretsSecretsPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsSecretsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretsMachineSecretsSecrets) *SecretsMachineSecretsSecrets {
		return &v
	}).(SecretsMachineSecretsSecretsPtrOutput)
}

// The AES-CBC encryption secret
func (o SecretsMachineSecretsSecretsOutput) AescbcEncryptionSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsSecrets) *string { return v.AescbcEncryptionSecret }).(pulumi.StringPtrOutput)
}

// The bootstrap token
func (o SecretsMachineSecretsSecretsOutput) BootstrapToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsSecrets) *string { return v.BootstrapToken }).(pulumi.StringPtrOutput)
}

// The secretbox encryption secret
func (o SecretsMachineSecretsSecretsOutput) SecretboxEncryptionSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsSecrets) *string { return v.SecretboxEncryptionSecret }).(pulumi.StringPtrOutput)
}

type SecretsMachineSecretsSecretsPtrOutput struct{ *pulumi.OutputState }

func (SecretsMachineSecretsSecretsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsMachineSecretsSecrets)(nil)).Elem()
}

func (o SecretsMachineSecretsSecretsPtrOutput) ToSecretsMachineSecretsSecretsPtrOutput() SecretsMachineSecretsSecretsPtrOutput {
	return o
}

func (o SecretsMachineSecretsSecretsPtrOutput) ToSecretsMachineSecretsSecretsPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsSecretsPtrOutput {
	return o
}

func (o SecretsMachineSecretsSecretsPtrOutput) Elem() SecretsMachineSecretsSecretsOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsSecrets) SecretsMachineSecretsSecrets {
		if v != nil {
			return *v
		}
		var ret SecretsMachineSecretsSecrets
		return ret
	}).(SecretsMachineSecretsSecretsOutput)
}

// The AES-CBC encryption secret
func (o SecretsMachineSecretsSecretsPtrOutput) AescbcEncryptionSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsSecrets) *string {
		if v == nil {
			return nil
		}
		return v.AescbcEncryptionSecret
	}).(pulumi.StringPtrOutput)
}

// The bootstrap token
func (o SecretsMachineSecretsSecretsPtrOutput) BootstrapToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsSecrets) *string {
		if v == nil {
			return nil
		}
		return v.BootstrapToken
	}).(pulumi.StringPtrOutput)
}

// The secretbox encryption secret
func (o SecretsMachineSecretsSecretsPtrOutput) SecretboxEncryptionSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsSecrets) *string {
		if v == nil {
			return nil
		}
		return v.SecretboxEncryptionSecret
	}).(pulumi.StringPtrOutput)
}

type SecretsMachineSecretsTrustdinfo struct {
	// The trustd token
	Token *string `pulumi:"token"`
}

// SecretsMachineSecretsTrustdinfoInput is an input type that accepts SecretsMachineSecretsTrustdinfoArgs and SecretsMachineSecretsTrustdinfoOutput values.
// You can construct a concrete instance of `SecretsMachineSecretsTrustdinfoInput` via:
//
//	SecretsMachineSecretsTrustdinfoArgs{...}
type SecretsMachineSecretsTrustdinfoInput interface {
	pulumi.Input

	ToSecretsMachineSecretsTrustdinfoOutput() SecretsMachineSecretsTrustdinfoOutput
	ToSecretsMachineSecretsTrustdinfoOutputWithContext(context.Context) SecretsMachineSecretsTrustdinfoOutput
}

type SecretsMachineSecretsTrustdinfoArgs struct {
	// The trustd token
	Token pulumi.StringPtrInput `pulumi:"token"`
}

func (SecretsMachineSecretsTrustdinfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecretsTrustdinfo)(nil)).Elem()
}

func (i SecretsMachineSecretsTrustdinfoArgs) ToSecretsMachineSecretsTrustdinfoOutput() SecretsMachineSecretsTrustdinfoOutput {
	return i.ToSecretsMachineSecretsTrustdinfoOutputWithContext(context.Background())
}

func (i SecretsMachineSecretsTrustdinfoArgs) ToSecretsMachineSecretsTrustdinfoOutputWithContext(ctx context.Context) SecretsMachineSecretsTrustdinfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsTrustdinfoOutput)
}

func (i SecretsMachineSecretsTrustdinfoArgs) ToSecretsMachineSecretsTrustdinfoPtrOutput() SecretsMachineSecretsTrustdinfoPtrOutput {
	return i.ToSecretsMachineSecretsTrustdinfoPtrOutputWithContext(context.Background())
}

func (i SecretsMachineSecretsTrustdinfoArgs) ToSecretsMachineSecretsTrustdinfoPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsTrustdinfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsTrustdinfoOutput).ToSecretsMachineSecretsTrustdinfoPtrOutputWithContext(ctx)
}

// SecretsMachineSecretsTrustdinfoPtrInput is an input type that accepts SecretsMachineSecretsTrustdinfoArgs, SecretsMachineSecretsTrustdinfoPtr and SecretsMachineSecretsTrustdinfoPtrOutput values.
// You can construct a concrete instance of `SecretsMachineSecretsTrustdinfoPtrInput` via:
//
//	        SecretsMachineSecretsTrustdinfoArgs{...}
//
//	or:
//
//	        nil
type SecretsMachineSecretsTrustdinfoPtrInput interface {
	pulumi.Input

	ToSecretsMachineSecretsTrustdinfoPtrOutput() SecretsMachineSecretsTrustdinfoPtrOutput
	ToSecretsMachineSecretsTrustdinfoPtrOutputWithContext(context.Context) SecretsMachineSecretsTrustdinfoPtrOutput
}

type secretsMachineSecretsTrustdinfoPtrType SecretsMachineSecretsTrustdinfoArgs

func SecretsMachineSecretsTrustdinfoPtr(v *SecretsMachineSecretsTrustdinfoArgs) SecretsMachineSecretsTrustdinfoPtrInput {
	return (*secretsMachineSecretsTrustdinfoPtrType)(v)
}

func (*secretsMachineSecretsTrustdinfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsMachineSecretsTrustdinfo)(nil)).Elem()
}

func (i *secretsMachineSecretsTrustdinfoPtrType) ToSecretsMachineSecretsTrustdinfoPtrOutput() SecretsMachineSecretsTrustdinfoPtrOutput {
	return i.ToSecretsMachineSecretsTrustdinfoPtrOutputWithContext(context.Background())
}

func (i *secretsMachineSecretsTrustdinfoPtrType) ToSecretsMachineSecretsTrustdinfoPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsTrustdinfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsTrustdinfoPtrOutput)
}

type SecretsMachineSecretsTrustdinfoOutput struct{ *pulumi.OutputState }

func (SecretsMachineSecretsTrustdinfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecretsTrustdinfo)(nil)).Elem()
}

func (o SecretsMachineSecretsTrustdinfoOutput) ToSecretsMachineSecretsTrustdinfoOutput() SecretsMachineSecretsTrustdinfoOutput {
	return o
}

func (o SecretsMachineSecretsTrustdinfoOutput) ToSecretsMachineSecretsTrustdinfoOutputWithContext(ctx context.Context) SecretsMachineSecretsTrustdinfoOutput {
	return o
}

func (o SecretsMachineSecretsTrustdinfoOutput) ToSecretsMachineSecretsTrustdinfoPtrOutput() SecretsMachineSecretsTrustdinfoPtrOutput {
	return o.ToSecretsMachineSecretsTrustdinfoPtrOutputWithContext(context.Background())
}

func (o SecretsMachineSecretsTrustdinfoOutput) ToSecretsMachineSecretsTrustdinfoPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsTrustdinfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretsMachineSecretsTrustdinfo) *SecretsMachineSecretsTrustdinfo {
		return &v
	}).(SecretsMachineSecretsTrustdinfoPtrOutput)
}

// The trustd token
func (o SecretsMachineSecretsTrustdinfoOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsTrustdinfo) *string { return v.Token }).(pulumi.StringPtrOutput)
}

type SecretsMachineSecretsTrustdinfoPtrOutput struct{ *pulumi.OutputState }

func (SecretsMachineSecretsTrustdinfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsMachineSecretsTrustdinfo)(nil)).Elem()
}

func (o SecretsMachineSecretsTrustdinfoPtrOutput) ToSecretsMachineSecretsTrustdinfoPtrOutput() SecretsMachineSecretsTrustdinfoPtrOutput {
	return o
}

func (o SecretsMachineSecretsTrustdinfoPtrOutput) ToSecretsMachineSecretsTrustdinfoPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsTrustdinfoPtrOutput {
	return o
}

func (o SecretsMachineSecretsTrustdinfoPtrOutput) Elem() SecretsMachineSecretsTrustdinfoOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsTrustdinfo) SecretsMachineSecretsTrustdinfo {
		if v != nil {
			return *v
		}
		var ret SecretsMachineSecretsTrustdinfo
		return ret
	}).(SecretsMachineSecretsTrustdinfoOutput)
}

// The trustd token
func (o SecretsMachineSecretsTrustdinfoPtrOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsTrustdinfo) *string {
		if v == nil {
			return nil
		}
		return v.Token
	}).(pulumi.StringPtrOutput)
}

type Timeout struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// TimeoutInput is an input type that accepts TimeoutArgs and TimeoutOutput values.
// You can construct a concrete instance of `TimeoutInput` via:
//
//	TimeoutArgs{...}
type TimeoutInput interface {
	pulumi.Input

	ToTimeoutOutput() TimeoutOutput
	ToTimeoutOutputWithContext(context.Context) TimeoutOutput
}

type TimeoutArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (TimeoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Timeout)(nil)).Elem()
}

func (i TimeoutArgs) ToTimeoutOutput() TimeoutOutput {
	return i.ToTimeoutOutputWithContext(context.Background())
}

func (i TimeoutArgs) ToTimeoutOutputWithContext(ctx context.Context) TimeoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeoutOutput)
}

func (i TimeoutArgs) ToTimeoutPtrOutput() TimeoutPtrOutput {
	return i.ToTimeoutPtrOutputWithContext(context.Background())
}

func (i TimeoutArgs) ToTimeoutPtrOutputWithContext(ctx context.Context) TimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeoutOutput).ToTimeoutPtrOutputWithContext(ctx)
}

// TimeoutPtrInput is an input type that accepts TimeoutArgs, TimeoutPtr and TimeoutPtrOutput values.
// You can construct a concrete instance of `TimeoutPtrInput` via:
//
//	        TimeoutArgs{...}
//
//	or:
//
//	        nil
type TimeoutPtrInput interface {
	pulumi.Input

	ToTimeoutPtrOutput() TimeoutPtrOutput
	ToTimeoutPtrOutputWithContext(context.Context) TimeoutPtrOutput
}

type timeoutPtrType TimeoutArgs

func TimeoutPtr(v *TimeoutArgs) TimeoutPtrInput {
	return (*timeoutPtrType)(v)
}

func (*timeoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Timeout)(nil)).Elem()
}

func (i *timeoutPtrType) ToTimeoutPtrOutput() TimeoutPtrOutput {
	return i.ToTimeoutPtrOutputWithContext(context.Background())
}

func (i *timeoutPtrType) ToTimeoutPtrOutputWithContext(ctx context.Context) TimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeoutPtrOutput)
}

type TimeoutOutput struct{ *pulumi.OutputState }

func (TimeoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Timeout)(nil)).Elem()
}

func (o TimeoutOutput) ToTimeoutOutput() TimeoutOutput {
	return o
}

func (o TimeoutOutput) ToTimeoutOutputWithContext(ctx context.Context) TimeoutOutput {
	return o
}

func (o TimeoutOutput) ToTimeoutPtrOutput() TimeoutPtrOutput {
	return o.ToTimeoutPtrOutputWithContext(context.Background())
}

func (o TimeoutOutput) ToTimeoutPtrOutputWithContext(ctx context.Context) TimeoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Timeout) *Timeout {
		return &v
	}).(TimeoutPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o TimeoutOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Timeout) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o TimeoutOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Timeout) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o TimeoutOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Timeout) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type TimeoutPtrOutput struct{ *pulumi.OutputState }

func (TimeoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Timeout)(nil)).Elem()
}

func (o TimeoutPtrOutput) ToTimeoutPtrOutput() TimeoutPtrOutput {
	return o
}

func (o TimeoutPtrOutput) ToTimeoutPtrOutputWithContext(ctx context.Context) TimeoutPtrOutput {
	return o
}

func (o TimeoutPtrOutput) Elem() TimeoutOutput {
	return o.ApplyT(func(v *Timeout) Timeout {
		if v != nil {
			return *v
		}
		var ret Timeout
		return ret
	}).(TimeoutOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o TimeoutPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Timeout) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o TimeoutPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Timeout) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o TimeoutPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Timeout) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

// A Machine Secrets Certificate
type Certificate struct {
	// Certificate
	Cert string `pulumi:"cert"`
	// Private Key
	Key string `pulumi:"key"`
}

// CertificateInput is an input type that accepts CertificateArgs and CertificateOutput values.
// You can construct a concrete instance of `CertificateInput` via:
//
//	CertificateArgs{...}
type CertificateInput interface {
	pulumi.Input

	ToCertificateOutput() CertificateOutput
	ToCertificateOutputWithContext(context.Context) CertificateOutput
}

// A Machine Secrets Certificate
type CertificateArgs struct {
	// Certificate
	Cert pulumi.StringInput `pulumi:"cert"`
	// Private Key
	Key pulumi.StringInput `pulumi:"key"`
}

func (CertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Certificate)(nil)).Elem()
}

func (i CertificateArgs) ToCertificateOutput() CertificateOutput {
	return i.ToCertificateOutputWithContext(context.Background())
}

func (i CertificateArgs) ToCertificateOutputWithContext(ctx context.Context) CertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateOutput)
}

func (i CertificateArgs) ToCertificatePtrOutput() CertificatePtrOutput {
	return i.ToCertificatePtrOutputWithContext(context.Background())
}

func (i CertificateArgs) ToCertificatePtrOutputWithContext(ctx context.Context) CertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateOutput).ToCertificatePtrOutputWithContext(ctx)
}

// CertificatePtrInput is an input type that accepts CertificateArgs, CertificatePtr and CertificatePtrOutput values.
// You can construct a concrete instance of `CertificatePtrInput` via:
//
//	        CertificateArgs{...}
//
//	or:
//
//	        nil
type CertificatePtrInput interface {
	pulumi.Input

	ToCertificatePtrOutput() CertificatePtrOutput
	ToCertificatePtrOutputWithContext(context.Context) CertificatePtrOutput
}

type certificatePtrType CertificateArgs

func CertificatePtr(v *CertificateArgs) CertificatePtrInput {
	return (*certificatePtrType)(v)
}

func (*certificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Certificate)(nil)).Elem()
}

func (i *certificatePtrType) ToCertificatePtrOutput() CertificatePtrOutput {
	return i.ToCertificatePtrOutputWithContext(context.Background())
}

func (i *certificatePtrType) ToCertificatePtrOutputWithContext(ctx context.Context) CertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificatePtrOutput)
}

// A Machine Secrets Certificate
type CertificateOutput struct{ *pulumi.OutputState }

func (CertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Certificate)(nil)).Elem()
}

func (o CertificateOutput) ToCertificateOutput() CertificateOutput {
	return o
}

func (o CertificateOutput) ToCertificateOutputWithContext(ctx context.Context) CertificateOutput {
	return o
}

func (o CertificateOutput) ToCertificatePtrOutput() CertificatePtrOutput {
	return o.ToCertificatePtrOutputWithContext(context.Background())
}

func (o CertificateOutput) ToCertificatePtrOutputWithContext(ctx context.Context) CertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Certificate) *Certificate {
		return &v
	}).(CertificatePtrOutput)
}

// Certificate
func (o CertificateOutput) Cert() pulumi.StringOutput {
	return o.ApplyT(func(v Certificate) string { return v.Cert }).(pulumi.StringOutput)
}

// Private Key
func (o CertificateOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v Certificate) string { return v.Key }).(pulumi.StringOutput)
}

type CertificatePtrOutput struct{ *pulumi.OutputState }

func (CertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Certificate)(nil)).Elem()
}

func (o CertificatePtrOutput) ToCertificatePtrOutput() CertificatePtrOutput {
	return o
}

func (o CertificatePtrOutput) ToCertificatePtrOutputWithContext(ctx context.Context) CertificatePtrOutput {
	return o
}

func (o CertificatePtrOutput) Elem() CertificateOutput {
	return o.ApplyT(func(v *Certificate) Certificate {
		if v != nil {
			return *v
		}
		var ret Certificate
		return ret
	}).(CertificateOutput)
}

// Certificate
func (o CertificatePtrOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Certificate) *string {
		if v == nil {
			return nil
		}
		return &v.Cert
	}).(pulumi.StringPtrOutput)
}

// Private Key
func (o CertificatePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Certificate) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// A complete Machine Secrets Certificates configuration
type Certificates struct {
	Etcd              Certificate `pulumi:"etcd"`
	K8s               Certificate `pulumi:"k8s"`
	K8sAggregator     Certificate `pulumi:"k8sAggregator"`
	K8sServiceaccount Key         `pulumi:"k8sServiceaccount"`
	Os                Certificate `pulumi:"os"`
}

// CertificatesInput is an input type that accepts CertificatesArgs and CertificatesOutput values.
// You can construct a concrete instance of `CertificatesInput` via:
//
//	CertificatesArgs{...}
type CertificatesInput interface {
	pulumi.Input

	ToCertificatesOutput() CertificatesOutput
	ToCertificatesOutputWithContext(context.Context) CertificatesOutput
}

// A complete Machine Secrets Certificates configuration
type CertificatesArgs struct {
	Etcd              CertificateInput `pulumi:"etcd"`
	K8s               CertificateInput `pulumi:"k8s"`
	K8sAggregator     CertificateInput `pulumi:"k8sAggregator"`
	K8sServiceaccount KeyInput         `pulumi:"k8sServiceaccount"`
	Os                CertificateInput `pulumi:"os"`
}

func (CertificatesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Certificates)(nil)).Elem()
}

func (i CertificatesArgs) ToCertificatesOutput() CertificatesOutput {
	return i.ToCertificatesOutputWithContext(context.Background())
}

func (i CertificatesArgs) ToCertificatesOutputWithContext(ctx context.Context) CertificatesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificatesOutput)
}

func (i CertificatesArgs) ToCertificatesPtrOutput() CertificatesPtrOutput {
	return i.ToCertificatesPtrOutputWithContext(context.Background())
}

func (i CertificatesArgs) ToCertificatesPtrOutputWithContext(ctx context.Context) CertificatesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificatesOutput).ToCertificatesPtrOutputWithContext(ctx)
}

// CertificatesPtrInput is an input type that accepts CertificatesArgs, CertificatesPtr and CertificatesPtrOutput values.
// You can construct a concrete instance of `CertificatesPtrInput` via:
//
//	        CertificatesArgs{...}
//
//	or:
//
//	        nil
type CertificatesPtrInput interface {
	pulumi.Input

	ToCertificatesPtrOutput() CertificatesPtrOutput
	ToCertificatesPtrOutputWithContext(context.Context) CertificatesPtrOutput
}

type certificatesPtrType CertificatesArgs

func CertificatesPtr(v *CertificatesArgs) CertificatesPtrInput {
	return (*certificatesPtrType)(v)
}

func (*certificatesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Certificates)(nil)).Elem()
}

func (i *certificatesPtrType) ToCertificatesPtrOutput() CertificatesPtrOutput {
	return i.ToCertificatesPtrOutputWithContext(context.Background())
}

func (i *certificatesPtrType) ToCertificatesPtrOutputWithContext(ctx context.Context) CertificatesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificatesPtrOutput)
}

// A complete Machine Secrets Certificates configuration
type CertificatesOutput struct{ *pulumi.OutputState }

func (CertificatesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Certificates)(nil)).Elem()
}

func (o CertificatesOutput) ToCertificatesOutput() CertificatesOutput {
	return o
}

func (o CertificatesOutput) ToCertificatesOutputWithContext(ctx context.Context) CertificatesOutput {
	return o
}

func (o CertificatesOutput) ToCertificatesPtrOutput() CertificatesPtrOutput {
	return o.ToCertificatesPtrOutputWithContext(context.Background())
}

func (o CertificatesOutput) ToCertificatesPtrOutputWithContext(ctx context.Context) CertificatesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Certificates) *Certificates {
		return &v
	}).(CertificatesPtrOutput)
}

func (o CertificatesOutput) Etcd() CertificateOutput {
	return o.ApplyT(func(v Certificates) Certificate { return v.Etcd }).(CertificateOutput)
}

func (o CertificatesOutput) K8s() CertificateOutput {
	return o.ApplyT(func(v Certificates) Certificate { return v.K8s }).(CertificateOutput)
}

func (o CertificatesOutput) K8sAggregator() CertificateOutput {
	return o.ApplyT(func(v Certificates) Certificate { return v.K8sAggregator }).(CertificateOutput)
}

func (o CertificatesOutput) K8sServiceaccount() KeyOutput {
	return o.ApplyT(func(v Certificates) Key { return v.K8sServiceaccount }).(KeyOutput)
}

func (o CertificatesOutput) Os() CertificateOutput {
	return o.ApplyT(func(v Certificates) Certificate { return v.Os }).(CertificateOutput)
}

type CertificatesPtrOutput struct{ *pulumi.OutputState }

func (CertificatesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Certificates)(nil)).Elem()
}

func (o CertificatesPtrOutput) ToCertificatesPtrOutput() CertificatesPtrOutput {
	return o
}

func (o CertificatesPtrOutput) ToCertificatesPtrOutputWithContext(ctx context.Context) CertificatesPtrOutput {
	return o
}

func (o CertificatesPtrOutput) Elem() CertificatesOutput {
	return o.ApplyT(func(v *Certificates) Certificates {
		if v != nil {
			return *v
		}
		var ret Certificates
		return ret
	}).(CertificatesOutput)
}

func (o CertificatesPtrOutput) Etcd() CertificatePtrOutput {
	return o.ApplyT(func(v *Certificates) *Certificate {
		if v == nil {
			return nil
		}
		return &v.Etcd
	}).(CertificatePtrOutput)
}

func (o CertificatesPtrOutput) K8s() CertificatePtrOutput {
	return o.ApplyT(func(v *Certificates) *Certificate {
		if v == nil {
			return nil
		}
		return &v.K8s
	}).(CertificatePtrOutput)
}

func (o CertificatesPtrOutput) K8sAggregator() CertificatePtrOutput {
	return o.ApplyT(func(v *Certificates) *Certificate {
		if v == nil {
			return nil
		}
		return &v.K8sAggregator
	}).(CertificatePtrOutput)
}

func (o CertificatesPtrOutput) K8sServiceaccount() KeyPtrOutput {
	return o.ApplyT(func(v *Certificates) *Key {
		if v == nil {
			return nil
		}
		return &v.K8sServiceaccount
	}).(KeyPtrOutput)
}

func (o CertificatesPtrOutput) Os() CertificatePtrOutput {
	return o.ApplyT(func(v *Certificates) *Certificate {
		if v == nil {
			return nil
		}
		return &v.Os
	}).(CertificatePtrOutput)
}

// A Client Configuration
type ClientConfiguration struct {
	// The client CA certificate
	CaCertificate string `pulumi:"caCertificate"`
	// The client certificate
	ClientCertificate string `pulumi:"clientCertificate"`
	// The client private key
	ClientKey string `pulumi:"clientKey"`
}

// ClientConfigurationInput is an input type that accepts ClientConfigurationArgs and ClientConfigurationOutput values.
// You can construct a concrete instance of `ClientConfigurationInput` via:
//
//	ClientConfigurationArgs{...}
type ClientConfigurationInput interface {
	pulumi.Input

	ToClientConfigurationOutput() ClientConfigurationOutput
	ToClientConfigurationOutputWithContext(context.Context) ClientConfigurationOutput
}

// A Client Configuration
type ClientConfigurationArgs struct {
	// The client CA certificate
	CaCertificate pulumi.StringInput `pulumi:"caCertificate"`
	// The client certificate
	ClientCertificate pulumi.StringInput `pulumi:"clientCertificate"`
	// The client private key
	ClientKey pulumi.StringInput `pulumi:"clientKey"`
}

func (ClientConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientConfiguration)(nil)).Elem()
}

func (i ClientConfigurationArgs) ToClientConfigurationOutput() ClientConfigurationOutput {
	return i.ToClientConfigurationOutputWithContext(context.Background())
}

func (i ClientConfigurationArgs) ToClientConfigurationOutputWithContext(ctx context.Context) ClientConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientConfigurationOutput)
}

func (i ClientConfigurationArgs) ToClientConfigurationPtrOutput() ClientConfigurationPtrOutput {
	return i.ToClientConfigurationPtrOutputWithContext(context.Background())
}

func (i ClientConfigurationArgs) ToClientConfigurationPtrOutputWithContext(ctx context.Context) ClientConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientConfigurationOutput).ToClientConfigurationPtrOutputWithContext(ctx)
}

// ClientConfigurationPtrInput is an input type that accepts ClientConfigurationArgs, ClientConfigurationPtr and ClientConfigurationPtrOutput values.
// You can construct a concrete instance of `ClientConfigurationPtrInput` via:
//
//	        ClientConfigurationArgs{...}
//
//	or:
//
//	        nil
type ClientConfigurationPtrInput interface {
	pulumi.Input

	ToClientConfigurationPtrOutput() ClientConfigurationPtrOutput
	ToClientConfigurationPtrOutputWithContext(context.Context) ClientConfigurationPtrOutput
}

type clientConfigurationPtrType ClientConfigurationArgs

func ClientConfigurationPtr(v *ClientConfigurationArgs) ClientConfigurationPtrInput {
	return (*clientConfigurationPtrType)(v)
}

func (*clientConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientConfiguration)(nil)).Elem()
}

func (i *clientConfigurationPtrType) ToClientConfigurationPtrOutput() ClientConfigurationPtrOutput {
	return i.ToClientConfigurationPtrOutputWithContext(context.Background())
}

func (i *clientConfigurationPtrType) ToClientConfigurationPtrOutputWithContext(ctx context.Context) ClientConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientConfigurationPtrOutput)
}

// A Client Configuration
type ClientConfigurationOutput struct{ *pulumi.OutputState }

func (ClientConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientConfiguration)(nil)).Elem()
}

func (o ClientConfigurationOutput) ToClientConfigurationOutput() ClientConfigurationOutput {
	return o
}

func (o ClientConfigurationOutput) ToClientConfigurationOutputWithContext(ctx context.Context) ClientConfigurationOutput {
	return o
}

func (o ClientConfigurationOutput) ToClientConfigurationPtrOutput() ClientConfigurationPtrOutput {
	return o.ToClientConfigurationPtrOutputWithContext(context.Background())
}

func (o ClientConfigurationOutput) ToClientConfigurationPtrOutputWithContext(ctx context.Context) ClientConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientConfiguration) *ClientConfiguration {
		return &v
	}).(ClientConfigurationPtrOutput)
}

// The client CA certificate
func (o ClientConfigurationOutput) CaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v ClientConfiguration) string { return v.CaCertificate }).(pulumi.StringOutput)
}

// The client certificate
func (o ClientConfigurationOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v ClientConfiguration) string { return v.ClientCertificate }).(pulumi.StringOutput)
}

// The client private key
func (o ClientConfigurationOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v ClientConfiguration) string { return v.ClientKey }).(pulumi.StringOutput)
}

type ClientConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ClientConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientConfiguration)(nil)).Elem()
}

func (o ClientConfigurationPtrOutput) ToClientConfigurationPtrOutput() ClientConfigurationPtrOutput {
	return o
}

func (o ClientConfigurationPtrOutput) ToClientConfigurationPtrOutputWithContext(ctx context.Context) ClientConfigurationPtrOutput {
	return o
}

func (o ClientConfigurationPtrOutput) Elem() ClientConfigurationOutput {
	return o.ApplyT(func(v *ClientConfiguration) ClientConfiguration {
		if v != nil {
			return *v
		}
		var ret ClientConfiguration
		return ret
	}).(ClientConfigurationOutput)
}

// The client CA certificate
func (o ClientConfigurationPtrOutput) CaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.CaCertificate
	}).(pulumi.StringPtrOutput)
}

// The client certificate
func (o ClientConfigurationPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

// The client private key
func (o ClientConfigurationPtrOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.ClientKey
	}).(pulumi.StringPtrOutput)
}

// A Machine Secrets Cluster Info
type Cluster struct {
	// Certificate
	Id string `pulumi:"id"`
	// Private Key
	Secret string `pulumi:"secret"`
}

// ClusterInput is an input type that accepts ClusterArgs and ClusterOutput values.
// You can construct a concrete instance of `ClusterInput` via:
//
//	ClusterArgs{...}
type ClusterInput interface {
	pulumi.Input

	ToClusterOutput() ClusterOutput
	ToClusterOutputWithContext(context.Context) ClusterOutput
}

// A Machine Secrets Cluster Info
type ClusterArgs struct {
	// Certificate
	Id pulumi.StringInput `pulumi:"id"`
	// Private Key
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (ClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Cluster)(nil)).Elem()
}

func (i ClusterArgs) ToClusterOutput() ClusterOutput {
	return i.ToClusterOutputWithContext(context.Background())
}

func (i ClusterArgs) ToClusterOutputWithContext(ctx context.Context) ClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOutput)
}

func (i ClusterArgs) ToClusterPtrOutput() ClusterPtrOutput {
	return i.ToClusterPtrOutputWithContext(context.Background())
}

func (i ClusterArgs) ToClusterPtrOutputWithContext(ctx context.Context) ClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOutput).ToClusterPtrOutputWithContext(ctx)
}

// ClusterPtrInput is an input type that accepts ClusterArgs, ClusterPtr and ClusterPtrOutput values.
// You can construct a concrete instance of `ClusterPtrInput` via:
//
//	        ClusterArgs{...}
//
//	or:
//
//	        nil
type ClusterPtrInput interface {
	pulumi.Input

	ToClusterPtrOutput() ClusterPtrOutput
	ToClusterPtrOutputWithContext(context.Context) ClusterPtrOutput
}

type clusterPtrType ClusterArgs

func ClusterPtr(v *ClusterArgs) ClusterPtrInput {
	return (*clusterPtrType)(v)
}

func (*clusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Cluster)(nil)).Elem()
}

func (i *clusterPtrType) ToClusterPtrOutput() ClusterPtrOutput {
	return i.ToClusterPtrOutputWithContext(context.Background())
}

func (i *clusterPtrType) ToClusterPtrOutputWithContext(ctx context.Context) ClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPtrOutput)
}

// A Machine Secrets Cluster Info
type ClusterOutput struct{ *pulumi.OutputState }

func (ClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Cluster)(nil)).Elem()
}

func (o ClusterOutput) ToClusterOutput() ClusterOutput {
	return o
}

func (o ClusterOutput) ToClusterOutputWithContext(ctx context.Context) ClusterOutput {
	return o
}

func (o ClusterOutput) ToClusterPtrOutput() ClusterPtrOutput {
	return o.ToClusterPtrOutputWithContext(context.Background())
}

func (o ClusterOutput) ToClusterPtrOutputWithContext(ctx context.Context) ClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Cluster) *Cluster {
		return &v
	}).(ClusterPtrOutput)
}

// Certificate
func (o ClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v Cluster) string { return v.Id }).(pulumi.StringOutput)
}

// Private Key
func (o ClusterOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v Cluster) string { return v.Secret }).(pulumi.StringOutput)
}

type ClusterPtrOutput struct{ *pulumi.OutputState }

func (ClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Cluster)(nil)).Elem()
}

func (o ClusterPtrOutput) ToClusterPtrOutput() ClusterPtrOutput {
	return o
}

func (o ClusterPtrOutput) ToClusterPtrOutputWithContext(ctx context.Context) ClusterPtrOutput {
	return o
}

func (o ClusterPtrOutput) Elem() ClusterOutput {
	return o.ApplyT(func(v *Cluster) Cluster {
		if v != nil {
			return *v
		}
		var ret Cluster
		return ret
	}).(ClusterOutput)
}

// Certificate
func (o ClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Private Key
func (o ClusterPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

// A Machine Secrets Private Key
type Key struct {
	// Private Key
	Key string `pulumi:"key"`
}

// KeyInput is an input type that accepts KeyArgs and KeyOutput values.
// You can construct a concrete instance of `KeyInput` via:
//
//	KeyArgs{...}
type KeyInput interface {
	pulumi.Input

	ToKeyOutput() KeyOutput
	ToKeyOutputWithContext(context.Context) KeyOutput
}

// A Machine Secrets Private Key
type KeyArgs struct {
	// Private Key
	Key pulumi.StringInput `pulumi:"key"`
}

func (KeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Key)(nil)).Elem()
}

func (i KeyArgs) ToKeyOutput() KeyOutput {
	return i.ToKeyOutputWithContext(context.Background())
}

func (i KeyArgs) ToKeyOutputWithContext(ctx context.Context) KeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyOutput)
}

func (i KeyArgs) ToKeyPtrOutput() KeyPtrOutput {
	return i.ToKeyPtrOutputWithContext(context.Background())
}

func (i KeyArgs) ToKeyPtrOutputWithContext(ctx context.Context) KeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyOutput).ToKeyPtrOutputWithContext(ctx)
}

// KeyPtrInput is an input type that accepts KeyArgs, KeyPtr and KeyPtrOutput values.
// You can construct a concrete instance of `KeyPtrInput` via:
//
//	        KeyArgs{...}
//
//	or:
//
//	        nil
type KeyPtrInput interface {
	pulumi.Input

	ToKeyPtrOutput() KeyPtrOutput
	ToKeyPtrOutputWithContext(context.Context) KeyPtrOutput
}

type keyPtrType KeyArgs

func KeyPtr(v *KeyArgs) KeyPtrInput {
	return (*keyPtrType)(v)
}

func (*keyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Key)(nil)).Elem()
}

func (i *keyPtrType) ToKeyPtrOutput() KeyPtrOutput {
	return i.ToKeyPtrOutputWithContext(context.Background())
}

func (i *keyPtrType) ToKeyPtrOutputWithContext(ctx context.Context) KeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyPtrOutput)
}

// A Machine Secrets Private Key
type KeyOutput struct{ *pulumi.OutputState }

func (KeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Key)(nil)).Elem()
}

func (o KeyOutput) ToKeyOutput() KeyOutput {
	return o
}

func (o KeyOutput) ToKeyOutputWithContext(ctx context.Context) KeyOutput {
	return o
}

func (o KeyOutput) ToKeyPtrOutput() KeyPtrOutput {
	return o.ToKeyPtrOutputWithContext(context.Background())
}

func (o KeyOutput) ToKeyPtrOutputWithContext(ctx context.Context) KeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Key) *Key {
		return &v
	}).(KeyPtrOutput)
}

// Private Key
func (o KeyOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v Key) string { return v.Key }).(pulumi.StringOutput)
}

type KeyPtrOutput struct{ *pulumi.OutputState }

func (KeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Key)(nil)).Elem()
}

func (o KeyPtrOutput) ToKeyPtrOutput() KeyPtrOutput {
	return o
}

func (o KeyPtrOutput) ToKeyPtrOutputWithContext(ctx context.Context) KeyPtrOutput {
	return o
}

func (o KeyPtrOutput) Elem() KeyOutput {
	return o.ApplyT(func(v *Key) Key {
		if v != nil {
			return *v
		}
		var ret Key
		return ret
	}).(KeyOutput)
}

// Private Key
func (o KeyPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Key) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// A Machine Secrets Bootstrap data
type KubernetesSecrets struct {
	// The aescbc encryption secret for the talos kubernetes cluster
	AescbcEncryptionSecret *string `pulumi:"aescbcEncryptionSecret"`
	// The bootstrap token for the talos kubernetes cluster
	BootstrapToken string `pulumi:"bootstrapToken"`
	// The secretbox encryption secret for the talos kubernetes cluster
	SecretboxEncryptionSecret string `pulumi:"secretboxEncryptionSecret"`
}

// KubernetesSecretsInput is an input type that accepts KubernetesSecretsArgs and KubernetesSecretsOutput values.
// You can construct a concrete instance of `KubernetesSecretsInput` via:
//
//	KubernetesSecretsArgs{...}
type KubernetesSecretsInput interface {
	pulumi.Input

	ToKubernetesSecretsOutput() KubernetesSecretsOutput
	ToKubernetesSecretsOutputWithContext(context.Context) KubernetesSecretsOutput
}

// A Machine Secrets Bootstrap data
type KubernetesSecretsArgs struct {
	// The aescbc encryption secret for the talos kubernetes cluster
	AescbcEncryptionSecret pulumi.StringPtrInput `pulumi:"aescbcEncryptionSecret"`
	// The bootstrap token for the talos kubernetes cluster
	BootstrapToken pulumi.StringInput `pulumi:"bootstrapToken"`
	// The secretbox encryption secret for the talos kubernetes cluster
	SecretboxEncryptionSecret pulumi.StringInput `pulumi:"secretboxEncryptionSecret"`
}

func (KubernetesSecretsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesSecrets)(nil)).Elem()
}

func (i KubernetesSecretsArgs) ToKubernetesSecretsOutput() KubernetesSecretsOutput {
	return i.ToKubernetesSecretsOutputWithContext(context.Background())
}

func (i KubernetesSecretsArgs) ToKubernetesSecretsOutputWithContext(ctx context.Context) KubernetesSecretsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesSecretsOutput)
}

func (i KubernetesSecretsArgs) ToKubernetesSecretsPtrOutput() KubernetesSecretsPtrOutput {
	return i.ToKubernetesSecretsPtrOutputWithContext(context.Background())
}

func (i KubernetesSecretsArgs) ToKubernetesSecretsPtrOutputWithContext(ctx context.Context) KubernetesSecretsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesSecretsOutput).ToKubernetesSecretsPtrOutputWithContext(ctx)
}

// KubernetesSecretsPtrInput is an input type that accepts KubernetesSecretsArgs, KubernetesSecretsPtr and KubernetesSecretsPtrOutput values.
// You can construct a concrete instance of `KubernetesSecretsPtrInput` via:
//
//	        KubernetesSecretsArgs{...}
//
//	or:
//
//	        nil
type KubernetesSecretsPtrInput interface {
	pulumi.Input

	ToKubernetesSecretsPtrOutput() KubernetesSecretsPtrOutput
	ToKubernetesSecretsPtrOutputWithContext(context.Context) KubernetesSecretsPtrOutput
}

type kubernetesSecretsPtrType KubernetesSecretsArgs

func KubernetesSecretsPtr(v *KubernetesSecretsArgs) KubernetesSecretsPtrInput {
	return (*kubernetesSecretsPtrType)(v)
}

func (*kubernetesSecretsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesSecrets)(nil)).Elem()
}

func (i *kubernetesSecretsPtrType) ToKubernetesSecretsPtrOutput() KubernetesSecretsPtrOutput {
	return i.ToKubernetesSecretsPtrOutputWithContext(context.Background())
}

func (i *kubernetesSecretsPtrType) ToKubernetesSecretsPtrOutputWithContext(ctx context.Context) KubernetesSecretsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesSecretsPtrOutput)
}

// A Machine Secrets Bootstrap data
type KubernetesSecretsOutput struct{ *pulumi.OutputState }

func (KubernetesSecretsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesSecrets)(nil)).Elem()
}

func (o KubernetesSecretsOutput) ToKubernetesSecretsOutput() KubernetesSecretsOutput {
	return o
}

func (o KubernetesSecretsOutput) ToKubernetesSecretsOutputWithContext(ctx context.Context) KubernetesSecretsOutput {
	return o
}

func (o KubernetesSecretsOutput) ToKubernetesSecretsPtrOutput() KubernetesSecretsPtrOutput {
	return o.ToKubernetesSecretsPtrOutputWithContext(context.Background())
}

func (o KubernetesSecretsOutput) ToKubernetesSecretsPtrOutputWithContext(ctx context.Context) KubernetesSecretsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesSecrets) *KubernetesSecrets {
		return &v
	}).(KubernetesSecretsPtrOutput)
}

// The aescbc encryption secret for the talos kubernetes cluster
func (o KubernetesSecretsOutput) AescbcEncryptionSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesSecrets) *string { return v.AescbcEncryptionSecret }).(pulumi.StringPtrOutput)
}

// The bootstrap token for the talos kubernetes cluster
func (o KubernetesSecretsOutput) BootstrapToken() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesSecrets) string { return v.BootstrapToken }).(pulumi.StringOutput)
}

// The secretbox encryption secret for the talos kubernetes cluster
func (o KubernetesSecretsOutput) SecretboxEncryptionSecret() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesSecrets) string { return v.SecretboxEncryptionSecret }).(pulumi.StringOutput)
}

type KubernetesSecretsPtrOutput struct{ *pulumi.OutputState }

func (KubernetesSecretsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesSecrets)(nil)).Elem()
}

func (o KubernetesSecretsPtrOutput) ToKubernetesSecretsPtrOutput() KubernetesSecretsPtrOutput {
	return o
}

func (o KubernetesSecretsPtrOutput) ToKubernetesSecretsPtrOutputWithContext(ctx context.Context) KubernetesSecretsPtrOutput {
	return o
}

func (o KubernetesSecretsPtrOutput) Elem() KubernetesSecretsOutput {
	return o.ApplyT(func(v *KubernetesSecrets) KubernetesSecrets {
		if v != nil {
			return *v
		}
		var ret KubernetesSecrets
		return ret
	}).(KubernetesSecretsOutput)
}

// The aescbc encryption secret for the talos kubernetes cluster
func (o KubernetesSecretsPtrOutput) AescbcEncryptionSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesSecrets) *string {
		if v == nil {
			return nil
		}
		return v.AescbcEncryptionSecret
	}).(pulumi.StringPtrOutput)
}

// The bootstrap token for the talos kubernetes cluster
func (o KubernetesSecretsPtrOutput) BootstrapToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesSecrets) *string {
		if v == nil {
			return nil
		}
		return &v.BootstrapToken
	}).(pulumi.StringPtrOutput)
}

// The secretbox encryption secret for the talos kubernetes cluster
func (o KubernetesSecretsPtrOutput) SecretboxEncryptionSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesSecrets) *string {
		if v == nil {
			return nil
		}
		return &v.SecretboxEncryptionSecret
	}).(pulumi.StringPtrOutput)
}

// A complete Machine Secrets configuration
type MachineSecrets struct {
	Certs      Certificates      `pulumi:"certs"`
	Cluster    Cluster           `pulumi:"cluster"`
	Secrets    KubernetesSecrets `pulumi:"secrets"`
	Trustdinfo TrustdInfo        `pulumi:"trustdinfo"`
}

// MachineSecretsInput is an input type that accepts MachineSecretsArgs and MachineSecretsOutput values.
// You can construct a concrete instance of `MachineSecretsInput` via:
//
//	MachineSecretsArgs{...}
type MachineSecretsInput interface {
	pulumi.Input

	ToMachineSecretsOutput() MachineSecretsOutput
	ToMachineSecretsOutputWithContext(context.Context) MachineSecretsOutput
}

// A complete Machine Secrets configuration
type MachineSecretsArgs struct {
	Certs      CertificatesInput      `pulumi:"certs"`
	Cluster    ClusterInput           `pulumi:"cluster"`
	Secrets    KubernetesSecretsInput `pulumi:"secrets"`
	Trustdinfo TrustdInfoInput        `pulumi:"trustdinfo"`
}

func (MachineSecretsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineSecrets)(nil)).Elem()
}

func (i MachineSecretsArgs) ToMachineSecretsOutput() MachineSecretsOutput {
	return i.ToMachineSecretsOutputWithContext(context.Background())
}

func (i MachineSecretsArgs) ToMachineSecretsOutputWithContext(ctx context.Context) MachineSecretsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSecretsOutput)
}

func (i MachineSecretsArgs) ToMachineSecretsPtrOutput() MachineSecretsPtrOutput {
	return i.ToMachineSecretsPtrOutputWithContext(context.Background())
}

func (i MachineSecretsArgs) ToMachineSecretsPtrOutputWithContext(ctx context.Context) MachineSecretsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSecretsOutput).ToMachineSecretsPtrOutputWithContext(ctx)
}

// MachineSecretsPtrInput is an input type that accepts MachineSecretsArgs, MachineSecretsPtr and MachineSecretsPtrOutput values.
// You can construct a concrete instance of `MachineSecretsPtrInput` via:
//
//	        MachineSecretsArgs{...}
//
//	or:
//
//	        nil
type MachineSecretsPtrInput interface {
	pulumi.Input

	ToMachineSecretsPtrOutput() MachineSecretsPtrOutput
	ToMachineSecretsPtrOutputWithContext(context.Context) MachineSecretsPtrOutput
}

type machineSecretsPtrType MachineSecretsArgs

func MachineSecretsPtr(v *MachineSecretsArgs) MachineSecretsPtrInput {
	return (*machineSecretsPtrType)(v)
}

func (*machineSecretsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineSecrets)(nil)).Elem()
}

func (i *machineSecretsPtrType) ToMachineSecretsPtrOutput() MachineSecretsPtrOutput {
	return i.ToMachineSecretsPtrOutputWithContext(context.Background())
}

func (i *machineSecretsPtrType) ToMachineSecretsPtrOutputWithContext(ctx context.Context) MachineSecretsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSecretsPtrOutput)
}

// A complete Machine Secrets configuration
type MachineSecretsOutput struct{ *pulumi.OutputState }

func (MachineSecretsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineSecrets)(nil)).Elem()
}

func (o MachineSecretsOutput) ToMachineSecretsOutput() MachineSecretsOutput {
	return o
}

func (o MachineSecretsOutput) ToMachineSecretsOutputWithContext(ctx context.Context) MachineSecretsOutput {
	return o
}

func (o MachineSecretsOutput) ToMachineSecretsPtrOutput() MachineSecretsPtrOutput {
	return o.ToMachineSecretsPtrOutputWithContext(context.Background())
}

func (o MachineSecretsOutput) ToMachineSecretsPtrOutputWithContext(ctx context.Context) MachineSecretsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachineSecrets) *MachineSecrets {
		return &v
	}).(MachineSecretsPtrOutput)
}

func (o MachineSecretsOutput) Certs() CertificatesOutput {
	return o.ApplyT(func(v MachineSecrets) Certificates { return v.Certs }).(CertificatesOutput)
}

func (o MachineSecretsOutput) Cluster() ClusterOutput {
	return o.ApplyT(func(v MachineSecrets) Cluster { return v.Cluster }).(ClusterOutput)
}

func (o MachineSecretsOutput) Secrets() KubernetesSecretsOutput {
	return o.ApplyT(func(v MachineSecrets) KubernetesSecrets { return v.Secrets }).(KubernetesSecretsOutput)
}

func (o MachineSecretsOutput) Trustdinfo() TrustdInfoOutput {
	return o.ApplyT(func(v MachineSecrets) TrustdInfo { return v.Trustdinfo }).(TrustdInfoOutput)
}

type MachineSecretsPtrOutput struct{ *pulumi.OutputState }

func (MachineSecretsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineSecrets)(nil)).Elem()
}

func (o MachineSecretsPtrOutput) ToMachineSecretsPtrOutput() MachineSecretsPtrOutput {
	return o
}

func (o MachineSecretsPtrOutput) ToMachineSecretsPtrOutputWithContext(ctx context.Context) MachineSecretsPtrOutput {
	return o
}

func (o MachineSecretsPtrOutput) Elem() MachineSecretsOutput {
	return o.ApplyT(func(v *MachineSecrets) MachineSecrets {
		if v != nil {
			return *v
		}
		var ret MachineSecrets
		return ret
	}).(MachineSecretsOutput)
}

func (o MachineSecretsPtrOutput) Certs() CertificatesPtrOutput {
	return o.ApplyT(func(v *MachineSecrets) *Certificates {
		if v == nil {
			return nil
		}
		return &v.Certs
	}).(CertificatesPtrOutput)
}

func (o MachineSecretsPtrOutput) Cluster() ClusterPtrOutput {
	return o.ApplyT(func(v *MachineSecrets) *Cluster {
		if v == nil {
			return nil
		}
		return &v.Cluster
	}).(ClusterPtrOutput)
}

func (o MachineSecretsPtrOutput) Secrets() KubernetesSecretsPtrOutput {
	return o.ApplyT(func(v *MachineSecrets) *KubernetesSecrets {
		if v == nil {
			return nil
		}
		return &v.Secrets
	}).(KubernetesSecretsPtrOutput)
}

func (o MachineSecretsPtrOutput) Trustdinfo() TrustdInfoPtrOutput {
	return o.ApplyT(func(v *MachineSecrets) *TrustdInfo {
		if v == nil {
			return nil
		}
		return &v.Trustdinfo
	}).(TrustdInfoPtrOutput)
}

// A Machine Secrets Trust daemon info
type TrustdInfo struct {
	// The trustd token for the talos kubernetes cluster
	Token string `pulumi:"token"`
}

// TrustdInfoInput is an input type that accepts TrustdInfoArgs and TrustdInfoOutput values.
// You can construct a concrete instance of `TrustdInfoInput` via:
//
//	TrustdInfoArgs{...}
type TrustdInfoInput interface {
	pulumi.Input

	ToTrustdInfoOutput() TrustdInfoOutput
	ToTrustdInfoOutputWithContext(context.Context) TrustdInfoOutput
}

// A Machine Secrets Trust daemon info
type TrustdInfoArgs struct {
	// The trustd token for the talos kubernetes cluster
	Token pulumi.StringInput `pulumi:"token"`
}

func (TrustdInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrustdInfo)(nil)).Elem()
}

func (i TrustdInfoArgs) ToTrustdInfoOutput() TrustdInfoOutput {
	return i.ToTrustdInfoOutputWithContext(context.Background())
}

func (i TrustdInfoArgs) ToTrustdInfoOutputWithContext(ctx context.Context) TrustdInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrustdInfoOutput)
}

func (i TrustdInfoArgs) ToTrustdInfoPtrOutput() TrustdInfoPtrOutput {
	return i.ToTrustdInfoPtrOutputWithContext(context.Background())
}

func (i TrustdInfoArgs) ToTrustdInfoPtrOutputWithContext(ctx context.Context) TrustdInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrustdInfoOutput).ToTrustdInfoPtrOutputWithContext(ctx)
}

// TrustdInfoPtrInput is an input type that accepts TrustdInfoArgs, TrustdInfoPtr and TrustdInfoPtrOutput values.
// You can construct a concrete instance of `TrustdInfoPtrInput` via:
//
//	        TrustdInfoArgs{...}
//
//	or:
//
//	        nil
type TrustdInfoPtrInput interface {
	pulumi.Input

	ToTrustdInfoPtrOutput() TrustdInfoPtrOutput
	ToTrustdInfoPtrOutputWithContext(context.Context) TrustdInfoPtrOutput
}

type trustdInfoPtrType TrustdInfoArgs

func TrustdInfoPtr(v *TrustdInfoArgs) TrustdInfoPtrInput {
	return (*trustdInfoPtrType)(v)
}

func (*trustdInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TrustdInfo)(nil)).Elem()
}

func (i *trustdInfoPtrType) ToTrustdInfoPtrOutput() TrustdInfoPtrOutput {
	return i.ToTrustdInfoPtrOutputWithContext(context.Background())
}

func (i *trustdInfoPtrType) ToTrustdInfoPtrOutputWithContext(ctx context.Context) TrustdInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrustdInfoPtrOutput)
}

// A Machine Secrets Trust daemon info
type TrustdInfoOutput struct{ *pulumi.OutputState }

func (TrustdInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrustdInfo)(nil)).Elem()
}

func (o TrustdInfoOutput) ToTrustdInfoOutput() TrustdInfoOutput {
	return o
}

func (o TrustdInfoOutput) ToTrustdInfoOutputWithContext(ctx context.Context) TrustdInfoOutput {
	return o
}

func (o TrustdInfoOutput) ToTrustdInfoPtrOutput() TrustdInfoPtrOutput {
	return o.ToTrustdInfoPtrOutputWithContext(context.Background())
}

func (o TrustdInfoOutput) ToTrustdInfoPtrOutputWithContext(ctx context.Context) TrustdInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TrustdInfo) *TrustdInfo {
		return &v
	}).(TrustdInfoPtrOutput)
}

// The trustd token for the talos kubernetes cluster
func (o TrustdInfoOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v TrustdInfo) string { return v.Token }).(pulumi.StringOutput)
}

type TrustdInfoPtrOutput struct{ *pulumi.OutputState }

func (TrustdInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrustdInfo)(nil)).Elem()
}

func (o TrustdInfoPtrOutput) ToTrustdInfoPtrOutput() TrustdInfoPtrOutput {
	return o
}

func (o TrustdInfoPtrOutput) ToTrustdInfoPtrOutputWithContext(ctx context.Context) TrustdInfoPtrOutput {
	return o
}

func (o TrustdInfoPtrOutput) Elem() TrustdInfoOutput {
	return o.ApplyT(func(v *TrustdInfo) TrustdInfo {
		if v != nil {
			return *v
		}
		var ret TrustdInfo
		return ret
	}).(TrustdInfoOutput)
}

// The trustd token for the talos kubernetes cluster
func (o TrustdInfoPtrOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrustdInfo) *string {
		if v == nil {
			return nil
		}
		return &v.Token
	}).(pulumi.StringPtrOutput)
}

type GetConfigurationMachineSecrets struct {
	// The certs for the talos kubernetes cluster
	Certs GetConfigurationMachineSecretsCerts `pulumi:"certs"`
	// The cluster secrets
	Cluster GetConfigurationMachineSecretsCluster `pulumi:"cluster"`
	// The secrets for the talos kubernetes cluster
	Secrets GetConfigurationMachineSecretsSecrets `pulumi:"secrets"`
	// The trustd info for the talos kubernetes cluster
	Trustdinfo GetConfigurationMachineSecretsTrustdinfo `pulumi:"trustdinfo"`
}

// GetConfigurationMachineSecretsInput is an input type that accepts GetConfigurationMachineSecretsArgs and GetConfigurationMachineSecretsOutput values.
// You can construct a concrete instance of `GetConfigurationMachineSecretsInput` via:
//
//	GetConfigurationMachineSecretsArgs{...}
type GetConfigurationMachineSecretsInput interface {
	pulumi.Input

	ToGetConfigurationMachineSecretsOutput() GetConfigurationMachineSecretsOutput
	ToGetConfigurationMachineSecretsOutputWithContext(context.Context) GetConfigurationMachineSecretsOutput
}

type GetConfigurationMachineSecretsArgs struct {
	// The certs for the talos kubernetes cluster
	Certs GetConfigurationMachineSecretsCertsInput `pulumi:"certs"`
	// The cluster secrets
	Cluster GetConfigurationMachineSecretsClusterInput `pulumi:"cluster"`
	// The secrets for the talos kubernetes cluster
	Secrets GetConfigurationMachineSecretsSecretsInput `pulumi:"secrets"`
	// The trustd info for the talos kubernetes cluster
	Trustdinfo GetConfigurationMachineSecretsTrustdinfoInput `pulumi:"trustdinfo"`
}

func (GetConfigurationMachineSecretsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationMachineSecrets)(nil)).Elem()
}

func (i GetConfigurationMachineSecretsArgs) ToGetConfigurationMachineSecretsOutput() GetConfigurationMachineSecretsOutput {
	return i.ToGetConfigurationMachineSecretsOutputWithContext(context.Background())
}

func (i GetConfigurationMachineSecretsArgs) ToGetConfigurationMachineSecretsOutputWithContext(ctx context.Context) GetConfigurationMachineSecretsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationMachineSecretsOutput)
}

type GetConfigurationMachineSecretsOutput struct{ *pulumi.OutputState }

func (GetConfigurationMachineSecretsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationMachineSecrets)(nil)).Elem()
}

func (o GetConfigurationMachineSecretsOutput) ToGetConfigurationMachineSecretsOutput() GetConfigurationMachineSecretsOutput {
	return o
}

func (o GetConfigurationMachineSecretsOutput) ToGetConfigurationMachineSecretsOutputWithContext(ctx context.Context) GetConfigurationMachineSecretsOutput {
	return o
}

// The certs for the talos kubernetes cluster
func (o GetConfigurationMachineSecretsOutput) Certs() GetConfigurationMachineSecretsCertsOutput {
	return o.ApplyT(func(v GetConfigurationMachineSecrets) GetConfigurationMachineSecretsCerts { return v.Certs }).(GetConfigurationMachineSecretsCertsOutput)
}

// The cluster secrets
func (o GetConfigurationMachineSecretsOutput) Cluster() GetConfigurationMachineSecretsClusterOutput {
	return o.ApplyT(func(v GetConfigurationMachineSecrets) GetConfigurationMachineSecretsCluster { return v.Cluster }).(GetConfigurationMachineSecretsClusterOutput)
}

// The secrets for the talos kubernetes cluster
func (o GetConfigurationMachineSecretsOutput) Secrets() GetConfigurationMachineSecretsSecretsOutput {
	return o.ApplyT(func(v GetConfigurationMachineSecrets) GetConfigurationMachineSecretsSecrets { return v.Secrets }).(GetConfigurationMachineSecretsSecretsOutput)
}

// The trustd info for the talos kubernetes cluster
func (o GetConfigurationMachineSecretsOutput) Trustdinfo() GetConfigurationMachineSecretsTrustdinfoOutput {
	return o.ApplyT(func(v GetConfigurationMachineSecrets) GetConfigurationMachineSecretsTrustdinfo { return v.Trustdinfo }).(GetConfigurationMachineSecretsTrustdinfoOutput)
}

type GetConfigurationMachineSecretsCerts struct {
	// The certificate and key pair
	Etcd GetConfigurationMachineSecretsCertsEtcd `pulumi:"etcd"`
	// The certificate and key pair
	K8s GetConfigurationMachineSecretsCertsK8s `pulumi:"k8s"`
	// The certificate and key pair
	K8sAggregator     GetConfigurationMachineSecretsCertsK8sAggregator     `pulumi:"k8sAggregator"`
	K8sServiceaccount GetConfigurationMachineSecretsCertsK8sServiceaccount `pulumi:"k8sServiceaccount"`
	// The certificate and key pair
	Os GetConfigurationMachineSecretsCertsOs `pulumi:"os"`
}

// GetConfigurationMachineSecretsCertsInput is an input type that accepts GetConfigurationMachineSecretsCertsArgs and GetConfigurationMachineSecretsCertsOutput values.
// You can construct a concrete instance of `GetConfigurationMachineSecretsCertsInput` via:
//
//	GetConfigurationMachineSecretsCertsArgs{...}
type GetConfigurationMachineSecretsCertsInput interface {
	pulumi.Input

	ToGetConfigurationMachineSecretsCertsOutput() GetConfigurationMachineSecretsCertsOutput
	ToGetConfigurationMachineSecretsCertsOutputWithContext(context.Context) GetConfigurationMachineSecretsCertsOutput
}

type GetConfigurationMachineSecretsCertsArgs struct {
	// The certificate and key pair
	Etcd GetConfigurationMachineSecretsCertsEtcdInput `pulumi:"etcd"`
	// The certificate and key pair
	K8s GetConfigurationMachineSecretsCertsK8sInput `pulumi:"k8s"`
	// The certificate and key pair
	K8sAggregator     GetConfigurationMachineSecretsCertsK8sAggregatorInput     `pulumi:"k8sAggregator"`
	K8sServiceaccount GetConfigurationMachineSecretsCertsK8sServiceaccountInput `pulumi:"k8sServiceaccount"`
	// The certificate and key pair
	Os GetConfigurationMachineSecretsCertsOsInput `pulumi:"os"`
}

func (GetConfigurationMachineSecretsCertsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationMachineSecretsCerts)(nil)).Elem()
}

func (i GetConfigurationMachineSecretsCertsArgs) ToGetConfigurationMachineSecretsCertsOutput() GetConfigurationMachineSecretsCertsOutput {
	return i.ToGetConfigurationMachineSecretsCertsOutputWithContext(context.Background())
}

func (i GetConfigurationMachineSecretsCertsArgs) ToGetConfigurationMachineSecretsCertsOutputWithContext(ctx context.Context) GetConfigurationMachineSecretsCertsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationMachineSecretsCertsOutput)
}

type GetConfigurationMachineSecretsCertsOutput struct{ *pulumi.OutputState }

func (GetConfigurationMachineSecretsCertsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationMachineSecretsCerts)(nil)).Elem()
}

func (o GetConfigurationMachineSecretsCertsOutput) ToGetConfigurationMachineSecretsCertsOutput() GetConfigurationMachineSecretsCertsOutput {
	return o
}

func (o GetConfigurationMachineSecretsCertsOutput) ToGetConfigurationMachineSecretsCertsOutputWithContext(ctx context.Context) GetConfigurationMachineSecretsCertsOutput {
	return o
}

// The certificate and key pair
func (o GetConfigurationMachineSecretsCertsOutput) Etcd() GetConfigurationMachineSecretsCertsEtcdOutput {
	return o.ApplyT(func(v GetConfigurationMachineSecretsCerts) GetConfigurationMachineSecretsCertsEtcd { return v.Etcd }).(GetConfigurationMachineSecretsCertsEtcdOutput)
}

// The certificate and key pair
func (o GetConfigurationMachineSecretsCertsOutput) K8s() GetConfigurationMachineSecretsCertsK8sOutput {
	return o.ApplyT(func(v GetConfigurationMachineSecretsCerts) GetConfigurationMachineSecretsCertsK8s { return v.K8s }).(GetConfigurationMachineSecretsCertsK8sOutput)
}

// The certificate and key pair
func (o GetConfigurationMachineSecretsCertsOutput) K8sAggregator() GetConfigurationMachineSecretsCertsK8sAggregatorOutput {
	return o.ApplyT(func(v GetConfigurationMachineSecretsCerts) GetConfigurationMachineSecretsCertsK8sAggregator {
		return v.K8sAggregator
	}).(GetConfigurationMachineSecretsCertsK8sAggregatorOutput)
}

func (o GetConfigurationMachineSecretsCertsOutput) K8sServiceaccount() GetConfigurationMachineSecretsCertsK8sServiceaccountOutput {
	return o.ApplyT(func(v GetConfigurationMachineSecretsCerts) GetConfigurationMachineSecretsCertsK8sServiceaccount {
		return v.K8sServiceaccount
	}).(GetConfigurationMachineSecretsCertsK8sServiceaccountOutput)
}

// The certificate and key pair
func (o GetConfigurationMachineSecretsCertsOutput) Os() GetConfigurationMachineSecretsCertsOsOutput {
	return o.ApplyT(func(v GetConfigurationMachineSecretsCerts) GetConfigurationMachineSecretsCertsOs { return v.Os }).(GetConfigurationMachineSecretsCertsOsOutput)
}

type GetConfigurationMachineSecretsCertsEtcd struct {
	// certificate data
	Cert string `pulumi:"cert"`
	// key data
	Key string `pulumi:"key"`
}

// GetConfigurationMachineSecretsCertsEtcdInput is an input type that accepts GetConfigurationMachineSecretsCertsEtcdArgs and GetConfigurationMachineSecretsCertsEtcdOutput values.
// You can construct a concrete instance of `GetConfigurationMachineSecretsCertsEtcdInput` via:
//
//	GetConfigurationMachineSecretsCertsEtcdArgs{...}
type GetConfigurationMachineSecretsCertsEtcdInput interface {
	pulumi.Input

	ToGetConfigurationMachineSecretsCertsEtcdOutput() GetConfigurationMachineSecretsCertsEtcdOutput
	ToGetConfigurationMachineSecretsCertsEtcdOutputWithContext(context.Context) GetConfigurationMachineSecretsCertsEtcdOutput
}

type GetConfigurationMachineSecretsCertsEtcdArgs struct {
	// certificate data
	Cert pulumi.StringInput `pulumi:"cert"`
	// key data
	Key pulumi.StringInput `pulumi:"key"`
}

func (GetConfigurationMachineSecretsCertsEtcdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationMachineSecretsCertsEtcd)(nil)).Elem()
}

func (i GetConfigurationMachineSecretsCertsEtcdArgs) ToGetConfigurationMachineSecretsCertsEtcdOutput() GetConfigurationMachineSecretsCertsEtcdOutput {
	return i.ToGetConfigurationMachineSecretsCertsEtcdOutputWithContext(context.Background())
}

func (i GetConfigurationMachineSecretsCertsEtcdArgs) ToGetConfigurationMachineSecretsCertsEtcdOutputWithContext(ctx context.Context) GetConfigurationMachineSecretsCertsEtcdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationMachineSecretsCertsEtcdOutput)
}

type GetConfigurationMachineSecretsCertsEtcdOutput struct{ *pulumi.OutputState }

func (GetConfigurationMachineSecretsCertsEtcdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationMachineSecretsCertsEtcd)(nil)).Elem()
}

func (o GetConfigurationMachineSecretsCertsEtcdOutput) ToGetConfigurationMachineSecretsCertsEtcdOutput() GetConfigurationMachineSecretsCertsEtcdOutput {
	return o
}

func (o GetConfigurationMachineSecretsCertsEtcdOutput) ToGetConfigurationMachineSecretsCertsEtcdOutputWithContext(ctx context.Context) GetConfigurationMachineSecretsCertsEtcdOutput {
	return o
}

// certificate data
func (o GetConfigurationMachineSecretsCertsEtcdOutput) Cert() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationMachineSecretsCertsEtcd) string { return v.Cert }).(pulumi.StringOutput)
}

// key data
func (o GetConfigurationMachineSecretsCertsEtcdOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationMachineSecretsCertsEtcd) string { return v.Key }).(pulumi.StringOutput)
}

type GetConfigurationMachineSecretsCertsK8s struct {
	// certificate data
	Cert string `pulumi:"cert"`
	// key data
	Key string `pulumi:"key"`
}

// GetConfigurationMachineSecretsCertsK8sInput is an input type that accepts GetConfigurationMachineSecretsCertsK8sArgs and GetConfigurationMachineSecretsCertsK8sOutput values.
// You can construct a concrete instance of `GetConfigurationMachineSecretsCertsK8sInput` via:
//
//	GetConfigurationMachineSecretsCertsK8sArgs{...}
type GetConfigurationMachineSecretsCertsK8sInput interface {
	pulumi.Input

	ToGetConfigurationMachineSecretsCertsK8sOutput() GetConfigurationMachineSecretsCertsK8sOutput
	ToGetConfigurationMachineSecretsCertsK8sOutputWithContext(context.Context) GetConfigurationMachineSecretsCertsK8sOutput
}

type GetConfigurationMachineSecretsCertsK8sArgs struct {
	// certificate data
	Cert pulumi.StringInput `pulumi:"cert"`
	// key data
	Key pulumi.StringInput `pulumi:"key"`
}

func (GetConfigurationMachineSecretsCertsK8sArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationMachineSecretsCertsK8s)(nil)).Elem()
}

func (i GetConfigurationMachineSecretsCertsK8sArgs) ToGetConfigurationMachineSecretsCertsK8sOutput() GetConfigurationMachineSecretsCertsK8sOutput {
	return i.ToGetConfigurationMachineSecretsCertsK8sOutputWithContext(context.Background())
}

func (i GetConfigurationMachineSecretsCertsK8sArgs) ToGetConfigurationMachineSecretsCertsK8sOutputWithContext(ctx context.Context) GetConfigurationMachineSecretsCertsK8sOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationMachineSecretsCertsK8sOutput)
}

type GetConfigurationMachineSecretsCertsK8sOutput struct{ *pulumi.OutputState }

func (GetConfigurationMachineSecretsCertsK8sOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationMachineSecretsCertsK8s)(nil)).Elem()
}

func (o GetConfigurationMachineSecretsCertsK8sOutput) ToGetConfigurationMachineSecretsCertsK8sOutput() GetConfigurationMachineSecretsCertsK8sOutput {
	return o
}

func (o GetConfigurationMachineSecretsCertsK8sOutput) ToGetConfigurationMachineSecretsCertsK8sOutputWithContext(ctx context.Context) GetConfigurationMachineSecretsCertsK8sOutput {
	return o
}

// certificate data
func (o GetConfigurationMachineSecretsCertsK8sOutput) Cert() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationMachineSecretsCertsK8s) string { return v.Cert }).(pulumi.StringOutput)
}

// key data
func (o GetConfigurationMachineSecretsCertsK8sOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationMachineSecretsCertsK8s) string { return v.Key }).(pulumi.StringOutput)
}

type GetConfigurationMachineSecretsCertsK8sAggregator struct {
	// certificate data
	Cert string `pulumi:"cert"`
	// key data
	Key string `pulumi:"key"`
}

// GetConfigurationMachineSecretsCertsK8sAggregatorInput is an input type that accepts GetConfigurationMachineSecretsCertsK8sAggregatorArgs and GetConfigurationMachineSecretsCertsK8sAggregatorOutput values.
// You can construct a concrete instance of `GetConfigurationMachineSecretsCertsK8sAggregatorInput` via:
//
//	GetConfigurationMachineSecretsCertsK8sAggregatorArgs{...}
type GetConfigurationMachineSecretsCertsK8sAggregatorInput interface {
	pulumi.Input

	ToGetConfigurationMachineSecretsCertsK8sAggregatorOutput() GetConfigurationMachineSecretsCertsK8sAggregatorOutput
	ToGetConfigurationMachineSecretsCertsK8sAggregatorOutputWithContext(context.Context) GetConfigurationMachineSecretsCertsK8sAggregatorOutput
}

type GetConfigurationMachineSecretsCertsK8sAggregatorArgs struct {
	// certificate data
	Cert pulumi.StringInput `pulumi:"cert"`
	// key data
	Key pulumi.StringInput `pulumi:"key"`
}

func (GetConfigurationMachineSecretsCertsK8sAggregatorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationMachineSecretsCertsK8sAggregator)(nil)).Elem()
}

func (i GetConfigurationMachineSecretsCertsK8sAggregatorArgs) ToGetConfigurationMachineSecretsCertsK8sAggregatorOutput() GetConfigurationMachineSecretsCertsK8sAggregatorOutput {
	return i.ToGetConfigurationMachineSecretsCertsK8sAggregatorOutputWithContext(context.Background())
}

func (i GetConfigurationMachineSecretsCertsK8sAggregatorArgs) ToGetConfigurationMachineSecretsCertsK8sAggregatorOutputWithContext(ctx context.Context) GetConfigurationMachineSecretsCertsK8sAggregatorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationMachineSecretsCertsK8sAggregatorOutput)
}

type GetConfigurationMachineSecretsCertsK8sAggregatorOutput struct{ *pulumi.OutputState }

func (GetConfigurationMachineSecretsCertsK8sAggregatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationMachineSecretsCertsK8sAggregator)(nil)).Elem()
}

func (o GetConfigurationMachineSecretsCertsK8sAggregatorOutput) ToGetConfigurationMachineSecretsCertsK8sAggregatorOutput() GetConfigurationMachineSecretsCertsK8sAggregatorOutput {
	return o
}

func (o GetConfigurationMachineSecretsCertsK8sAggregatorOutput) ToGetConfigurationMachineSecretsCertsK8sAggregatorOutputWithContext(ctx context.Context) GetConfigurationMachineSecretsCertsK8sAggregatorOutput {
	return o
}

// certificate data
func (o GetConfigurationMachineSecretsCertsK8sAggregatorOutput) Cert() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationMachineSecretsCertsK8sAggregator) string { return v.Cert }).(pulumi.StringOutput)
}

// key data
func (o GetConfigurationMachineSecretsCertsK8sAggregatorOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationMachineSecretsCertsK8sAggregator) string { return v.Key }).(pulumi.StringOutput)
}

type GetConfigurationMachineSecretsCertsK8sServiceaccount struct {
	// The key for the k8s service account
	Key string `pulumi:"key"`
}

// GetConfigurationMachineSecretsCertsK8sServiceaccountInput is an input type that accepts GetConfigurationMachineSecretsCertsK8sServiceaccountArgs and GetConfigurationMachineSecretsCertsK8sServiceaccountOutput values.
// You can construct a concrete instance of `GetConfigurationMachineSecretsCertsK8sServiceaccountInput` via:
//
//	GetConfigurationMachineSecretsCertsK8sServiceaccountArgs{...}
type GetConfigurationMachineSecretsCertsK8sServiceaccountInput interface {
	pulumi.Input

	ToGetConfigurationMachineSecretsCertsK8sServiceaccountOutput() GetConfigurationMachineSecretsCertsK8sServiceaccountOutput
	ToGetConfigurationMachineSecretsCertsK8sServiceaccountOutputWithContext(context.Context) GetConfigurationMachineSecretsCertsK8sServiceaccountOutput
}

type GetConfigurationMachineSecretsCertsK8sServiceaccountArgs struct {
	// The key for the k8s service account
	Key pulumi.StringInput `pulumi:"key"`
}

func (GetConfigurationMachineSecretsCertsK8sServiceaccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationMachineSecretsCertsK8sServiceaccount)(nil)).Elem()
}

func (i GetConfigurationMachineSecretsCertsK8sServiceaccountArgs) ToGetConfigurationMachineSecretsCertsK8sServiceaccountOutput() GetConfigurationMachineSecretsCertsK8sServiceaccountOutput {
	return i.ToGetConfigurationMachineSecretsCertsK8sServiceaccountOutputWithContext(context.Background())
}

func (i GetConfigurationMachineSecretsCertsK8sServiceaccountArgs) ToGetConfigurationMachineSecretsCertsK8sServiceaccountOutputWithContext(ctx context.Context) GetConfigurationMachineSecretsCertsK8sServiceaccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationMachineSecretsCertsK8sServiceaccountOutput)
}

type GetConfigurationMachineSecretsCertsK8sServiceaccountOutput struct{ *pulumi.OutputState }

func (GetConfigurationMachineSecretsCertsK8sServiceaccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationMachineSecretsCertsK8sServiceaccount)(nil)).Elem()
}

func (o GetConfigurationMachineSecretsCertsK8sServiceaccountOutput) ToGetConfigurationMachineSecretsCertsK8sServiceaccountOutput() GetConfigurationMachineSecretsCertsK8sServiceaccountOutput {
	return o
}

func (o GetConfigurationMachineSecretsCertsK8sServiceaccountOutput) ToGetConfigurationMachineSecretsCertsK8sServiceaccountOutputWithContext(ctx context.Context) GetConfigurationMachineSecretsCertsK8sServiceaccountOutput {
	return o
}

// The key for the k8s service account
func (o GetConfigurationMachineSecretsCertsK8sServiceaccountOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationMachineSecretsCertsK8sServiceaccount) string { return v.Key }).(pulumi.StringOutput)
}

type GetConfigurationMachineSecretsCertsOs struct {
	// certificate data
	Cert string `pulumi:"cert"`
	// key data
	Key string `pulumi:"key"`
}

// GetConfigurationMachineSecretsCertsOsInput is an input type that accepts GetConfigurationMachineSecretsCertsOsArgs and GetConfigurationMachineSecretsCertsOsOutput values.
// You can construct a concrete instance of `GetConfigurationMachineSecretsCertsOsInput` via:
//
//	GetConfigurationMachineSecretsCertsOsArgs{...}
type GetConfigurationMachineSecretsCertsOsInput interface {
	pulumi.Input

	ToGetConfigurationMachineSecretsCertsOsOutput() GetConfigurationMachineSecretsCertsOsOutput
	ToGetConfigurationMachineSecretsCertsOsOutputWithContext(context.Context) GetConfigurationMachineSecretsCertsOsOutput
}

type GetConfigurationMachineSecretsCertsOsArgs struct {
	// certificate data
	Cert pulumi.StringInput `pulumi:"cert"`
	// key data
	Key pulumi.StringInput `pulumi:"key"`
}

func (GetConfigurationMachineSecretsCertsOsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationMachineSecretsCertsOs)(nil)).Elem()
}

func (i GetConfigurationMachineSecretsCertsOsArgs) ToGetConfigurationMachineSecretsCertsOsOutput() GetConfigurationMachineSecretsCertsOsOutput {
	return i.ToGetConfigurationMachineSecretsCertsOsOutputWithContext(context.Background())
}

func (i GetConfigurationMachineSecretsCertsOsArgs) ToGetConfigurationMachineSecretsCertsOsOutputWithContext(ctx context.Context) GetConfigurationMachineSecretsCertsOsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationMachineSecretsCertsOsOutput)
}

type GetConfigurationMachineSecretsCertsOsOutput struct{ *pulumi.OutputState }

func (GetConfigurationMachineSecretsCertsOsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationMachineSecretsCertsOs)(nil)).Elem()
}

func (o GetConfigurationMachineSecretsCertsOsOutput) ToGetConfigurationMachineSecretsCertsOsOutput() GetConfigurationMachineSecretsCertsOsOutput {
	return o
}

func (o GetConfigurationMachineSecretsCertsOsOutput) ToGetConfigurationMachineSecretsCertsOsOutputWithContext(ctx context.Context) GetConfigurationMachineSecretsCertsOsOutput {
	return o
}

// certificate data
func (o GetConfigurationMachineSecretsCertsOsOutput) Cert() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationMachineSecretsCertsOs) string { return v.Cert }).(pulumi.StringOutput)
}

// key data
func (o GetConfigurationMachineSecretsCertsOsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationMachineSecretsCertsOs) string { return v.Key }).(pulumi.StringOutput)
}

type GetConfigurationMachineSecretsCluster struct {
	// The cluster id
	Id string `pulumi:"id"`
	// The cluster secret
	Secret string `pulumi:"secret"`
}

// GetConfigurationMachineSecretsClusterInput is an input type that accepts GetConfigurationMachineSecretsClusterArgs and GetConfigurationMachineSecretsClusterOutput values.
// You can construct a concrete instance of `GetConfigurationMachineSecretsClusterInput` via:
//
//	GetConfigurationMachineSecretsClusterArgs{...}
type GetConfigurationMachineSecretsClusterInput interface {
	pulumi.Input

	ToGetConfigurationMachineSecretsClusterOutput() GetConfigurationMachineSecretsClusterOutput
	ToGetConfigurationMachineSecretsClusterOutputWithContext(context.Context) GetConfigurationMachineSecretsClusterOutput
}

type GetConfigurationMachineSecretsClusterArgs struct {
	// The cluster id
	Id pulumi.StringInput `pulumi:"id"`
	// The cluster secret
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (GetConfigurationMachineSecretsClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationMachineSecretsCluster)(nil)).Elem()
}

func (i GetConfigurationMachineSecretsClusterArgs) ToGetConfigurationMachineSecretsClusterOutput() GetConfigurationMachineSecretsClusterOutput {
	return i.ToGetConfigurationMachineSecretsClusterOutputWithContext(context.Background())
}

func (i GetConfigurationMachineSecretsClusterArgs) ToGetConfigurationMachineSecretsClusterOutputWithContext(ctx context.Context) GetConfigurationMachineSecretsClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationMachineSecretsClusterOutput)
}

type GetConfigurationMachineSecretsClusterOutput struct{ *pulumi.OutputState }

func (GetConfigurationMachineSecretsClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationMachineSecretsCluster)(nil)).Elem()
}

func (o GetConfigurationMachineSecretsClusterOutput) ToGetConfigurationMachineSecretsClusterOutput() GetConfigurationMachineSecretsClusterOutput {
	return o
}

func (o GetConfigurationMachineSecretsClusterOutput) ToGetConfigurationMachineSecretsClusterOutputWithContext(ctx context.Context) GetConfigurationMachineSecretsClusterOutput {
	return o
}

// The cluster id
func (o GetConfigurationMachineSecretsClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationMachineSecretsCluster) string { return v.Id }).(pulumi.StringOutput)
}

// The cluster secret
func (o GetConfigurationMachineSecretsClusterOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationMachineSecretsCluster) string { return v.Secret }).(pulumi.StringOutput)
}

type GetConfigurationMachineSecretsSecrets struct {
	// The aescbc encryption secret for the talos kubernetes cluster
	AescbcEncryptionSecret *string `pulumi:"aescbcEncryptionSecret"`
	// The bootstrap token for the talos kubernetes cluster
	BootstrapToken string `pulumi:"bootstrapToken"`
	// The secretbox encryption secret for the talos kubernetes cluster
	SecretboxEncryptionSecret string `pulumi:"secretboxEncryptionSecret"`
}

// GetConfigurationMachineSecretsSecretsInput is an input type that accepts GetConfigurationMachineSecretsSecretsArgs and GetConfigurationMachineSecretsSecretsOutput values.
// You can construct a concrete instance of `GetConfigurationMachineSecretsSecretsInput` via:
//
//	GetConfigurationMachineSecretsSecretsArgs{...}
type GetConfigurationMachineSecretsSecretsInput interface {
	pulumi.Input

	ToGetConfigurationMachineSecretsSecretsOutput() GetConfigurationMachineSecretsSecretsOutput
	ToGetConfigurationMachineSecretsSecretsOutputWithContext(context.Context) GetConfigurationMachineSecretsSecretsOutput
}

type GetConfigurationMachineSecretsSecretsArgs struct {
	// The aescbc encryption secret for the talos kubernetes cluster
	AescbcEncryptionSecret pulumi.StringPtrInput `pulumi:"aescbcEncryptionSecret"`
	// The bootstrap token for the talos kubernetes cluster
	BootstrapToken pulumi.StringInput `pulumi:"bootstrapToken"`
	// The secretbox encryption secret for the talos kubernetes cluster
	SecretboxEncryptionSecret pulumi.StringInput `pulumi:"secretboxEncryptionSecret"`
}

func (GetConfigurationMachineSecretsSecretsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationMachineSecretsSecrets)(nil)).Elem()
}

func (i GetConfigurationMachineSecretsSecretsArgs) ToGetConfigurationMachineSecretsSecretsOutput() GetConfigurationMachineSecretsSecretsOutput {
	return i.ToGetConfigurationMachineSecretsSecretsOutputWithContext(context.Background())
}

func (i GetConfigurationMachineSecretsSecretsArgs) ToGetConfigurationMachineSecretsSecretsOutputWithContext(ctx context.Context) GetConfigurationMachineSecretsSecretsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationMachineSecretsSecretsOutput)
}

type GetConfigurationMachineSecretsSecretsOutput struct{ *pulumi.OutputState }

func (GetConfigurationMachineSecretsSecretsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationMachineSecretsSecrets)(nil)).Elem()
}

func (o GetConfigurationMachineSecretsSecretsOutput) ToGetConfigurationMachineSecretsSecretsOutput() GetConfigurationMachineSecretsSecretsOutput {
	return o
}

func (o GetConfigurationMachineSecretsSecretsOutput) ToGetConfigurationMachineSecretsSecretsOutputWithContext(ctx context.Context) GetConfigurationMachineSecretsSecretsOutput {
	return o
}

// The aescbc encryption secret for the talos kubernetes cluster
func (o GetConfigurationMachineSecretsSecretsOutput) AescbcEncryptionSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConfigurationMachineSecretsSecrets) *string { return v.AescbcEncryptionSecret }).(pulumi.StringPtrOutput)
}

// The bootstrap token for the talos kubernetes cluster
func (o GetConfigurationMachineSecretsSecretsOutput) BootstrapToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationMachineSecretsSecrets) string { return v.BootstrapToken }).(pulumi.StringOutput)
}

// The secretbox encryption secret for the talos kubernetes cluster
func (o GetConfigurationMachineSecretsSecretsOutput) SecretboxEncryptionSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationMachineSecretsSecrets) string { return v.SecretboxEncryptionSecret }).(pulumi.StringOutput)
}

type GetConfigurationMachineSecretsTrustdinfo struct {
	// The trustd token for the talos kubernetes cluster
	Token string `pulumi:"token"`
}

// GetConfigurationMachineSecretsTrustdinfoInput is an input type that accepts GetConfigurationMachineSecretsTrustdinfoArgs and GetConfigurationMachineSecretsTrustdinfoOutput values.
// You can construct a concrete instance of `GetConfigurationMachineSecretsTrustdinfoInput` via:
//
//	GetConfigurationMachineSecretsTrustdinfoArgs{...}
type GetConfigurationMachineSecretsTrustdinfoInput interface {
	pulumi.Input

	ToGetConfigurationMachineSecretsTrustdinfoOutput() GetConfigurationMachineSecretsTrustdinfoOutput
	ToGetConfigurationMachineSecretsTrustdinfoOutputWithContext(context.Context) GetConfigurationMachineSecretsTrustdinfoOutput
}

type GetConfigurationMachineSecretsTrustdinfoArgs struct {
	// The trustd token for the talos kubernetes cluster
	Token pulumi.StringInput `pulumi:"token"`
}

func (GetConfigurationMachineSecretsTrustdinfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationMachineSecretsTrustdinfo)(nil)).Elem()
}

func (i GetConfigurationMachineSecretsTrustdinfoArgs) ToGetConfigurationMachineSecretsTrustdinfoOutput() GetConfigurationMachineSecretsTrustdinfoOutput {
	return i.ToGetConfigurationMachineSecretsTrustdinfoOutputWithContext(context.Background())
}

func (i GetConfigurationMachineSecretsTrustdinfoArgs) ToGetConfigurationMachineSecretsTrustdinfoOutputWithContext(ctx context.Context) GetConfigurationMachineSecretsTrustdinfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationMachineSecretsTrustdinfoOutput)
}

type GetConfigurationMachineSecretsTrustdinfoOutput struct{ *pulumi.OutputState }

func (GetConfigurationMachineSecretsTrustdinfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationMachineSecretsTrustdinfo)(nil)).Elem()
}

func (o GetConfigurationMachineSecretsTrustdinfoOutput) ToGetConfigurationMachineSecretsTrustdinfoOutput() GetConfigurationMachineSecretsTrustdinfoOutput {
	return o
}

func (o GetConfigurationMachineSecretsTrustdinfoOutput) ToGetConfigurationMachineSecretsTrustdinfoOutputWithContext(ctx context.Context) GetConfigurationMachineSecretsTrustdinfoOutput {
	return o
}

// The trustd token for the talos kubernetes cluster
func (o GetConfigurationMachineSecretsTrustdinfoOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationMachineSecretsTrustdinfo) string { return v.Token }).(pulumi.StringOutput)
}

type GetDisksClientConfiguration struct {
	// The client CA certificate
	CaCertificate string `pulumi:"caCertificate"`
	// The client certificate
	ClientCertificate string `pulumi:"clientCertificate"`
	// The client key
	ClientKey string `pulumi:"clientKey"`
}

// GetDisksClientConfigurationInput is an input type that accepts GetDisksClientConfigurationArgs and GetDisksClientConfigurationOutput values.
// You can construct a concrete instance of `GetDisksClientConfigurationInput` via:
//
//	GetDisksClientConfigurationArgs{...}
type GetDisksClientConfigurationInput interface {
	pulumi.Input

	ToGetDisksClientConfigurationOutput() GetDisksClientConfigurationOutput
	ToGetDisksClientConfigurationOutputWithContext(context.Context) GetDisksClientConfigurationOutput
}

type GetDisksClientConfigurationArgs struct {
	// The client CA certificate
	CaCertificate pulumi.StringInput `pulumi:"caCertificate"`
	// The client certificate
	ClientCertificate pulumi.StringInput `pulumi:"clientCertificate"`
	// The client key
	ClientKey pulumi.StringInput `pulumi:"clientKey"`
}

func (GetDisksClientConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDisksClientConfiguration)(nil)).Elem()
}

func (i GetDisksClientConfigurationArgs) ToGetDisksClientConfigurationOutput() GetDisksClientConfigurationOutput {
	return i.ToGetDisksClientConfigurationOutputWithContext(context.Background())
}

func (i GetDisksClientConfigurationArgs) ToGetDisksClientConfigurationOutputWithContext(ctx context.Context) GetDisksClientConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDisksClientConfigurationOutput)
}

type GetDisksClientConfigurationOutput struct{ *pulumi.OutputState }

func (GetDisksClientConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDisksClientConfiguration)(nil)).Elem()
}

func (o GetDisksClientConfigurationOutput) ToGetDisksClientConfigurationOutput() GetDisksClientConfigurationOutput {
	return o
}

func (o GetDisksClientConfigurationOutput) ToGetDisksClientConfigurationOutputWithContext(ctx context.Context) GetDisksClientConfigurationOutput {
	return o
}

// The client CA certificate
func (o GetDisksClientConfigurationOutput) CaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetDisksClientConfiguration) string { return v.CaCertificate }).(pulumi.StringOutput)
}

// The client certificate
func (o GetDisksClientConfigurationOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetDisksClientConfiguration) string { return v.ClientCertificate }).(pulumi.StringOutput)
}

// The client key
func (o GetDisksClientConfigurationOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDisksClientConfiguration) string { return v.ClientKey }).(pulumi.StringOutput)
}

type GetDisksDisk struct {
	BusPath        string   `pulumi:"busPath"`
	Cdrom          bool     `pulumi:"cdrom"`
	DevPath        string   `pulumi:"devPath"`
	IoSize         int      `pulumi:"ioSize"`
	Modalias       string   `pulumi:"modalias"`
	Model          string   `pulumi:"model"`
	PrettySize     string   `pulumi:"prettySize"`
	Readonly       bool     `pulumi:"readonly"`
	Rotational     bool     `pulumi:"rotational"`
	SecondaryDisks []string `pulumi:"secondaryDisks"`
	SectorSize     int      `pulumi:"sectorSize"`
	Serial         string   `pulumi:"serial"`
	Size           int      `pulumi:"size"`
	SubSystem      string   `pulumi:"subSystem"`
	Symlinks       []string `pulumi:"symlinks"`
	Transport      string   `pulumi:"transport"`
	Uuid           string   `pulumi:"uuid"`
	Wwid           string   `pulumi:"wwid"`
}

// GetDisksDiskInput is an input type that accepts GetDisksDiskArgs and GetDisksDiskOutput values.
// You can construct a concrete instance of `GetDisksDiskInput` via:
//
//	GetDisksDiskArgs{...}
type GetDisksDiskInput interface {
	pulumi.Input

	ToGetDisksDiskOutput() GetDisksDiskOutput
	ToGetDisksDiskOutputWithContext(context.Context) GetDisksDiskOutput
}

type GetDisksDiskArgs struct {
	BusPath        pulumi.StringInput      `pulumi:"busPath"`
	Cdrom          pulumi.BoolInput        `pulumi:"cdrom"`
	DevPath        pulumi.StringInput      `pulumi:"devPath"`
	IoSize         pulumi.IntInput         `pulumi:"ioSize"`
	Modalias       pulumi.StringInput      `pulumi:"modalias"`
	Model          pulumi.StringInput      `pulumi:"model"`
	PrettySize     pulumi.StringInput      `pulumi:"prettySize"`
	Readonly       pulumi.BoolInput        `pulumi:"readonly"`
	Rotational     pulumi.BoolInput        `pulumi:"rotational"`
	SecondaryDisks pulumi.StringArrayInput `pulumi:"secondaryDisks"`
	SectorSize     pulumi.IntInput         `pulumi:"sectorSize"`
	Serial         pulumi.StringInput      `pulumi:"serial"`
	Size           pulumi.IntInput         `pulumi:"size"`
	SubSystem      pulumi.StringInput      `pulumi:"subSystem"`
	Symlinks       pulumi.StringArrayInput `pulumi:"symlinks"`
	Transport      pulumi.StringInput      `pulumi:"transport"`
	Uuid           pulumi.StringInput      `pulumi:"uuid"`
	Wwid           pulumi.StringInput      `pulumi:"wwid"`
}

func (GetDisksDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDisksDisk)(nil)).Elem()
}

func (i GetDisksDiskArgs) ToGetDisksDiskOutput() GetDisksDiskOutput {
	return i.ToGetDisksDiskOutputWithContext(context.Background())
}

func (i GetDisksDiskArgs) ToGetDisksDiskOutputWithContext(ctx context.Context) GetDisksDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDisksDiskOutput)
}

// GetDisksDiskArrayInput is an input type that accepts GetDisksDiskArray and GetDisksDiskArrayOutput values.
// You can construct a concrete instance of `GetDisksDiskArrayInput` via:
//
//	GetDisksDiskArray{ GetDisksDiskArgs{...} }
type GetDisksDiskArrayInput interface {
	pulumi.Input

	ToGetDisksDiskArrayOutput() GetDisksDiskArrayOutput
	ToGetDisksDiskArrayOutputWithContext(context.Context) GetDisksDiskArrayOutput
}

type GetDisksDiskArray []GetDisksDiskInput

func (GetDisksDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDisksDisk)(nil)).Elem()
}

func (i GetDisksDiskArray) ToGetDisksDiskArrayOutput() GetDisksDiskArrayOutput {
	return i.ToGetDisksDiskArrayOutputWithContext(context.Background())
}

func (i GetDisksDiskArray) ToGetDisksDiskArrayOutputWithContext(ctx context.Context) GetDisksDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDisksDiskArrayOutput)
}

type GetDisksDiskOutput struct{ *pulumi.OutputState }

func (GetDisksDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDisksDisk)(nil)).Elem()
}

func (o GetDisksDiskOutput) ToGetDisksDiskOutput() GetDisksDiskOutput {
	return o
}

func (o GetDisksDiskOutput) ToGetDisksDiskOutputWithContext(ctx context.Context) GetDisksDiskOutput {
	return o
}

func (o GetDisksDiskOutput) BusPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetDisksDisk) string { return v.BusPath }).(pulumi.StringOutput)
}

func (o GetDisksDiskOutput) Cdrom() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDisksDisk) bool { return v.Cdrom }).(pulumi.BoolOutput)
}

func (o GetDisksDiskOutput) DevPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetDisksDisk) string { return v.DevPath }).(pulumi.StringOutput)
}

func (o GetDisksDiskOutput) IoSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetDisksDisk) int { return v.IoSize }).(pulumi.IntOutput)
}

func (o GetDisksDiskOutput) Modalias() pulumi.StringOutput {
	return o.ApplyT(func(v GetDisksDisk) string { return v.Modalias }).(pulumi.StringOutput)
}

func (o GetDisksDiskOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v GetDisksDisk) string { return v.Model }).(pulumi.StringOutput)
}

func (o GetDisksDiskOutput) PrettySize() pulumi.StringOutput {
	return o.ApplyT(func(v GetDisksDisk) string { return v.PrettySize }).(pulumi.StringOutput)
}

func (o GetDisksDiskOutput) Readonly() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDisksDisk) bool { return v.Readonly }).(pulumi.BoolOutput)
}

func (o GetDisksDiskOutput) Rotational() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDisksDisk) bool { return v.Rotational }).(pulumi.BoolOutput)
}

func (o GetDisksDiskOutput) SecondaryDisks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDisksDisk) []string { return v.SecondaryDisks }).(pulumi.StringArrayOutput)
}

func (o GetDisksDiskOutput) SectorSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetDisksDisk) int { return v.SectorSize }).(pulumi.IntOutput)
}

func (o GetDisksDiskOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetDisksDisk) string { return v.Serial }).(pulumi.StringOutput)
}

func (o GetDisksDiskOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetDisksDisk) int { return v.Size }).(pulumi.IntOutput)
}

func (o GetDisksDiskOutput) SubSystem() pulumi.StringOutput {
	return o.ApplyT(func(v GetDisksDisk) string { return v.SubSystem }).(pulumi.StringOutput)
}

func (o GetDisksDiskOutput) Symlinks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDisksDisk) []string { return v.Symlinks }).(pulumi.StringArrayOutput)
}

func (o GetDisksDiskOutput) Transport() pulumi.StringOutput {
	return o.ApplyT(func(v GetDisksDisk) string { return v.Transport }).(pulumi.StringOutput)
}

func (o GetDisksDiskOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetDisksDisk) string { return v.Uuid }).(pulumi.StringOutput)
}

func (o GetDisksDiskOutput) Wwid() pulumi.StringOutput {
	return o.ApplyT(func(v GetDisksDisk) string { return v.Wwid }).(pulumi.StringOutput)
}

type GetDisksDiskArrayOutput struct{ *pulumi.OutputState }

func (GetDisksDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDisksDisk)(nil)).Elem()
}

func (o GetDisksDiskArrayOutput) ToGetDisksDiskArrayOutput() GetDisksDiskArrayOutput {
	return o
}

func (o GetDisksDiskArrayOutput) ToGetDisksDiskArrayOutputWithContext(ctx context.Context) GetDisksDiskArrayOutput {
	return o
}

func (o GetDisksDiskArrayOutput) Index(i pulumi.IntInput) GetDisksDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDisksDisk {
		return vs[0].([]GetDisksDisk)[vs[1].(int)]
	}).(GetDisksDiskOutput)
}

type GetDisksTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
}

// GetDisksTimeoutsInput is an input type that accepts GetDisksTimeoutsArgs and GetDisksTimeoutsOutput values.
// You can construct a concrete instance of `GetDisksTimeoutsInput` via:
//
//	GetDisksTimeoutsArgs{...}
type GetDisksTimeoutsInput interface {
	pulumi.Input

	ToGetDisksTimeoutsOutput() GetDisksTimeoutsOutput
	ToGetDisksTimeoutsOutputWithContext(context.Context) GetDisksTimeoutsOutput
}

type GetDisksTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
}

func (GetDisksTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDisksTimeouts)(nil)).Elem()
}

func (i GetDisksTimeoutsArgs) ToGetDisksTimeoutsOutput() GetDisksTimeoutsOutput {
	return i.ToGetDisksTimeoutsOutputWithContext(context.Background())
}

func (i GetDisksTimeoutsArgs) ToGetDisksTimeoutsOutputWithContext(ctx context.Context) GetDisksTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDisksTimeoutsOutput)
}

func (i GetDisksTimeoutsArgs) ToGetDisksTimeoutsPtrOutput() GetDisksTimeoutsPtrOutput {
	return i.ToGetDisksTimeoutsPtrOutputWithContext(context.Background())
}

func (i GetDisksTimeoutsArgs) ToGetDisksTimeoutsPtrOutputWithContext(ctx context.Context) GetDisksTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDisksTimeoutsOutput).ToGetDisksTimeoutsPtrOutputWithContext(ctx)
}

// GetDisksTimeoutsPtrInput is an input type that accepts GetDisksTimeoutsArgs, GetDisksTimeoutsPtr and GetDisksTimeoutsPtrOutput values.
// You can construct a concrete instance of `GetDisksTimeoutsPtrInput` via:
//
//	        GetDisksTimeoutsArgs{...}
//
//	or:
//
//	        nil
type GetDisksTimeoutsPtrInput interface {
	pulumi.Input

	ToGetDisksTimeoutsPtrOutput() GetDisksTimeoutsPtrOutput
	ToGetDisksTimeoutsPtrOutputWithContext(context.Context) GetDisksTimeoutsPtrOutput
}

type getDisksTimeoutsPtrType GetDisksTimeoutsArgs

func GetDisksTimeoutsPtr(v *GetDisksTimeoutsArgs) GetDisksTimeoutsPtrInput {
	return (*getDisksTimeoutsPtrType)(v)
}

func (*getDisksTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetDisksTimeouts)(nil)).Elem()
}

func (i *getDisksTimeoutsPtrType) ToGetDisksTimeoutsPtrOutput() GetDisksTimeoutsPtrOutput {
	return i.ToGetDisksTimeoutsPtrOutputWithContext(context.Background())
}

func (i *getDisksTimeoutsPtrType) ToGetDisksTimeoutsPtrOutputWithContext(ctx context.Context) GetDisksTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDisksTimeoutsPtrOutput)
}

type GetDisksTimeoutsOutput struct{ *pulumi.OutputState }

func (GetDisksTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDisksTimeouts)(nil)).Elem()
}

func (o GetDisksTimeoutsOutput) ToGetDisksTimeoutsOutput() GetDisksTimeoutsOutput {
	return o
}

func (o GetDisksTimeoutsOutput) ToGetDisksTimeoutsOutputWithContext(ctx context.Context) GetDisksTimeoutsOutput {
	return o
}

func (o GetDisksTimeoutsOutput) ToGetDisksTimeoutsPtrOutput() GetDisksTimeoutsPtrOutput {
	return o.ToGetDisksTimeoutsPtrOutputWithContext(context.Background())
}

func (o GetDisksTimeoutsOutput) ToGetDisksTimeoutsPtrOutputWithContext(ctx context.Context) GetDisksTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetDisksTimeouts) *GetDisksTimeouts {
		return &v
	}).(GetDisksTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o GetDisksTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDisksTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

type GetDisksTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (GetDisksTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetDisksTimeouts)(nil)).Elem()
}

func (o GetDisksTimeoutsPtrOutput) ToGetDisksTimeoutsPtrOutput() GetDisksTimeoutsPtrOutput {
	return o
}

func (o GetDisksTimeoutsPtrOutput) ToGetDisksTimeoutsPtrOutputWithContext(ctx context.Context) GetDisksTimeoutsPtrOutput {
	return o
}

func (o GetDisksTimeoutsPtrOutput) Elem() GetDisksTimeoutsOutput {
	return o.ApplyT(func(v *GetDisksTimeouts) GetDisksTimeouts {
		if v != nil {
			return *v
		}
		var ret GetDisksTimeouts
		return ret
	}).(GetDisksTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o GetDisksTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetDisksTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BootstrapClientConfigurationInput)(nil)).Elem(), BootstrapClientConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BootstrapTimeoutsInput)(nil)).Elem(), BootstrapTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BootstrapTimeoutsPtrInput)(nil)).Elem(), BootstrapTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationApplyClientConfigurationInput)(nil)).Elem(), ConfigurationApplyClientConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationApplyOnDestroyInput)(nil)).Elem(), ConfigurationApplyOnDestroyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationApplyOnDestroyPtrInput)(nil)).Elem(), ConfigurationApplyOnDestroyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsClientConfigurationInput)(nil)).Elem(), SecretsClientConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsMachineSecretsInput)(nil)).Elem(), SecretsMachineSecretsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsMachineSecretsCertsInput)(nil)).Elem(), SecretsMachineSecretsCertsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsMachineSecretsCertsPtrInput)(nil)).Elem(), SecretsMachineSecretsCertsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsMachineSecretsCertsEtcdInput)(nil)).Elem(), SecretsMachineSecretsCertsEtcdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsMachineSecretsCertsEtcdPtrInput)(nil)).Elem(), SecretsMachineSecretsCertsEtcdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsMachineSecretsCertsK8sInput)(nil)).Elem(), SecretsMachineSecretsCertsK8sArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsMachineSecretsCertsK8sPtrInput)(nil)).Elem(), SecretsMachineSecretsCertsK8sArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsMachineSecretsCertsK8sAggregatorInput)(nil)).Elem(), SecretsMachineSecretsCertsK8sAggregatorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsMachineSecretsCertsK8sAggregatorPtrInput)(nil)).Elem(), SecretsMachineSecretsCertsK8sAggregatorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsMachineSecretsCertsK8sServiceaccountInput)(nil)).Elem(), SecretsMachineSecretsCertsK8sServiceaccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsMachineSecretsCertsK8sServiceaccountPtrInput)(nil)).Elem(), SecretsMachineSecretsCertsK8sServiceaccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsMachineSecretsCertsOsInput)(nil)).Elem(), SecretsMachineSecretsCertsOsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsMachineSecretsCertsOsPtrInput)(nil)).Elem(), SecretsMachineSecretsCertsOsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsMachineSecretsClusterInput)(nil)).Elem(), SecretsMachineSecretsClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsMachineSecretsClusterPtrInput)(nil)).Elem(), SecretsMachineSecretsClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsMachineSecretsSecretsInput)(nil)).Elem(), SecretsMachineSecretsSecretsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsMachineSecretsSecretsPtrInput)(nil)).Elem(), SecretsMachineSecretsSecretsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsMachineSecretsTrustdinfoInput)(nil)).Elem(), SecretsMachineSecretsTrustdinfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsMachineSecretsTrustdinfoPtrInput)(nil)).Elem(), SecretsMachineSecretsTrustdinfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TimeoutInput)(nil)).Elem(), TimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TimeoutPtrInput)(nil)).Elem(), TimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateInput)(nil)).Elem(), CertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificatePtrInput)(nil)).Elem(), CertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificatesInput)(nil)).Elem(), CertificatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificatesPtrInput)(nil)).Elem(), CertificatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientConfigurationInput)(nil)).Elem(), ClientConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientConfigurationPtrInput)(nil)).Elem(), ClientConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterInput)(nil)).Elem(), ClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPtrInput)(nil)).Elem(), ClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KeyInput)(nil)).Elem(), KeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KeyPtrInput)(nil)).Elem(), KeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesSecretsInput)(nil)).Elem(), KubernetesSecretsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesSecretsPtrInput)(nil)).Elem(), KubernetesSecretsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineSecretsInput)(nil)).Elem(), MachineSecretsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineSecretsPtrInput)(nil)).Elem(), MachineSecretsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrustdInfoInput)(nil)).Elem(), TrustdInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrustdInfoPtrInput)(nil)).Elem(), TrustdInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigurationMachineSecretsInput)(nil)).Elem(), GetConfigurationMachineSecretsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigurationMachineSecretsCertsInput)(nil)).Elem(), GetConfigurationMachineSecretsCertsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigurationMachineSecretsCertsEtcdInput)(nil)).Elem(), GetConfigurationMachineSecretsCertsEtcdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigurationMachineSecretsCertsK8sInput)(nil)).Elem(), GetConfigurationMachineSecretsCertsK8sArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigurationMachineSecretsCertsK8sAggregatorInput)(nil)).Elem(), GetConfigurationMachineSecretsCertsK8sAggregatorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigurationMachineSecretsCertsK8sServiceaccountInput)(nil)).Elem(), GetConfigurationMachineSecretsCertsK8sServiceaccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigurationMachineSecretsCertsOsInput)(nil)).Elem(), GetConfigurationMachineSecretsCertsOsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigurationMachineSecretsClusterInput)(nil)).Elem(), GetConfigurationMachineSecretsClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigurationMachineSecretsSecretsInput)(nil)).Elem(), GetConfigurationMachineSecretsSecretsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigurationMachineSecretsTrustdinfoInput)(nil)).Elem(), GetConfigurationMachineSecretsTrustdinfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDisksClientConfigurationInput)(nil)).Elem(), GetDisksClientConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDisksDiskInput)(nil)).Elem(), GetDisksDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDisksDiskArrayInput)(nil)).Elem(), GetDisksDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDisksTimeoutsInput)(nil)).Elem(), GetDisksTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDisksTimeoutsPtrInput)(nil)).Elem(), GetDisksTimeoutsArgs{})
	pulumi.RegisterOutputType(BootstrapClientConfigurationOutput{})
	pulumi.RegisterOutputType(BootstrapTimeoutsOutput{})
	pulumi.RegisterOutputType(BootstrapTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(ConfigurationApplyClientConfigurationOutput{})
	pulumi.RegisterOutputType(ConfigurationApplyOnDestroyOutput{})
	pulumi.RegisterOutputType(ConfigurationApplyOnDestroyPtrOutput{})
	pulumi.RegisterOutputType(SecretsClientConfigurationOutput{})
	pulumi.RegisterOutputType(SecretsMachineSecretsOutput{})
	pulumi.RegisterOutputType(SecretsMachineSecretsCertsOutput{})
	pulumi.RegisterOutputType(SecretsMachineSecretsCertsPtrOutput{})
	pulumi.RegisterOutputType(SecretsMachineSecretsCertsEtcdOutput{})
	pulumi.RegisterOutputType(SecretsMachineSecretsCertsEtcdPtrOutput{})
	pulumi.RegisterOutputType(SecretsMachineSecretsCertsK8sOutput{})
	pulumi.RegisterOutputType(SecretsMachineSecretsCertsK8sPtrOutput{})
	pulumi.RegisterOutputType(SecretsMachineSecretsCertsK8sAggregatorOutput{})
	pulumi.RegisterOutputType(SecretsMachineSecretsCertsK8sAggregatorPtrOutput{})
	pulumi.RegisterOutputType(SecretsMachineSecretsCertsK8sServiceaccountOutput{})
	pulumi.RegisterOutputType(SecretsMachineSecretsCertsK8sServiceaccountPtrOutput{})
	pulumi.RegisterOutputType(SecretsMachineSecretsCertsOsOutput{})
	pulumi.RegisterOutputType(SecretsMachineSecretsCertsOsPtrOutput{})
	pulumi.RegisterOutputType(SecretsMachineSecretsClusterOutput{})
	pulumi.RegisterOutputType(SecretsMachineSecretsClusterPtrOutput{})
	pulumi.RegisterOutputType(SecretsMachineSecretsSecretsOutput{})
	pulumi.RegisterOutputType(SecretsMachineSecretsSecretsPtrOutput{})
	pulumi.RegisterOutputType(SecretsMachineSecretsTrustdinfoOutput{})
	pulumi.RegisterOutputType(SecretsMachineSecretsTrustdinfoPtrOutput{})
	pulumi.RegisterOutputType(TimeoutOutput{})
	pulumi.RegisterOutputType(TimeoutPtrOutput{})
	pulumi.RegisterOutputType(CertificateOutput{})
	pulumi.RegisterOutputType(CertificatePtrOutput{})
	pulumi.RegisterOutputType(CertificatesOutput{})
	pulumi.RegisterOutputType(CertificatesPtrOutput{})
	pulumi.RegisterOutputType(ClientConfigurationOutput{})
	pulumi.RegisterOutputType(ClientConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ClusterOutput{})
	pulumi.RegisterOutputType(ClusterPtrOutput{})
	pulumi.RegisterOutputType(KeyOutput{})
	pulumi.RegisterOutputType(KeyPtrOutput{})
	pulumi.RegisterOutputType(KubernetesSecretsOutput{})
	pulumi.RegisterOutputType(KubernetesSecretsPtrOutput{})
	pulumi.RegisterOutputType(MachineSecretsOutput{})
	pulumi.RegisterOutputType(MachineSecretsPtrOutput{})
	pulumi.RegisterOutputType(TrustdInfoOutput{})
	pulumi.RegisterOutputType(TrustdInfoPtrOutput{})
	pulumi.RegisterOutputType(GetConfigurationMachineSecretsOutput{})
	pulumi.RegisterOutputType(GetConfigurationMachineSecretsCertsOutput{})
	pulumi.RegisterOutputType(GetConfigurationMachineSecretsCertsEtcdOutput{})
	pulumi.RegisterOutputType(GetConfigurationMachineSecretsCertsK8sOutput{})
	pulumi.RegisterOutputType(GetConfigurationMachineSecretsCertsK8sAggregatorOutput{})
	pulumi.RegisterOutputType(GetConfigurationMachineSecretsCertsK8sServiceaccountOutput{})
	pulumi.RegisterOutputType(GetConfigurationMachineSecretsCertsOsOutput{})
	pulumi.RegisterOutputType(GetConfigurationMachineSecretsClusterOutput{})
	pulumi.RegisterOutputType(GetConfigurationMachineSecretsSecretsOutput{})
	pulumi.RegisterOutputType(GetConfigurationMachineSecretsTrustdinfoOutput{})
	pulumi.RegisterOutputType(GetDisksClientConfigurationOutput{})
	pulumi.RegisterOutputType(GetDisksDiskOutput{})
	pulumi.RegisterOutputType(GetDisksDiskArrayOutput{})
	pulumi.RegisterOutputType(GetDisksTimeoutsOutput{})
	pulumi.RegisterOutputType(GetDisksTimeoutsPtrOutput{})
}
