// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package talos

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-talos/sdk/go/talos/internal"
)

var _ = internal.GetEnvOrDefault

type GetImageFactoryExtensionsVersionsExtensionsInfo struct {
	Author      string `pulumi:"author"`
	Description string `pulumi:"description"`
	Digest      string `pulumi:"digest"`
	Name        string `pulumi:"name"`
	Ref         string `pulumi:"ref"`
}

// GetImageFactoryExtensionsVersionsExtensionsInfoInput is an input type that accepts GetImageFactoryExtensionsVersionsExtensionsInfoArgs and GetImageFactoryExtensionsVersionsExtensionsInfoOutput values.
// You can construct a concrete instance of `GetImageFactoryExtensionsVersionsExtensionsInfoInput` via:
//
//	GetImageFactoryExtensionsVersionsExtensionsInfoArgs{...}
type GetImageFactoryExtensionsVersionsExtensionsInfoInput interface {
	pulumi.Input

	ToGetImageFactoryExtensionsVersionsExtensionsInfoOutput() GetImageFactoryExtensionsVersionsExtensionsInfoOutput
	ToGetImageFactoryExtensionsVersionsExtensionsInfoOutputWithContext(context.Context) GetImageFactoryExtensionsVersionsExtensionsInfoOutput
}

type GetImageFactoryExtensionsVersionsExtensionsInfoArgs struct {
	Author      pulumi.StringInput `pulumi:"author"`
	Description pulumi.StringInput `pulumi:"description"`
	Digest      pulumi.StringInput `pulumi:"digest"`
	Name        pulumi.StringInput `pulumi:"name"`
	Ref         pulumi.StringInput `pulumi:"ref"`
}

func (GetImageFactoryExtensionsVersionsExtensionsInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageFactoryExtensionsVersionsExtensionsInfo)(nil)).Elem()
}

func (i GetImageFactoryExtensionsVersionsExtensionsInfoArgs) ToGetImageFactoryExtensionsVersionsExtensionsInfoOutput() GetImageFactoryExtensionsVersionsExtensionsInfoOutput {
	return i.ToGetImageFactoryExtensionsVersionsExtensionsInfoOutputWithContext(context.Background())
}

func (i GetImageFactoryExtensionsVersionsExtensionsInfoArgs) ToGetImageFactoryExtensionsVersionsExtensionsInfoOutputWithContext(ctx context.Context) GetImageFactoryExtensionsVersionsExtensionsInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageFactoryExtensionsVersionsExtensionsInfoOutput)
}

// GetImageFactoryExtensionsVersionsExtensionsInfoArrayInput is an input type that accepts GetImageFactoryExtensionsVersionsExtensionsInfoArray and GetImageFactoryExtensionsVersionsExtensionsInfoArrayOutput values.
// You can construct a concrete instance of `GetImageFactoryExtensionsVersionsExtensionsInfoArrayInput` via:
//
//	GetImageFactoryExtensionsVersionsExtensionsInfoArray{ GetImageFactoryExtensionsVersionsExtensionsInfoArgs{...} }
type GetImageFactoryExtensionsVersionsExtensionsInfoArrayInput interface {
	pulumi.Input

	ToGetImageFactoryExtensionsVersionsExtensionsInfoArrayOutput() GetImageFactoryExtensionsVersionsExtensionsInfoArrayOutput
	ToGetImageFactoryExtensionsVersionsExtensionsInfoArrayOutputWithContext(context.Context) GetImageFactoryExtensionsVersionsExtensionsInfoArrayOutput
}

type GetImageFactoryExtensionsVersionsExtensionsInfoArray []GetImageFactoryExtensionsVersionsExtensionsInfoInput

func (GetImageFactoryExtensionsVersionsExtensionsInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageFactoryExtensionsVersionsExtensionsInfo)(nil)).Elem()
}

func (i GetImageFactoryExtensionsVersionsExtensionsInfoArray) ToGetImageFactoryExtensionsVersionsExtensionsInfoArrayOutput() GetImageFactoryExtensionsVersionsExtensionsInfoArrayOutput {
	return i.ToGetImageFactoryExtensionsVersionsExtensionsInfoArrayOutputWithContext(context.Background())
}

func (i GetImageFactoryExtensionsVersionsExtensionsInfoArray) ToGetImageFactoryExtensionsVersionsExtensionsInfoArrayOutputWithContext(ctx context.Context) GetImageFactoryExtensionsVersionsExtensionsInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageFactoryExtensionsVersionsExtensionsInfoArrayOutput)
}

type GetImageFactoryExtensionsVersionsExtensionsInfoOutput struct{ *pulumi.OutputState }

func (GetImageFactoryExtensionsVersionsExtensionsInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageFactoryExtensionsVersionsExtensionsInfo)(nil)).Elem()
}

func (o GetImageFactoryExtensionsVersionsExtensionsInfoOutput) ToGetImageFactoryExtensionsVersionsExtensionsInfoOutput() GetImageFactoryExtensionsVersionsExtensionsInfoOutput {
	return o
}

func (o GetImageFactoryExtensionsVersionsExtensionsInfoOutput) ToGetImageFactoryExtensionsVersionsExtensionsInfoOutputWithContext(ctx context.Context) GetImageFactoryExtensionsVersionsExtensionsInfoOutput {
	return o
}

func (o GetImageFactoryExtensionsVersionsExtensionsInfoOutput) Author() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageFactoryExtensionsVersionsExtensionsInfo) string { return v.Author }).(pulumi.StringOutput)
}

func (o GetImageFactoryExtensionsVersionsExtensionsInfoOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageFactoryExtensionsVersionsExtensionsInfo) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetImageFactoryExtensionsVersionsExtensionsInfoOutput) Digest() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageFactoryExtensionsVersionsExtensionsInfo) string { return v.Digest }).(pulumi.StringOutput)
}

func (o GetImageFactoryExtensionsVersionsExtensionsInfoOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageFactoryExtensionsVersionsExtensionsInfo) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetImageFactoryExtensionsVersionsExtensionsInfoOutput) Ref() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageFactoryExtensionsVersionsExtensionsInfo) string { return v.Ref }).(pulumi.StringOutput)
}

type GetImageFactoryExtensionsVersionsExtensionsInfoArrayOutput struct{ *pulumi.OutputState }

func (GetImageFactoryExtensionsVersionsExtensionsInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageFactoryExtensionsVersionsExtensionsInfo)(nil)).Elem()
}

func (o GetImageFactoryExtensionsVersionsExtensionsInfoArrayOutput) ToGetImageFactoryExtensionsVersionsExtensionsInfoArrayOutput() GetImageFactoryExtensionsVersionsExtensionsInfoArrayOutput {
	return o
}

func (o GetImageFactoryExtensionsVersionsExtensionsInfoArrayOutput) ToGetImageFactoryExtensionsVersionsExtensionsInfoArrayOutputWithContext(ctx context.Context) GetImageFactoryExtensionsVersionsExtensionsInfoArrayOutput {
	return o
}

func (o GetImageFactoryExtensionsVersionsExtensionsInfoArrayOutput) Index(i pulumi.IntInput) GetImageFactoryExtensionsVersionsExtensionsInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImageFactoryExtensionsVersionsExtensionsInfo {
		return vs[0].([]GetImageFactoryExtensionsVersionsExtensionsInfo)[vs[1].(int)]
	}).(GetImageFactoryExtensionsVersionsExtensionsInfoOutput)
}

type GetImageFactoryExtensionsVersionsFilters struct {
	// The name of the extension to filter by.
	Names []string `pulumi:"names"`
}

// GetImageFactoryExtensionsVersionsFiltersInput is an input type that accepts GetImageFactoryExtensionsVersionsFiltersArgs and GetImageFactoryExtensionsVersionsFiltersOutput values.
// You can construct a concrete instance of `GetImageFactoryExtensionsVersionsFiltersInput` via:
//
//	GetImageFactoryExtensionsVersionsFiltersArgs{...}
type GetImageFactoryExtensionsVersionsFiltersInput interface {
	pulumi.Input

	ToGetImageFactoryExtensionsVersionsFiltersOutput() GetImageFactoryExtensionsVersionsFiltersOutput
	ToGetImageFactoryExtensionsVersionsFiltersOutputWithContext(context.Context) GetImageFactoryExtensionsVersionsFiltersOutput
}

type GetImageFactoryExtensionsVersionsFiltersArgs struct {
	// The name of the extension to filter by.
	Names pulumi.StringArrayInput `pulumi:"names"`
}

func (GetImageFactoryExtensionsVersionsFiltersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageFactoryExtensionsVersionsFilters)(nil)).Elem()
}

func (i GetImageFactoryExtensionsVersionsFiltersArgs) ToGetImageFactoryExtensionsVersionsFiltersOutput() GetImageFactoryExtensionsVersionsFiltersOutput {
	return i.ToGetImageFactoryExtensionsVersionsFiltersOutputWithContext(context.Background())
}

func (i GetImageFactoryExtensionsVersionsFiltersArgs) ToGetImageFactoryExtensionsVersionsFiltersOutputWithContext(ctx context.Context) GetImageFactoryExtensionsVersionsFiltersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageFactoryExtensionsVersionsFiltersOutput)
}

func (i GetImageFactoryExtensionsVersionsFiltersArgs) ToGetImageFactoryExtensionsVersionsFiltersPtrOutput() GetImageFactoryExtensionsVersionsFiltersPtrOutput {
	return i.ToGetImageFactoryExtensionsVersionsFiltersPtrOutputWithContext(context.Background())
}

func (i GetImageFactoryExtensionsVersionsFiltersArgs) ToGetImageFactoryExtensionsVersionsFiltersPtrOutputWithContext(ctx context.Context) GetImageFactoryExtensionsVersionsFiltersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageFactoryExtensionsVersionsFiltersOutput).ToGetImageFactoryExtensionsVersionsFiltersPtrOutputWithContext(ctx)
}

// GetImageFactoryExtensionsVersionsFiltersPtrInput is an input type that accepts GetImageFactoryExtensionsVersionsFiltersArgs, GetImageFactoryExtensionsVersionsFiltersPtr and GetImageFactoryExtensionsVersionsFiltersPtrOutput values.
// You can construct a concrete instance of `GetImageFactoryExtensionsVersionsFiltersPtrInput` via:
//
//	        GetImageFactoryExtensionsVersionsFiltersArgs{...}
//
//	or:
//
//	        nil
type GetImageFactoryExtensionsVersionsFiltersPtrInput interface {
	pulumi.Input

	ToGetImageFactoryExtensionsVersionsFiltersPtrOutput() GetImageFactoryExtensionsVersionsFiltersPtrOutput
	ToGetImageFactoryExtensionsVersionsFiltersPtrOutputWithContext(context.Context) GetImageFactoryExtensionsVersionsFiltersPtrOutput
}

type getImageFactoryExtensionsVersionsFiltersPtrType GetImageFactoryExtensionsVersionsFiltersArgs

func GetImageFactoryExtensionsVersionsFiltersPtr(v *GetImageFactoryExtensionsVersionsFiltersArgs) GetImageFactoryExtensionsVersionsFiltersPtrInput {
	return (*getImageFactoryExtensionsVersionsFiltersPtrType)(v)
}

func (*getImageFactoryExtensionsVersionsFiltersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetImageFactoryExtensionsVersionsFilters)(nil)).Elem()
}

func (i *getImageFactoryExtensionsVersionsFiltersPtrType) ToGetImageFactoryExtensionsVersionsFiltersPtrOutput() GetImageFactoryExtensionsVersionsFiltersPtrOutput {
	return i.ToGetImageFactoryExtensionsVersionsFiltersPtrOutputWithContext(context.Background())
}

func (i *getImageFactoryExtensionsVersionsFiltersPtrType) ToGetImageFactoryExtensionsVersionsFiltersPtrOutputWithContext(ctx context.Context) GetImageFactoryExtensionsVersionsFiltersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageFactoryExtensionsVersionsFiltersPtrOutput)
}

type GetImageFactoryExtensionsVersionsFiltersOutput struct{ *pulumi.OutputState }

func (GetImageFactoryExtensionsVersionsFiltersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageFactoryExtensionsVersionsFilters)(nil)).Elem()
}

func (o GetImageFactoryExtensionsVersionsFiltersOutput) ToGetImageFactoryExtensionsVersionsFiltersOutput() GetImageFactoryExtensionsVersionsFiltersOutput {
	return o
}

func (o GetImageFactoryExtensionsVersionsFiltersOutput) ToGetImageFactoryExtensionsVersionsFiltersOutputWithContext(ctx context.Context) GetImageFactoryExtensionsVersionsFiltersOutput {
	return o
}

func (o GetImageFactoryExtensionsVersionsFiltersOutput) ToGetImageFactoryExtensionsVersionsFiltersPtrOutput() GetImageFactoryExtensionsVersionsFiltersPtrOutput {
	return o.ToGetImageFactoryExtensionsVersionsFiltersPtrOutputWithContext(context.Background())
}

func (o GetImageFactoryExtensionsVersionsFiltersOutput) ToGetImageFactoryExtensionsVersionsFiltersPtrOutputWithContext(ctx context.Context) GetImageFactoryExtensionsVersionsFiltersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetImageFactoryExtensionsVersionsFilters) *GetImageFactoryExtensionsVersionsFilters {
		return &v
	}).(GetImageFactoryExtensionsVersionsFiltersPtrOutput)
}

// The name of the extension to filter by.
func (o GetImageFactoryExtensionsVersionsFiltersOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetImageFactoryExtensionsVersionsFilters) []string { return v.Names }).(pulumi.StringArrayOutput)
}

type GetImageFactoryExtensionsVersionsFiltersPtrOutput struct{ *pulumi.OutputState }

func (GetImageFactoryExtensionsVersionsFiltersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetImageFactoryExtensionsVersionsFilters)(nil)).Elem()
}

func (o GetImageFactoryExtensionsVersionsFiltersPtrOutput) ToGetImageFactoryExtensionsVersionsFiltersPtrOutput() GetImageFactoryExtensionsVersionsFiltersPtrOutput {
	return o
}

func (o GetImageFactoryExtensionsVersionsFiltersPtrOutput) ToGetImageFactoryExtensionsVersionsFiltersPtrOutputWithContext(ctx context.Context) GetImageFactoryExtensionsVersionsFiltersPtrOutput {
	return o
}

func (o GetImageFactoryExtensionsVersionsFiltersPtrOutput) Elem() GetImageFactoryExtensionsVersionsFiltersOutput {
	return o.ApplyT(func(v *GetImageFactoryExtensionsVersionsFilters) GetImageFactoryExtensionsVersionsFilters {
		if v != nil {
			return *v
		}
		var ret GetImageFactoryExtensionsVersionsFilters
		return ret
	}).(GetImageFactoryExtensionsVersionsFiltersOutput)
}

// The name of the extension to filter by.
func (o GetImageFactoryExtensionsVersionsFiltersPtrOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetImageFactoryExtensionsVersionsFilters) []string {
		if v == nil {
			return nil
		}
		return v.Names
	}).(pulumi.StringArrayOutput)
}

type GetImageFactoryOverlaysVersionsFilters struct {
	// The name of the overlay to filter by.
	Name *string `pulumi:"name"`
}

// GetImageFactoryOverlaysVersionsFiltersInput is an input type that accepts GetImageFactoryOverlaysVersionsFiltersArgs and GetImageFactoryOverlaysVersionsFiltersOutput values.
// You can construct a concrete instance of `GetImageFactoryOverlaysVersionsFiltersInput` via:
//
//	GetImageFactoryOverlaysVersionsFiltersArgs{...}
type GetImageFactoryOverlaysVersionsFiltersInput interface {
	pulumi.Input

	ToGetImageFactoryOverlaysVersionsFiltersOutput() GetImageFactoryOverlaysVersionsFiltersOutput
	ToGetImageFactoryOverlaysVersionsFiltersOutputWithContext(context.Context) GetImageFactoryOverlaysVersionsFiltersOutput
}

type GetImageFactoryOverlaysVersionsFiltersArgs struct {
	// The name of the overlay to filter by.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (GetImageFactoryOverlaysVersionsFiltersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageFactoryOverlaysVersionsFilters)(nil)).Elem()
}

func (i GetImageFactoryOverlaysVersionsFiltersArgs) ToGetImageFactoryOverlaysVersionsFiltersOutput() GetImageFactoryOverlaysVersionsFiltersOutput {
	return i.ToGetImageFactoryOverlaysVersionsFiltersOutputWithContext(context.Background())
}

func (i GetImageFactoryOverlaysVersionsFiltersArgs) ToGetImageFactoryOverlaysVersionsFiltersOutputWithContext(ctx context.Context) GetImageFactoryOverlaysVersionsFiltersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageFactoryOverlaysVersionsFiltersOutput)
}

func (i GetImageFactoryOverlaysVersionsFiltersArgs) ToGetImageFactoryOverlaysVersionsFiltersPtrOutput() GetImageFactoryOverlaysVersionsFiltersPtrOutput {
	return i.ToGetImageFactoryOverlaysVersionsFiltersPtrOutputWithContext(context.Background())
}

func (i GetImageFactoryOverlaysVersionsFiltersArgs) ToGetImageFactoryOverlaysVersionsFiltersPtrOutputWithContext(ctx context.Context) GetImageFactoryOverlaysVersionsFiltersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageFactoryOverlaysVersionsFiltersOutput).ToGetImageFactoryOverlaysVersionsFiltersPtrOutputWithContext(ctx)
}

// GetImageFactoryOverlaysVersionsFiltersPtrInput is an input type that accepts GetImageFactoryOverlaysVersionsFiltersArgs, GetImageFactoryOverlaysVersionsFiltersPtr and GetImageFactoryOverlaysVersionsFiltersPtrOutput values.
// You can construct a concrete instance of `GetImageFactoryOverlaysVersionsFiltersPtrInput` via:
//
//	        GetImageFactoryOverlaysVersionsFiltersArgs{...}
//
//	or:
//
//	        nil
type GetImageFactoryOverlaysVersionsFiltersPtrInput interface {
	pulumi.Input

	ToGetImageFactoryOverlaysVersionsFiltersPtrOutput() GetImageFactoryOverlaysVersionsFiltersPtrOutput
	ToGetImageFactoryOverlaysVersionsFiltersPtrOutputWithContext(context.Context) GetImageFactoryOverlaysVersionsFiltersPtrOutput
}

type getImageFactoryOverlaysVersionsFiltersPtrType GetImageFactoryOverlaysVersionsFiltersArgs

func GetImageFactoryOverlaysVersionsFiltersPtr(v *GetImageFactoryOverlaysVersionsFiltersArgs) GetImageFactoryOverlaysVersionsFiltersPtrInput {
	return (*getImageFactoryOverlaysVersionsFiltersPtrType)(v)
}

func (*getImageFactoryOverlaysVersionsFiltersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetImageFactoryOverlaysVersionsFilters)(nil)).Elem()
}

func (i *getImageFactoryOverlaysVersionsFiltersPtrType) ToGetImageFactoryOverlaysVersionsFiltersPtrOutput() GetImageFactoryOverlaysVersionsFiltersPtrOutput {
	return i.ToGetImageFactoryOverlaysVersionsFiltersPtrOutputWithContext(context.Background())
}

func (i *getImageFactoryOverlaysVersionsFiltersPtrType) ToGetImageFactoryOverlaysVersionsFiltersPtrOutputWithContext(ctx context.Context) GetImageFactoryOverlaysVersionsFiltersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageFactoryOverlaysVersionsFiltersPtrOutput)
}

type GetImageFactoryOverlaysVersionsFiltersOutput struct{ *pulumi.OutputState }

func (GetImageFactoryOverlaysVersionsFiltersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageFactoryOverlaysVersionsFilters)(nil)).Elem()
}

func (o GetImageFactoryOverlaysVersionsFiltersOutput) ToGetImageFactoryOverlaysVersionsFiltersOutput() GetImageFactoryOverlaysVersionsFiltersOutput {
	return o
}

func (o GetImageFactoryOverlaysVersionsFiltersOutput) ToGetImageFactoryOverlaysVersionsFiltersOutputWithContext(ctx context.Context) GetImageFactoryOverlaysVersionsFiltersOutput {
	return o
}

func (o GetImageFactoryOverlaysVersionsFiltersOutput) ToGetImageFactoryOverlaysVersionsFiltersPtrOutput() GetImageFactoryOverlaysVersionsFiltersPtrOutput {
	return o.ToGetImageFactoryOverlaysVersionsFiltersPtrOutputWithContext(context.Background())
}

func (o GetImageFactoryOverlaysVersionsFiltersOutput) ToGetImageFactoryOverlaysVersionsFiltersPtrOutputWithContext(ctx context.Context) GetImageFactoryOverlaysVersionsFiltersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetImageFactoryOverlaysVersionsFilters) *GetImageFactoryOverlaysVersionsFilters {
		return &v
	}).(GetImageFactoryOverlaysVersionsFiltersPtrOutput)
}

// The name of the overlay to filter by.
func (o GetImageFactoryOverlaysVersionsFiltersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImageFactoryOverlaysVersionsFilters) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type GetImageFactoryOverlaysVersionsFiltersPtrOutput struct{ *pulumi.OutputState }

func (GetImageFactoryOverlaysVersionsFiltersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetImageFactoryOverlaysVersionsFilters)(nil)).Elem()
}

func (o GetImageFactoryOverlaysVersionsFiltersPtrOutput) ToGetImageFactoryOverlaysVersionsFiltersPtrOutput() GetImageFactoryOverlaysVersionsFiltersPtrOutput {
	return o
}

func (o GetImageFactoryOverlaysVersionsFiltersPtrOutput) ToGetImageFactoryOverlaysVersionsFiltersPtrOutputWithContext(ctx context.Context) GetImageFactoryOverlaysVersionsFiltersPtrOutput {
	return o
}

func (o GetImageFactoryOverlaysVersionsFiltersPtrOutput) Elem() GetImageFactoryOverlaysVersionsFiltersOutput {
	return o.ApplyT(func(v *GetImageFactoryOverlaysVersionsFilters) GetImageFactoryOverlaysVersionsFilters {
		if v != nil {
			return *v
		}
		var ret GetImageFactoryOverlaysVersionsFilters
		return ret
	}).(GetImageFactoryOverlaysVersionsFiltersOutput)
}

// The name of the overlay to filter by.
func (o GetImageFactoryOverlaysVersionsFiltersPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetImageFactoryOverlaysVersionsFilters) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type GetImageFactoryOverlaysVersionsOverlaysInfo struct {
	Digest string `pulumi:"digest"`
	Image  string `pulumi:"image"`
	Name   string `pulumi:"name"`
	Ref    string `pulumi:"ref"`
}

// GetImageFactoryOverlaysVersionsOverlaysInfoInput is an input type that accepts GetImageFactoryOverlaysVersionsOverlaysInfoArgs and GetImageFactoryOverlaysVersionsOverlaysInfoOutput values.
// You can construct a concrete instance of `GetImageFactoryOverlaysVersionsOverlaysInfoInput` via:
//
//	GetImageFactoryOverlaysVersionsOverlaysInfoArgs{...}
type GetImageFactoryOverlaysVersionsOverlaysInfoInput interface {
	pulumi.Input

	ToGetImageFactoryOverlaysVersionsOverlaysInfoOutput() GetImageFactoryOverlaysVersionsOverlaysInfoOutput
	ToGetImageFactoryOverlaysVersionsOverlaysInfoOutputWithContext(context.Context) GetImageFactoryOverlaysVersionsOverlaysInfoOutput
}

type GetImageFactoryOverlaysVersionsOverlaysInfoArgs struct {
	Digest pulumi.StringInput `pulumi:"digest"`
	Image  pulumi.StringInput `pulumi:"image"`
	Name   pulumi.StringInput `pulumi:"name"`
	Ref    pulumi.StringInput `pulumi:"ref"`
}

func (GetImageFactoryOverlaysVersionsOverlaysInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageFactoryOverlaysVersionsOverlaysInfo)(nil)).Elem()
}

func (i GetImageFactoryOverlaysVersionsOverlaysInfoArgs) ToGetImageFactoryOverlaysVersionsOverlaysInfoOutput() GetImageFactoryOverlaysVersionsOverlaysInfoOutput {
	return i.ToGetImageFactoryOverlaysVersionsOverlaysInfoOutputWithContext(context.Background())
}

func (i GetImageFactoryOverlaysVersionsOverlaysInfoArgs) ToGetImageFactoryOverlaysVersionsOverlaysInfoOutputWithContext(ctx context.Context) GetImageFactoryOverlaysVersionsOverlaysInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageFactoryOverlaysVersionsOverlaysInfoOutput)
}

// GetImageFactoryOverlaysVersionsOverlaysInfoArrayInput is an input type that accepts GetImageFactoryOverlaysVersionsOverlaysInfoArray and GetImageFactoryOverlaysVersionsOverlaysInfoArrayOutput values.
// You can construct a concrete instance of `GetImageFactoryOverlaysVersionsOverlaysInfoArrayInput` via:
//
//	GetImageFactoryOverlaysVersionsOverlaysInfoArray{ GetImageFactoryOverlaysVersionsOverlaysInfoArgs{...} }
type GetImageFactoryOverlaysVersionsOverlaysInfoArrayInput interface {
	pulumi.Input

	ToGetImageFactoryOverlaysVersionsOverlaysInfoArrayOutput() GetImageFactoryOverlaysVersionsOverlaysInfoArrayOutput
	ToGetImageFactoryOverlaysVersionsOverlaysInfoArrayOutputWithContext(context.Context) GetImageFactoryOverlaysVersionsOverlaysInfoArrayOutput
}

type GetImageFactoryOverlaysVersionsOverlaysInfoArray []GetImageFactoryOverlaysVersionsOverlaysInfoInput

func (GetImageFactoryOverlaysVersionsOverlaysInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageFactoryOverlaysVersionsOverlaysInfo)(nil)).Elem()
}

func (i GetImageFactoryOverlaysVersionsOverlaysInfoArray) ToGetImageFactoryOverlaysVersionsOverlaysInfoArrayOutput() GetImageFactoryOverlaysVersionsOverlaysInfoArrayOutput {
	return i.ToGetImageFactoryOverlaysVersionsOverlaysInfoArrayOutputWithContext(context.Background())
}

func (i GetImageFactoryOverlaysVersionsOverlaysInfoArray) ToGetImageFactoryOverlaysVersionsOverlaysInfoArrayOutputWithContext(ctx context.Context) GetImageFactoryOverlaysVersionsOverlaysInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageFactoryOverlaysVersionsOverlaysInfoArrayOutput)
}

type GetImageFactoryOverlaysVersionsOverlaysInfoOutput struct{ *pulumi.OutputState }

func (GetImageFactoryOverlaysVersionsOverlaysInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageFactoryOverlaysVersionsOverlaysInfo)(nil)).Elem()
}

func (o GetImageFactoryOverlaysVersionsOverlaysInfoOutput) ToGetImageFactoryOverlaysVersionsOverlaysInfoOutput() GetImageFactoryOverlaysVersionsOverlaysInfoOutput {
	return o
}

func (o GetImageFactoryOverlaysVersionsOverlaysInfoOutput) ToGetImageFactoryOverlaysVersionsOverlaysInfoOutputWithContext(ctx context.Context) GetImageFactoryOverlaysVersionsOverlaysInfoOutput {
	return o
}

func (o GetImageFactoryOverlaysVersionsOverlaysInfoOutput) Digest() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageFactoryOverlaysVersionsOverlaysInfo) string { return v.Digest }).(pulumi.StringOutput)
}

func (o GetImageFactoryOverlaysVersionsOverlaysInfoOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageFactoryOverlaysVersionsOverlaysInfo) string { return v.Image }).(pulumi.StringOutput)
}

func (o GetImageFactoryOverlaysVersionsOverlaysInfoOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageFactoryOverlaysVersionsOverlaysInfo) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetImageFactoryOverlaysVersionsOverlaysInfoOutput) Ref() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageFactoryOverlaysVersionsOverlaysInfo) string { return v.Ref }).(pulumi.StringOutput)
}

type GetImageFactoryOverlaysVersionsOverlaysInfoArrayOutput struct{ *pulumi.OutputState }

func (GetImageFactoryOverlaysVersionsOverlaysInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageFactoryOverlaysVersionsOverlaysInfo)(nil)).Elem()
}

func (o GetImageFactoryOverlaysVersionsOverlaysInfoArrayOutput) ToGetImageFactoryOverlaysVersionsOverlaysInfoArrayOutput() GetImageFactoryOverlaysVersionsOverlaysInfoArrayOutput {
	return o
}

func (o GetImageFactoryOverlaysVersionsOverlaysInfoArrayOutput) ToGetImageFactoryOverlaysVersionsOverlaysInfoArrayOutputWithContext(ctx context.Context) GetImageFactoryOverlaysVersionsOverlaysInfoArrayOutput {
	return o
}

func (o GetImageFactoryOverlaysVersionsOverlaysInfoArrayOutput) Index(i pulumi.IntInput) GetImageFactoryOverlaysVersionsOverlaysInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImageFactoryOverlaysVersionsOverlaysInfo {
		return vs[0].([]GetImageFactoryOverlaysVersionsOverlaysInfo)[vs[1].(int)]
	}).(GetImageFactoryOverlaysVersionsOverlaysInfoOutput)
}

type GetImageFactoryUrlsUrls struct {
	// The URL for the disk image.
	DiskImage string `pulumi:"diskImage"`
	// The URL for the disk image with secure boot.
	DiskImageSecureboot string `pulumi:"diskImageSecureboot"`
	// The URL for the initramfs image.
	Initramfs string `pulumi:"initramfs"`
	// The URL for the installer image.
	Installer string `pulumi:"installer"`
	// The URL for the installer image with secure boot.
	InstallerSecureboot string `pulumi:"installerSecureboot"`
	// The URL for the ISO image.
	Iso string `pulumi:"iso"`
	// The URL for the ISO image with secure boot.
	IsoSecureboot string `pulumi:"isoSecureboot"`
	// The URL for the kernel image.
	Kernel string `pulumi:"kernel"`
	// The URL for the kernel command line.
	KernelCommandLine string `pulumi:"kernelCommandLine"`
	// The URL for the PXE image.
	Pxe string `pulumi:"pxe"`
	// The URL for the UKI image.
	Uki string `pulumi:"uki"`
}

// GetImageFactoryUrlsUrlsInput is an input type that accepts GetImageFactoryUrlsUrlsArgs and GetImageFactoryUrlsUrlsOutput values.
// You can construct a concrete instance of `GetImageFactoryUrlsUrlsInput` via:
//
//	GetImageFactoryUrlsUrlsArgs{...}
type GetImageFactoryUrlsUrlsInput interface {
	pulumi.Input

	ToGetImageFactoryUrlsUrlsOutput() GetImageFactoryUrlsUrlsOutput
	ToGetImageFactoryUrlsUrlsOutputWithContext(context.Context) GetImageFactoryUrlsUrlsOutput
}

type GetImageFactoryUrlsUrlsArgs struct {
	// The URL for the disk image.
	DiskImage pulumi.StringInput `pulumi:"diskImage"`
	// The URL for the disk image with secure boot.
	DiskImageSecureboot pulumi.StringInput `pulumi:"diskImageSecureboot"`
	// The URL for the initramfs image.
	Initramfs pulumi.StringInput `pulumi:"initramfs"`
	// The URL for the installer image.
	Installer pulumi.StringInput `pulumi:"installer"`
	// The URL for the installer image with secure boot.
	InstallerSecureboot pulumi.StringInput `pulumi:"installerSecureboot"`
	// The URL for the ISO image.
	Iso pulumi.StringInput `pulumi:"iso"`
	// The URL for the ISO image with secure boot.
	IsoSecureboot pulumi.StringInput `pulumi:"isoSecureboot"`
	// The URL for the kernel image.
	Kernel pulumi.StringInput `pulumi:"kernel"`
	// The URL for the kernel command line.
	KernelCommandLine pulumi.StringInput `pulumi:"kernelCommandLine"`
	// The URL for the PXE image.
	Pxe pulumi.StringInput `pulumi:"pxe"`
	// The URL for the UKI image.
	Uki pulumi.StringInput `pulumi:"uki"`
}

func (GetImageFactoryUrlsUrlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageFactoryUrlsUrls)(nil)).Elem()
}

func (i GetImageFactoryUrlsUrlsArgs) ToGetImageFactoryUrlsUrlsOutput() GetImageFactoryUrlsUrlsOutput {
	return i.ToGetImageFactoryUrlsUrlsOutputWithContext(context.Background())
}

func (i GetImageFactoryUrlsUrlsArgs) ToGetImageFactoryUrlsUrlsOutputWithContext(ctx context.Context) GetImageFactoryUrlsUrlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageFactoryUrlsUrlsOutput)
}

type GetImageFactoryUrlsUrlsOutput struct{ *pulumi.OutputState }

func (GetImageFactoryUrlsUrlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageFactoryUrlsUrls)(nil)).Elem()
}

func (o GetImageFactoryUrlsUrlsOutput) ToGetImageFactoryUrlsUrlsOutput() GetImageFactoryUrlsUrlsOutput {
	return o
}

func (o GetImageFactoryUrlsUrlsOutput) ToGetImageFactoryUrlsUrlsOutputWithContext(ctx context.Context) GetImageFactoryUrlsUrlsOutput {
	return o
}

// The URL for the disk image.
func (o GetImageFactoryUrlsUrlsOutput) DiskImage() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageFactoryUrlsUrls) string { return v.DiskImage }).(pulumi.StringOutput)
}

// The URL for the disk image with secure boot.
func (o GetImageFactoryUrlsUrlsOutput) DiskImageSecureboot() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageFactoryUrlsUrls) string { return v.DiskImageSecureboot }).(pulumi.StringOutput)
}

// The URL for the initramfs image.
func (o GetImageFactoryUrlsUrlsOutput) Initramfs() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageFactoryUrlsUrls) string { return v.Initramfs }).(pulumi.StringOutput)
}

// The URL for the installer image.
func (o GetImageFactoryUrlsUrlsOutput) Installer() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageFactoryUrlsUrls) string { return v.Installer }).(pulumi.StringOutput)
}

// The URL for the installer image with secure boot.
func (o GetImageFactoryUrlsUrlsOutput) InstallerSecureboot() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageFactoryUrlsUrls) string { return v.InstallerSecureboot }).(pulumi.StringOutput)
}

// The URL for the ISO image.
func (o GetImageFactoryUrlsUrlsOutput) Iso() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageFactoryUrlsUrls) string { return v.Iso }).(pulumi.StringOutput)
}

// The URL for the ISO image with secure boot.
func (o GetImageFactoryUrlsUrlsOutput) IsoSecureboot() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageFactoryUrlsUrls) string { return v.IsoSecureboot }).(pulumi.StringOutput)
}

// The URL for the kernel image.
func (o GetImageFactoryUrlsUrlsOutput) Kernel() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageFactoryUrlsUrls) string { return v.Kernel }).(pulumi.StringOutput)
}

// The URL for the kernel command line.
func (o GetImageFactoryUrlsUrlsOutput) KernelCommandLine() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageFactoryUrlsUrls) string { return v.KernelCommandLine }).(pulumi.StringOutput)
}

// The URL for the PXE image.
func (o GetImageFactoryUrlsUrlsOutput) Pxe() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageFactoryUrlsUrls) string { return v.Pxe }).(pulumi.StringOutput)
}

// The URL for the UKI image.
func (o GetImageFactoryUrlsUrlsOutput) Uki() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageFactoryUrlsUrls) string { return v.Uki }).(pulumi.StringOutput)
}

type GetImageFactoryVersionsFilters struct {
	// If set to true, only stable versions will be returned. If set to false, all versions will be returned.
	StableVersionsOnly *bool `pulumi:"stableVersionsOnly"`
}

// GetImageFactoryVersionsFiltersInput is an input type that accepts GetImageFactoryVersionsFiltersArgs and GetImageFactoryVersionsFiltersOutput values.
// You can construct a concrete instance of `GetImageFactoryVersionsFiltersInput` via:
//
//	GetImageFactoryVersionsFiltersArgs{...}
type GetImageFactoryVersionsFiltersInput interface {
	pulumi.Input

	ToGetImageFactoryVersionsFiltersOutput() GetImageFactoryVersionsFiltersOutput
	ToGetImageFactoryVersionsFiltersOutputWithContext(context.Context) GetImageFactoryVersionsFiltersOutput
}

type GetImageFactoryVersionsFiltersArgs struct {
	// If set to true, only stable versions will be returned. If set to false, all versions will be returned.
	StableVersionsOnly pulumi.BoolPtrInput `pulumi:"stableVersionsOnly"`
}

func (GetImageFactoryVersionsFiltersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageFactoryVersionsFilters)(nil)).Elem()
}

func (i GetImageFactoryVersionsFiltersArgs) ToGetImageFactoryVersionsFiltersOutput() GetImageFactoryVersionsFiltersOutput {
	return i.ToGetImageFactoryVersionsFiltersOutputWithContext(context.Background())
}

func (i GetImageFactoryVersionsFiltersArgs) ToGetImageFactoryVersionsFiltersOutputWithContext(ctx context.Context) GetImageFactoryVersionsFiltersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageFactoryVersionsFiltersOutput)
}

func (i GetImageFactoryVersionsFiltersArgs) ToGetImageFactoryVersionsFiltersPtrOutput() GetImageFactoryVersionsFiltersPtrOutput {
	return i.ToGetImageFactoryVersionsFiltersPtrOutputWithContext(context.Background())
}

func (i GetImageFactoryVersionsFiltersArgs) ToGetImageFactoryVersionsFiltersPtrOutputWithContext(ctx context.Context) GetImageFactoryVersionsFiltersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageFactoryVersionsFiltersOutput).ToGetImageFactoryVersionsFiltersPtrOutputWithContext(ctx)
}

// GetImageFactoryVersionsFiltersPtrInput is an input type that accepts GetImageFactoryVersionsFiltersArgs, GetImageFactoryVersionsFiltersPtr and GetImageFactoryVersionsFiltersPtrOutput values.
// You can construct a concrete instance of `GetImageFactoryVersionsFiltersPtrInput` via:
//
//	        GetImageFactoryVersionsFiltersArgs{...}
//
//	or:
//
//	        nil
type GetImageFactoryVersionsFiltersPtrInput interface {
	pulumi.Input

	ToGetImageFactoryVersionsFiltersPtrOutput() GetImageFactoryVersionsFiltersPtrOutput
	ToGetImageFactoryVersionsFiltersPtrOutputWithContext(context.Context) GetImageFactoryVersionsFiltersPtrOutput
}

type getImageFactoryVersionsFiltersPtrType GetImageFactoryVersionsFiltersArgs

func GetImageFactoryVersionsFiltersPtr(v *GetImageFactoryVersionsFiltersArgs) GetImageFactoryVersionsFiltersPtrInput {
	return (*getImageFactoryVersionsFiltersPtrType)(v)
}

func (*getImageFactoryVersionsFiltersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetImageFactoryVersionsFilters)(nil)).Elem()
}

func (i *getImageFactoryVersionsFiltersPtrType) ToGetImageFactoryVersionsFiltersPtrOutput() GetImageFactoryVersionsFiltersPtrOutput {
	return i.ToGetImageFactoryVersionsFiltersPtrOutputWithContext(context.Background())
}

func (i *getImageFactoryVersionsFiltersPtrType) ToGetImageFactoryVersionsFiltersPtrOutputWithContext(ctx context.Context) GetImageFactoryVersionsFiltersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageFactoryVersionsFiltersPtrOutput)
}

type GetImageFactoryVersionsFiltersOutput struct{ *pulumi.OutputState }

func (GetImageFactoryVersionsFiltersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageFactoryVersionsFilters)(nil)).Elem()
}

func (o GetImageFactoryVersionsFiltersOutput) ToGetImageFactoryVersionsFiltersOutput() GetImageFactoryVersionsFiltersOutput {
	return o
}

func (o GetImageFactoryVersionsFiltersOutput) ToGetImageFactoryVersionsFiltersOutputWithContext(ctx context.Context) GetImageFactoryVersionsFiltersOutput {
	return o
}

func (o GetImageFactoryVersionsFiltersOutput) ToGetImageFactoryVersionsFiltersPtrOutput() GetImageFactoryVersionsFiltersPtrOutput {
	return o.ToGetImageFactoryVersionsFiltersPtrOutputWithContext(context.Background())
}

func (o GetImageFactoryVersionsFiltersOutput) ToGetImageFactoryVersionsFiltersPtrOutputWithContext(ctx context.Context) GetImageFactoryVersionsFiltersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetImageFactoryVersionsFilters) *GetImageFactoryVersionsFilters {
		return &v
	}).(GetImageFactoryVersionsFiltersPtrOutput)
}

// If set to true, only stable versions will be returned. If set to false, all versions will be returned.
func (o GetImageFactoryVersionsFiltersOutput) StableVersionsOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetImageFactoryVersionsFilters) *bool { return v.StableVersionsOnly }).(pulumi.BoolPtrOutput)
}

type GetImageFactoryVersionsFiltersPtrOutput struct{ *pulumi.OutputState }

func (GetImageFactoryVersionsFiltersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetImageFactoryVersionsFilters)(nil)).Elem()
}

func (o GetImageFactoryVersionsFiltersPtrOutput) ToGetImageFactoryVersionsFiltersPtrOutput() GetImageFactoryVersionsFiltersPtrOutput {
	return o
}

func (o GetImageFactoryVersionsFiltersPtrOutput) ToGetImageFactoryVersionsFiltersPtrOutputWithContext(ctx context.Context) GetImageFactoryVersionsFiltersPtrOutput {
	return o
}

func (o GetImageFactoryVersionsFiltersPtrOutput) Elem() GetImageFactoryVersionsFiltersOutput {
	return o.ApplyT(func(v *GetImageFactoryVersionsFilters) GetImageFactoryVersionsFilters {
		if v != nil {
			return *v
		}
		var ret GetImageFactoryVersionsFilters
		return ret
	}).(GetImageFactoryVersionsFiltersOutput)
}

// If set to true, only stable versions will be returned. If set to false, all versions will be returned.
func (o GetImageFactoryVersionsFiltersPtrOutput) StableVersionsOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetImageFactoryVersionsFilters) *bool {
		if v == nil {
			return nil
		}
		return v.StableVersionsOnly
	}).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageFactoryExtensionsVersionsExtensionsInfoInput)(nil)).Elem(), GetImageFactoryExtensionsVersionsExtensionsInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageFactoryExtensionsVersionsExtensionsInfoArrayInput)(nil)).Elem(), GetImageFactoryExtensionsVersionsExtensionsInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageFactoryExtensionsVersionsFiltersInput)(nil)).Elem(), GetImageFactoryExtensionsVersionsFiltersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageFactoryExtensionsVersionsFiltersPtrInput)(nil)).Elem(), GetImageFactoryExtensionsVersionsFiltersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageFactoryOverlaysVersionsFiltersInput)(nil)).Elem(), GetImageFactoryOverlaysVersionsFiltersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageFactoryOverlaysVersionsFiltersPtrInput)(nil)).Elem(), GetImageFactoryOverlaysVersionsFiltersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageFactoryOverlaysVersionsOverlaysInfoInput)(nil)).Elem(), GetImageFactoryOverlaysVersionsOverlaysInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageFactoryOverlaysVersionsOverlaysInfoArrayInput)(nil)).Elem(), GetImageFactoryOverlaysVersionsOverlaysInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageFactoryUrlsUrlsInput)(nil)).Elem(), GetImageFactoryUrlsUrlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageFactoryVersionsFiltersInput)(nil)).Elem(), GetImageFactoryVersionsFiltersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageFactoryVersionsFiltersPtrInput)(nil)).Elem(), GetImageFactoryVersionsFiltersArgs{})
	pulumi.RegisterOutputType(GetImageFactoryExtensionsVersionsExtensionsInfoOutput{})
	pulumi.RegisterOutputType(GetImageFactoryExtensionsVersionsExtensionsInfoArrayOutput{})
	pulumi.RegisterOutputType(GetImageFactoryExtensionsVersionsFiltersOutput{})
	pulumi.RegisterOutputType(GetImageFactoryExtensionsVersionsFiltersPtrOutput{})
	pulumi.RegisterOutputType(GetImageFactoryOverlaysVersionsFiltersOutput{})
	pulumi.RegisterOutputType(GetImageFactoryOverlaysVersionsFiltersPtrOutput{})
	pulumi.RegisterOutputType(GetImageFactoryOverlaysVersionsOverlaysInfoOutput{})
	pulumi.RegisterOutputType(GetImageFactoryOverlaysVersionsOverlaysInfoArrayOutput{})
	pulumi.RegisterOutputType(GetImageFactoryUrlsUrlsOutput{})
	pulumi.RegisterOutputType(GetImageFactoryVersionsFiltersOutput{})
	pulumi.RegisterOutputType(GetImageFactoryVersionsFiltersPtrOutput{})
}
