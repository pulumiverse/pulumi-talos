// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package imagefactory

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-talos/sdk/go/talos/internal"
)

var _ = internal.GetEnvOrDefault

type GetExtensionsVersionsExtensionsInfo struct {
	Author      string `pulumi:"author"`
	Description string `pulumi:"description"`
	Digest      string `pulumi:"digest"`
	Name        string `pulumi:"name"`
	Ref         string `pulumi:"ref"`
}

// GetExtensionsVersionsExtensionsInfoInput is an input type that accepts GetExtensionsVersionsExtensionsInfoArgs and GetExtensionsVersionsExtensionsInfoOutput values.
// You can construct a concrete instance of `GetExtensionsVersionsExtensionsInfoInput` via:
//
//	GetExtensionsVersionsExtensionsInfoArgs{...}
type GetExtensionsVersionsExtensionsInfoInput interface {
	pulumi.Input

	ToGetExtensionsVersionsExtensionsInfoOutput() GetExtensionsVersionsExtensionsInfoOutput
	ToGetExtensionsVersionsExtensionsInfoOutputWithContext(context.Context) GetExtensionsVersionsExtensionsInfoOutput
}

type GetExtensionsVersionsExtensionsInfoArgs struct {
	Author      pulumi.StringInput `pulumi:"author"`
	Description pulumi.StringInput `pulumi:"description"`
	Digest      pulumi.StringInput `pulumi:"digest"`
	Name        pulumi.StringInput `pulumi:"name"`
	Ref         pulumi.StringInput `pulumi:"ref"`
}

func (GetExtensionsVersionsExtensionsInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExtensionsVersionsExtensionsInfo)(nil)).Elem()
}

func (i GetExtensionsVersionsExtensionsInfoArgs) ToGetExtensionsVersionsExtensionsInfoOutput() GetExtensionsVersionsExtensionsInfoOutput {
	return i.ToGetExtensionsVersionsExtensionsInfoOutputWithContext(context.Background())
}

func (i GetExtensionsVersionsExtensionsInfoArgs) ToGetExtensionsVersionsExtensionsInfoOutputWithContext(ctx context.Context) GetExtensionsVersionsExtensionsInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetExtensionsVersionsExtensionsInfoOutput)
}

// GetExtensionsVersionsExtensionsInfoArrayInput is an input type that accepts GetExtensionsVersionsExtensionsInfoArray and GetExtensionsVersionsExtensionsInfoArrayOutput values.
// You can construct a concrete instance of `GetExtensionsVersionsExtensionsInfoArrayInput` via:
//
//	GetExtensionsVersionsExtensionsInfoArray{ GetExtensionsVersionsExtensionsInfoArgs{...} }
type GetExtensionsVersionsExtensionsInfoArrayInput interface {
	pulumi.Input

	ToGetExtensionsVersionsExtensionsInfoArrayOutput() GetExtensionsVersionsExtensionsInfoArrayOutput
	ToGetExtensionsVersionsExtensionsInfoArrayOutputWithContext(context.Context) GetExtensionsVersionsExtensionsInfoArrayOutput
}

type GetExtensionsVersionsExtensionsInfoArray []GetExtensionsVersionsExtensionsInfoInput

func (GetExtensionsVersionsExtensionsInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetExtensionsVersionsExtensionsInfo)(nil)).Elem()
}

func (i GetExtensionsVersionsExtensionsInfoArray) ToGetExtensionsVersionsExtensionsInfoArrayOutput() GetExtensionsVersionsExtensionsInfoArrayOutput {
	return i.ToGetExtensionsVersionsExtensionsInfoArrayOutputWithContext(context.Background())
}

func (i GetExtensionsVersionsExtensionsInfoArray) ToGetExtensionsVersionsExtensionsInfoArrayOutputWithContext(ctx context.Context) GetExtensionsVersionsExtensionsInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetExtensionsVersionsExtensionsInfoArrayOutput)
}

type GetExtensionsVersionsExtensionsInfoOutput struct{ *pulumi.OutputState }

func (GetExtensionsVersionsExtensionsInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExtensionsVersionsExtensionsInfo)(nil)).Elem()
}

func (o GetExtensionsVersionsExtensionsInfoOutput) ToGetExtensionsVersionsExtensionsInfoOutput() GetExtensionsVersionsExtensionsInfoOutput {
	return o
}

func (o GetExtensionsVersionsExtensionsInfoOutput) ToGetExtensionsVersionsExtensionsInfoOutputWithContext(ctx context.Context) GetExtensionsVersionsExtensionsInfoOutput {
	return o
}

func (o GetExtensionsVersionsExtensionsInfoOutput) Author() pulumi.StringOutput {
	return o.ApplyT(func(v GetExtensionsVersionsExtensionsInfo) string { return v.Author }).(pulumi.StringOutput)
}

func (o GetExtensionsVersionsExtensionsInfoOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetExtensionsVersionsExtensionsInfo) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetExtensionsVersionsExtensionsInfoOutput) Digest() pulumi.StringOutput {
	return o.ApplyT(func(v GetExtensionsVersionsExtensionsInfo) string { return v.Digest }).(pulumi.StringOutput)
}

func (o GetExtensionsVersionsExtensionsInfoOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetExtensionsVersionsExtensionsInfo) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetExtensionsVersionsExtensionsInfoOutput) Ref() pulumi.StringOutput {
	return o.ApplyT(func(v GetExtensionsVersionsExtensionsInfo) string { return v.Ref }).(pulumi.StringOutput)
}

type GetExtensionsVersionsExtensionsInfoArrayOutput struct{ *pulumi.OutputState }

func (GetExtensionsVersionsExtensionsInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetExtensionsVersionsExtensionsInfo)(nil)).Elem()
}

func (o GetExtensionsVersionsExtensionsInfoArrayOutput) ToGetExtensionsVersionsExtensionsInfoArrayOutput() GetExtensionsVersionsExtensionsInfoArrayOutput {
	return o
}

func (o GetExtensionsVersionsExtensionsInfoArrayOutput) ToGetExtensionsVersionsExtensionsInfoArrayOutputWithContext(ctx context.Context) GetExtensionsVersionsExtensionsInfoArrayOutput {
	return o
}

func (o GetExtensionsVersionsExtensionsInfoArrayOutput) Index(i pulumi.IntInput) GetExtensionsVersionsExtensionsInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetExtensionsVersionsExtensionsInfo {
		return vs[0].([]GetExtensionsVersionsExtensionsInfo)[vs[1].(int)]
	}).(GetExtensionsVersionsExtensionsInfoOutput)
}

type GetExtensionsVersionsFilters struct {
	// The name of the extension to filter by.
	Names []string `pulumi:"names"`
}

// GetExtensionsVersionsFiltersInput is an input type that accepts GetExtensionsVersionsFiltersArgs and GetExtensionsVersionsFiltersOutput values.
// You can construct a concrete instance of `GetExtensionsVersionsFiltersInput` via:
//
//	GetExtensionsVersionsFiltersArgs{...}
type GetExtensionsVersionsFiltersInput interface {
	pulumi.Input

	ToGetExtensionsVersionsFiltersOutput() GetExtensionsVersionsFiltersOutput
	ToGetExtensionsVersionsFiltersOutputWithContext(context.Context) GetExtensionsVersionsFiltersOutput
}

type GetExtensionsVersionsFiltersArgs struct {
	// The name of the extension to filter by.
	Names pulumi.StringArrayInput `pulumi:"names"`
}

func (GetExtensionsVersionsFiltersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExtensionsVersionsFilters)(nil)).Elem()
}

func (i GetExtensionsVersionsFiltersArgs) ToGetExtensionsVersionsFiltersOutput() GetExtensionsVersionsFiltersOutput {
	return i.ToGetExtensionsVersionsFiltersOutputWithContext(context.Background())
}

func (i GetExtensionsVersionsFiltersArgs) ToGetExtensionsVersionsFiltersOutputWithContext(ctx context.Context) GetExtensionsVersionsFiltersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetExtensionsVersionsFiltersOutput)
}

func (i GetExtensionsVersionsFiltersArgs) ToGetExtensionsVersionsFiltersPtrOutput() GetExtensionsVersionsFiltersPtrOutput {
	return i.ToGetExtensionsVersionsFiltersPtrOutputWithContext(context.Background())
}

func (i GetExtensionsVersionsFiltersArgs) ToGetExtensionsVersionsFiltersPtrOutputWithContext(ctx context.Context) GetExtensionsVersionsFiltersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetExtensionsVersionsFiltersOutput).ToGetExtensionsVersionsFiltersPtrOutputWithContext(ctx)
}

// GetExtensionsVersionsFiltersPtrInput is an input type that accepts GetExtensionsVersionsFiltersArgs, GetExtensionsVersionsFiltersPtr and GetExtensionsVersionsFiltersPtrOutput values.
// You can construct a concrete instance of `GetExtensionsVersionsFiltersPtrInput` via:
//
//	        GetExtensionsVersionsFiltersArgs{...}
//
//	or:
//
//	        nil
type GetExtensionsVersionsFiltersPtrInput interface {
	pulumi.Input

	ToGetExtensionsVersionsFiltersPtrOutput() GetExtensionsVersionsFiltersPtrOutput
	ToGetExtensionsVersionsFiltersPtrOutputWithContext(context.Context) GetExtensionsVersionsFiltersPtrOutput
}

type getExtensionsVersionsFiltersPtrType GetExtensionsVersionsFiltersArgs

func GetExtensionsVersionsFiltersPtr(v *GetExtensionsVersionsFiltersArgs) GetExtensionsVersionsFiltersPtrInput {
	return (*getExtensionsVersionsFiltersPtrType)(v)
}

func (*getExtensionsVersionsFiltersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetExtensionsVersionsFilters)(nil)).Elem()
}

func (i *getExtensionsVersionsFiltersPtrType) ToGetExtensionsVersionsFiltersPtrOutput() GetExtensionsVersionsFiltersPtrOutput {
	return i.ToGetExtensionsVersionsFiltersPtrOutputWithContext(context.Background())
}

func (i *getExtensionsVersionsFiltersPtrType) ToGetExtensionsVersionsFiltersPtrOutputWithContext(ctx context.Context) GetExtensionsVersionsFiltersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetExtensionsVersionsFiltersPtrOutput)
}

type GetExtensionsVersionsFiltersOutput struct{ *pulumi.OutputState }

func (GetExtensionsVersionsFiltersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExtensionsVersionsFilters)(nil)).Elem()
}

func (o GetExtensionsVersionsFiltersOutput) ToGetExtensionsVersionsFiltersOutput() GetExtensionsVersionsFiltersOutput {
	return o
}

func (o GetExtensionsVersionsFiltersOutput) ToGetExtensionsVersionsFiltersOutputWithContext(ctx context.Context) GetExtensionsVersionsFiltersOutput {
	return o
}

func (o GetExtensionsVersionsFiltersOutput) ToGetExtensionsVersionsFiltersPtrOutput() GetExtensionsVersionsFiltersPtrOutput {
	return o.ToGetExtensionsVersionsFiltersPtrOutputWithContext(context.Background())
}

func (o GetExtensionsVersionsFiltersOutput) ToGetExtensionsVersionsFiltersPtrOutputWithContext(ctx context.Context) GetExtensionsVersionsFiltersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetExtensionsVersionsFilters) *GetExtensionsVersionsFilters {
		return &v
	}).(GetExtensionsVersionsFiltersPtrOutput)
}

// The name of the extension to filter by.
func (o GetExtensionsVersionsFiltersOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetExtensionsVersionsFilters) []string { return v.Names }).(pulumi.StringArrayOutput)
}

type GetExtensionsVersionsFiltersPtrOutput struct{ *pulumi.OutputState }

func (GetExtensionsVersionsFiltersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetExtensionsVersionsFilters)(nil)).Elem()
}

func (o GetExtensionsVersionsFiltersPtrOutput) ToGetExtensionsVersionsFiltersPtrOutput() GetExtensionsVersionsFiltersPtrOutput {
	return o
}

func (o GetExtensionsVersionsFiltersPtrOutput) ToGetExtensionsVersionsFiltersPtrOutputWithContext(ctx context.Context) GetExtensionsVersionsFiltersPtrOutput {
	return o
}

func (o GetExtensionsVersionsFiltersPtrOutput) Elem() GetExtensionsVersionsFiltersOutput {
	return o.ApplyT(func(v *GetExtensionsVersionsFilters) GetExtensionsVersionsFilters {
		if v != nil {
			return *v
		}
		var ret GetExtensionsVersionsFilters
		return ret
	}).(GetExtensionsVersionsFiltersOutput)
}

// The name of the extension to filter by.
func (o GetExtensionsVersionsFiltersPtrOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetExtensionsVersionsFilters) []string {
		if v == nil {
			return nil
		}
		return v.Names
	}).(pulumi.StringArrayOutput)
}

type GetOverlaysVersionsFilters struct {
	// The name of the overlay to filter by.
	Name *string `pulumi:"name"`
}

// GetOverlaysVersionsFiltersInput is an input type that accepts GetOverlaysVersionsFiltersArgs and GetOverlaysVersionsFiltersOutput values.
// You can construct a concrete instance of `GetOverlaysVersionsFiltersInput` via:
//
//	GetOverlaysVersionsFiltersArgs{...}
type GetOverlaysVersionsFiltersInput interface {
	pulumi.Input

	ToGetOverlaysVersionsFiltersOutput() GetOverlaysVersionsFiltersOutput
	ToGetOverlaysVersionsFiltersOutputWithContext(context.Context) GetOverlaysVersionsFiltersOutput
}

type GetOverlaysVersionsFiltersArgs struct {
	// The name of the overlay to filter by.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (GetOverlaysVersionsFiltersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOverlaysVersionsFilters)(nil)).Elem()
}

func (i GetOverlaysVersionsFiltersArgs) ToGetOverlaysVersionsFiltersOutput() GetOverlaysVersionsFiltersOutput {
	return i.ToGetOverlaysVersionsFiltersOutputWithContext(context.Background())
}

func (i GetOverlaysVersionsFiltersArgs) ToGetOverlaysVersionsFiltersOutputWithContext(ctx context.Context) GetOverlaysVersionsFiltersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOverlaysVersionsFiltersOutput)
}

func (i GetOverlaysVersionsFiltersArgs) ToGetOverlaysVersionsFiltersPtrOutput() GetOverlaysVersionsFiltersPtrOutput {
	return i.ToGetOverlaysVersionsFiltersPtrOutputWithContext(context.Background())
}

func (i GetOverlaysVersionsFiltersArgs) ToGetOverlaysVersionsFiltersPtrOutputWithContext(ctx context.Context) GetOverlaysVersionsFiltersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOverlaysVersionsFiltersOutput).ToGetOverlaysVersionsFiltersPtrOutputWithContext(ctx)
}

// GetOverlaysVersionsFiltersPtrInput is an input type that accepts GetOverlaysVersionsFiltersArgs, GetOverlaysVersionsFiltersPtr and GetOverlaysVersionsFiltersPtrOutput values.
// You can construct a concrete instance of `GetOverlaysVersionsFiltersPtrInput` via:
//
//	        GetOverlaysVersionsFiltersArgs{...}
//
//	or:
//
//	        nil
type GetOverlaysVersionsFiltersPtrInput interface {
	pulumi.Input

	ToGetOverlaysVersionsFiltersPtrOutput() GetOverlaysVersionsFiltersPtrOutput
	ToGetOverlaysVersionsFiltersPtrOutputWithContext(context.Context) GetOverlaysVersionsFiltersPtrOutput
}

type getOverlaysVersionsFiltersPtrType GetOverlaysVersionsFiltersArgs

func GetOverlaysVersionsFiltersPtr(v *GetOverlaysVersionsFiltersArgs) GetOverlaysVersionsFiltersPtrInput {
	return (*getOverlaysVersionsFiltersPtrType)(v)
}

func (*getOverlaysVersionsFiltersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetOverlaysVersionsFilters)(nil)).Elem()
}

func (i *getOverlaysVersionsFiltersPtrType) ToGetOverlaysVersionsFiltersPtrOutput() GetOverlaysVersionsFiltersPtrOutput {
	return i.ToGetOverlaysVersionsFiltersPtrOutputWithContext(context.Background())
}

func (i *getOverlaysVersionsFiltersPtrType) ToGetOverlaysVersionsFiltersPtrOutputWithContext(ctx context.Context) GetOverlaysVersionsFiltersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOverlaysVersionsFiltersPtrOutput)
}

type GetOverlaysVersionsFiltersOutput struct{ *pulumi.OutputState }

func (GetOverlaysVersionsFiltersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOverlaysVersionsFilters)(nil)).Elem()
}

func (o GetOverlaysVersionsFiltersOutput) ToGetOverlaysVersionsFiltersOutput() GetOverlaysVersionsFiltersOutput {
	return o
}

func (o GetOverlaysVersionsFiltersOutput) ToGetOverlaysVersionsFiltersOutputWithContext(ctx context.Context) GetOverlaysVersionsFiltersOutput {
	return o
}

func (o GetOverlaysVersionsFiltersOutput) ToGetOverlaysVersionsFiltersPtrOutput() GetOverlaysVersionsFiltersPtrOutput {
	return o.ToGetOverlaysVersionsFiltersPtrOutputWithContext(context.Background())
}

func (o GetOverlaysVersionsFiltersOutput) ToGetOverlaysVersionsFiltersPtrOutputWithContext(ctx context.Context) GetOverlaysVersionsFiltersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetOverlaysVersionsFilters) *GetOverlaysVersionsFilters {
		return &v
	}).(GetOverlaysVersionsFiltersPtrOutput)
}

// The name of the overlay to filter by.
func (o GetOverlaysVersionsFiltersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOverlaysVersionsFilters) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type GetOverlaysVersionsFiltersPtrOutput struct{ *pulumi.OutputState }

func (GetOverlaysVersionsFiltersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetOverlaysVersionsFilters)(nil)).Elem()
}

func (o GetOverlaysVersionsFiltersPtrOutput) ToGetOverlaysVersionsFiltersPtrOutput() GetOverlaysVersionsFiltersPtrOutput {
	return o
}

func (o GetOverlaysVersionsFiltersPtrOutput) ToGetOverlaysVersionsFiltersPtrOutputWithContext(ctx context.Context) GetOverlaysVersionsFiltersPtrOutput {
	return o
}

func (o GetOverlaysVersionsFiltersPtrOutput) Elem() GetOverlaysVersionsFiltersOutput {
	return o.ApplyT(func(v *GetOverlaysVersionsFilters) GetOverlaysVersionsFilters {
		if v != nil {
			return *v
		}
		var ret GetOverlaysVersionsFilters
		return ret
	}).(GetOverlaysVersionsFiltersOutput)
}

// The name of the overlay to filter by.
func (o GetOverlaysVersionsFiltersPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetOverlaysVersionsFilters) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type GetOverlaysVersionsOverlaysInfo struct {
	Digest string `pulumi:"digest"`
	Image  string `pulumi:"image"`
	Name   string `pulumi:"name"`
	Ref    string `pulumi:"ref"`
}

// GetOverlaysVersionsOverlaysInfoInput is an input type that accepts GetOverlaysVersionsOverlaysInfoArgs and GetOverlaysVersionsOverlaysInfoOutput values.
// You can construct a concrete instance of `GetOverlaysVersionsOverlaysInfoInput` via:
//
//	GetOverlaysVersionsOverlaysInfoArgs{...}
type GetOverlaysVersionsOverlaysInfoInput interface {
	pulumi.Input

	ToGetOverlaysVersionsOverlaysInfoOutput() GetOverlaysVersionsOverlaysInfoOutput
	ToGetOverlaysVersionsOverlaysInfoOutputWithContext(context.Context) GetOverlaysVersionsOverlaysInfoOutput
}

type GetOverlaysVersionsOverlaysInfoArgs struct {
	Digest pulumi.StringInput `pulumi:"digest"`
	Image  pulumi.StringInput `pulumi:"image"`
	Name   pulumi.StringInput `pulumi:"name"`
	Ref    pulumi.StringInput `pulumi:"ref"`
}

func (GetOverlaysVersionsOverlaysInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOverlaysVersionsOverlaysInfo)(nil)).Elem()
}

func (i GetOverlaysVersionsOverlaysInfoArgs) ToGetOverlaysVersionsOverlaysInfoOutput() GetOverlaysVersionsOverlaysInfoOutput {
	return i.ToGetOverlaysVersionsOverlaysInfoOutputWithContext(context.Background())
}

func (i GetOverlaysVersionsOverlaysInfoArgs) ToGetOverlaysVersionsOverlaysInfoOutputWithContext(ctx context.Context) GetOverlaysVersionsOverlaysInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOverlaysVersionsOverlaysInfoOutput)
}

// GetOverlaysVersionsOverlaysInfoArrayInput is an input type that accepts GetOverlaysVersionsOverlaysInfoArray and GetOverlaysVersionsOverlaysInfoArrayOutput values.
// You can construct a concrete instance of `GetOverlaysVersionsOverlaysInfoArrayInput` via:
//
//	GetOverlaysVersionsOverlaysInfoArray{ GetOverlaysVersionsOverlaysInfoArgs{...} }
type GetOverlaysVersionsOverlaysInfoArrayInput interface {
	pulumi.Input

	ToGetOverlaysVersionsOverlaysInfoArrayOutput() GetOverlaysVersionsOverlaysInfoArrayOutput
	ToGetOverlaysVersionsOverlaysInfoArrayOutputWithContext(context.Context) GetOverlaysVersionsOverlaysInfoArrayOutput
}

type GetOverlaysVersionsOverlaysInfoArray []GetOverlaysVersionsOverlaysInfoInput

func (GetOverlaysVersionsOverlaysInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOverlaysVersionsOverlaysInfo)(nil)).Elem()
}

func (i GetOverlaysVersionsOverlaysInfoArray) ToGetOverlaysVersionsOverlaysInfoArrayOutput() GetOverlaysVersionsOverlaysInfoArrayOutput {
	return i.ToGetOverlaysVersionsOverlaysInfoArrayOutputWithContext(context.Background())
}

func (i GetOverlaysVersionsOverlaysInfoArray) ToGetOverlaysVersionsOverlaysInfoArrayOutputWithContext(ctx context.Context) GetOverlaysVersionsOverlaysInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOverlaysVersionsOverlaysInfoArrayOutput)
}

type GetOverlaysVersionsOverlaysInfoOutput struct{ *pulumi.OutputState }

func (GetOverlaysVersionsOverlaysInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOverlaysVersionsOverlaysInfo)(nil)).Elem()
}

func (o GetOverlaysVersionsOverlaysInfoOutput) ToGetOverlaysVersionsOverlaysInfoOutput() GetOverlaysVersionsOverlaysInfoOutput {
	return o
}

func (o GetOverlaysVersionsOverlaysInfoOutput) ToGetOverlaysVersionsOverlaysInfoOutputWithContext(ctx context.Context) GetOverlaysVersionsOverlaysInfoOutput {
	return o
}

func (o GetOverlaysVersionsOverlaysInfoOutput) Digest() pulumi.StringOutput {
	return o.ApplyT(func(v GetOverlaysVersionsOverlaysInfo) string { return v.Digest }).(pulumi.StringOutput)
}

func (o GetOverlaysVersionsOverlaysInfoOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v GetOverlaysVersionsOverlaysInfo) string { return v.Image }).(pulumi.StringOutput)
}

func (o GetOverlaysVersionsOverlaysInfoOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOverlaysVersionsOverlaysInfo) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetOverlaysVersionsOverlaysInfoOutput) Ref() pulumi.StringOutput {
	return o.ApplyT(func(v GetOverlaysVersionsOverlaysInfo) string { return v.Ref }).(pulumi.StringOutput)
}

type GetOverlaysVersionsOverlaysInfoArrayOutput struct{ *pulumi.OutputState }

func (GetOverlaysVersionsOverlaysInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOverlaysVersionsOverlaysInfo)(nil)).Elem()
}

func (o GetOverlaysVersionsOverlaysInfoArrayOutput) ToGetOverlaysVersionsOverlaysInfoArrayOutput() GetOverlaysVersionsOverlaysInfoArrayOutput {
	return o
}

func (o GetOverlaysVersionsOverlaysInfoArrayOutput) ToGetOverlaysVersionsOverlaysInfoArrayOutputWithContext(ctx context.Context) GetOverlaysVersionsOverlaysInfoArrayOutput {
	return o
}

func (o GetOverlaysVersionsOverlaysInfoArrayOutput) Index(i pulumi.IntInput) GetOverlaysVersionsOverlaysInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOverlaysVersionsOverlaysInfo {
		return vs[0].([]GetOverlaysVersionsOverlaysInfo)[vs[1].(int)]
	}).(GetOverlaysVersionsOverlaysInfoOutput)
}

type GetUrlsUrls struct {
	// The URL for the disk image.
	DiskImage string `pulumi:"diskImage"`
	// The URL for the disk image with secure boot.
	DiskImageSecureboot string `pulumi:"diskImageSecureboot"`
	// The URL for the initramfs image.
	Initramfs string `pulumi:"initramfs"`
	// The URL for the installer image.
	Installer string `pulumi:"installer"`
	// The URL for the installer image with secure boot.
	InstallerSecureboot string `pulumi:"installerSecureboot"`
	// The URL for the ISO image.
	Iso string `pulumi:"iso"`
	// The URL for the ISO image with secure boot.
	IsoSecureboot string `pulumi:"isoSecureboot"`
	// The URL for the kernel image.
	Kernel string `pulumi:"kernel"`
	// The URL for the kernel command line.
	KernelCommandLine string `pulumi:"kernelCommandLine"`
	// The URL for the PXE image.
	Pxe string `pulumi:"pxe"`
	// The URL for the UKI image.
	Uki string `pulumi:"uki"`
}

// GetUrlsUrlsInput is an input type that accepts GetUrlsUrlsArgs and GetUrlsUrlsOutput values.
// You can construct a concrete instance of `GetUrlsUrlsInput` via:
//
//	GetUrlsUrlsArgs{...}
type GetUrlsUrlsInput interface {
	pulumi.Input

	ToGetUrlsUrlsOutput() GetUrlsUrlsOutput
	ToGetUrlsUrlsOutputWithContext(context.Context) GetUrlsUrlsOutput
}

type GetUrlsUrlsArgs struct {
	// The URL for the disk image.
	DiskImage pulumi.StringInput `pulumi:"diskImage"`
	// The URL for the disk image with secure boot.
	DiskImageSecureboot pulumi.StringInput `pulumi:"diskImageSecureboot"`
	// The URL for the initramfs image.
	Initramfs pulumi.StringInput `pulumi:"initramfs"`
	// The URL for the installer image.
	Installer pulumi.StringInput `pulumi:"installer"`
	// The URL for the installer image with secure boot.
	InstallerSecureboot pulumi.StringInput `pulumi:"installerSecureboot"`
	// The URL for the ISO image.
	Iso pulumi.StringInput `pulumi:"iso"`
	// The URL for the ISO image with secure boot.
	IsoSecureboot pulumi.StringInput `pulumi:"isoSecureboot"`
	// The URL for the kernel image.
	Kernel pulumi.StringInput `pulumi:"kernel"`
	// The URL for the kernel command line.
	KernelCommandLine pulumi.StringInput `pulumi:"kernelCommandLine"`
	// The URL for the PXE image.
	Pxe pulumi.StringInput `pulumi:"pxe"`
	// The URL for the UKI image.
	Uki pulumi.StringInput `pulumi:"uki"`
}

func (GetUrlsUrlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUrlsUrls)(nil)).Elem()
}

func (i GetUrlsUrlsArgs) ToGetUrlsUrlsOutput() GetUrlsUrlsOutput {
	return i.ToGetUrlsUrlsOutputWithContext(context.Background())
}

func (i GetUrlsUrlsArgs) ToGetUrlsUrlsOutputWithContext(ctx context.Context) GetUrlsUrlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUrlsUrlsOutput)
}

type GetUrlsUrlsOutput struct{ *pulumi.OutputState }

func (GetUrlsUrlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUrlsUrls)(nil)).Elem()
}

func (o GetUrlsUrlsOutput) ToGetUrlsUrlsOutput() GetUrlsUrlsOutput {
	return o
}

func (o GetUrlsUrlsOutput) ToGetUrlsUrlsOutputWithContext(ctx context.Context) GetUrlsUrlsOutput {
	return o
}

// The URL for the disk image.
func (o GetUrlsUrlsOutput) DiskImage() pulumi.StringOutput {
	return o.ApplyT(func(v GetUrlsUrls) string { return v.DiskImage }).(pulumi.StringOutput)
}

// The URL for the disk image with secure boot.
func (o GetUrlsUrlsOutput) DiskImageSecureboot() pulumi.StringOutput {
	return o.ApplyT(func(v GetUrlsUrls) string { return v.DiskImageSecureboot }).(pulumi.StringOutput)
}

// The URL for the initramfs image.
func (o GetUrlsUrlsOutput) Initramfs() pulumi.StringOutput {
	return o.ApplyT(func(v GetUrlsUrls) string { return v.Initramfs }).(pulumi.StringOutput)
}

// The URL for the installer image.
func (o GetUrlsUrlsOutput) Installer() pulumi.StringOutput {
	return o.ApplyT(func(v GetUrlsUrls) string { return v.Installer }).(pulumi.StringOutput)
}

// The URL for the installer image with secure boot.
func (o GetUrlsUrlsOutput) InstallerSecureboot() pulumi.StringOutput {
	return o.ApplyT(func(v GetUrlsUrls) string { return v.InstallerSecureboot }).(pulumi.StringOutput)
}

// The URL for the ISO image.
func (o GetUrlsUrlsOutput) Iso() pulumi.StringOutput {
	return o.ApplyT(func(v GetUrlsUrls) string { return v.Iso }).(pulumi.StringOutput)
}

// The URL for the ISO image with secure boot.
func (o GetUrlsUrlsOutput) IsoSecureboot() pulumi.StringOutput {
	return o.ApplyT(func(v GetUrlsUrls) string { return v.IsoSecureboot }).(pulumi.StringOutput)
}

// The URL for the kernel image.
func (o GetUrlsUrlsOutput) Kernel() pulumi.StringOutput {
	return o.ApplyT(func(v GetUrlsUrls) string { return v.Kernel }).(pulumi.StringOutput)
}

// The URL for the kernel command line.
func (o GetUrlsUrlsOutput) KernelCommandLine() pulumi.StringOutput {
	return o.ApplyT(func(v GetUrlsUrls) string { return v.KernelCommandLine }).(pulumi.StringOutput)
}

// The URL for the PXE image.
func (o GetUrlsUrlsOutput) Pxe() pulumi.StringOutput {
	return o.ApplyT(func(v GetUrlsUrls) string { return v.Pxe }).(pulumi.StringOutput)
}

// The URL for the UKI image.
func (o GetUrlsUrlsOutput) Uki() pulumi.StringOutput {
	return o.ApplyT(func(v GetUrlsUrls) string { return v.Uki }).(pulumi.StringOutput)
}

type GetVersionsFilters struct {
	// If set to true, only stable versions will be returned. If set to false, all versions will be returned.
	StableVersionsOnly *bool `pulumi:"stableVersionsOnly"`
}

// GetVersionsFiltersInput is an input type that accepts GetVersionsFiltersArgs and GetVersionsFiltersOutput values.
// You can construct a concrete instance of `GetVersionsFiltersInput` via:
//
//	GetVersionsFiltersArgs{...}
type GetVersionsFiltersInput interface {
	pulumi.Input

	ToGetVersionsFiltersOutput() GetVersionsFiltersOutput
	ToGetVersionsFiltersOutputWithContext(context.Context) GetVersionsFiltersOutput
}

type GetVersionsFiltersArgs struct {
	// If set to true, only stable versions will be returned. If set to false, all versions will be returned.
	StableVersionsOnly pulumi.BoolPtrInput `pulumi:"stableVersionsOnly"`
}

func (GetVersionsFiltersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVersionsFilters)(nil)).Elem()
}

func (i GetVersionsFiltersArgs) ToGetVersionsFiltersOutput() GetVersionsFiltersOutput {
	return i.ToGetVersionsFiltersOutputWithContext(context.Background())
}

func (i GetVersionsFiltersArgs) ToGetVersionsFiltersOutputWithContext(ctx context.Context) GetVersionsFiltersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVersionsFiltersOutput)
}

func (i GetVersionsFiltersArgs) ToGetVersionsFiltersPtrOutput() GetVersionsFiltersPtrOutput {
	return i.ToGetVersionsFiltersPtrOutputWithContext(context.Background())
}

func (i GetVersionsFiltersArgs) ToGetVersionsFiltersPtrOutputWithContext(ctx context.Context) GetVersionsFiltersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVersionsFiltersOutput).ToGetVersionsFiltersPtrOutputWithContext(ctx)
}

// GetVersionsFiltersPtrInput is an input type that accepts GetVersionsFiltersArgs, GetVersionsFiltersPtr and GetVersionsFiltersPtrOutput values.
// You can construct a concrete instance of `GetVersionsFiltersPtrInput` via:
//
//	        GetVersionsFiltersArgs{...}
//
//	or:
//
//	        nil
type GetVersionsFiltersPtrInput interface {
	pulumi.Input

	ToGetVersionsFiltersPtrOutput() GetVersionsFiltersPtrOutput
	ToGetVersionsFiltersPtrOutputWithContext(context.Context) GetVersionsFiltersPtrOutput
}

type getVersionsFiltersPtrType GetVersionsFiltersArgs

func GetVersionsFiltersPtr(v *GetVersionsFiltersArgs) GetVersionsFiltersPtrInput {
	return (*getVersionsFiltersPtrType)(v)
}

func (*getVersionsFiltersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetVersionsFilters)(nil)).Elem()
}

func (i *getVersionsFiltersPtrType) ToGetVersionsFiltersPtrOutput() GetVersionsFiltersPtrOutput {
	return i.ToGetVersionsFiltersPtrOutputWithContext(context.Background())
}

func (i *getVersionsFiltersPtrType) ToGetVersionsFiltersPtrOutputWithContext(ctx context.Context) GetVersionsFiltersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVersionsFiltersPtrOutput)
}

type GetVersionsFiltersOutput struct{ *pulumi.OutputState }

func (GetVersionsFiltersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVersionsFilters)(nil)).Elem()
}

func (o GetVersionsFiltersOutput) ToGetVersionsFiltersOutput() GetVersionsFiltersOutput {
	return o
}

func (o GetVersionsFiltersOutput) ToGetVersionsFiltersOutputWithContext(ctx context.Context) GetVersionsFiltersOutput {
	return o
}

func (o GetVersionsFiltersOutput) ToGetVersionsFiltersPtrOutput() GetVersionsFiltersPtrOutput {
	return o.ToGetVersionsFiltersPtrOutputWithContext(context.Background())
}

func (o GetVersionsFiltersOutput) ToGetVersionsFiltersPtrOutputWithContext(ctx context.Context) GetVersionsFiltersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetVersionsFilters) *GetVersionsFilters {
		return &v
	}).(GetVersionsFiltersPtrOutput)
}

// If set to true, only stable versions will be returned. If set to false, all versions will be returned.
func (o GetVersionsFiltersOutput) StableVersionsOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetVersionsFilters) *bool { return v.StableVersionsOnly }).(pulumi.BoolPtrOutput)
}

type GetVersionsFiltersPtrOutput struct{ *pulumi.OutputState }

func (GetVersionsFiltersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetVersionsFilters)(nil)).Elem()
}

func (o GetVersionsFiltersPtrOutput) ToGetVersionsFiltersPtrOutput() GetVersionsFiltersPtrOutput {
	return o
}

func (o GetVersionsFiltersPtrOutput) ToGetVersionsFiltersPtrOutputWithContext(ctx context.Context) GetVersionsFiltersPtrOutput {
	return o
}

func (o GetVersionsFiltersPtrOutput) Elem() GetVersionsFiltersOutput {
	return o.ApplyT(func(v *GetVersionsFilters) GetVersionsFilters {
		if v != nil {
			return *v
		}
		var ret GetVersionsFilters
		return ret
	}).(GetVersionsFiltersOutput)
}

// If set to true, only stable versions will be returned. If set to false, all versions will be returned.
func (o GetVersionsFiltersPtrOutput) StableVersionsOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetVersionsFilters) *bool {
		if v == nil {
			return nil
		}
		return v.StableVersionsOnly
	}).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetExtensionsVersionsExtensionsInfoInput)(nil)).Elem(), GetExtensionsVersionsExtensionsInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetExtensionsVersionsExtensionsInfoArrayInput)(nil)).Elem(), GetExtensionsVersionsExtensionsInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetExtensionsVersionsFiltersInput)(nil)).Elem(), GetExtensionsVersionsFiltersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetExtensionsVersionsFiltersPtrInput)(nil)).Elem(), GetExtensionsVersionsFiltersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOverlaysVersionsFiltersInput)(nil)).Elem(), GetOverlaysVersionsFiltersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOverlaysVersionsFiltersPtrInput)(nil)).Elem(), GetOverlaysVersionsFiltersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOverlaysVersionsOverlaysInfoInput)(nil)).Elem(), GetOverlaysVersionsOverlaysInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOverlaysVersionsOverlaysInfoArrayInput)(nil)).Elem(), GetOverlaysVersionsOverlaysInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUrlsUrlsInput)(nil)).Elem(), GetUrlsUrlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVersionsFiltersInput)(nil)).Elem(), GetVersionsFiltersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVersionsFiltersPtrInput)(nil)).Elem(), GetVersionsFiltersArgs{})
	pulumi.RegisterOutputType(GetExtensionsVersionsExtensionsInfoOutput{})
	pulumi.RegisterOutputType(GetExtensionsVersionsExtensionsInfoArrayOutput{})
	pulumi.RegisterOutputType(GetExtensionsVersionsFiltersOutput{})
	pulumi.RegisterOutputType(GetExtensionsVersionsFiltersPtrOutput{})
	pulumi.RegisterOutputType(GetOverlaysVersionsFiltersOutput{})
	pulumi.RegisterOutputType(GetOverlaysVersionsFiltersPtrOutput{})
	pulumi.RegisterOutputType(GetOverlaysVersionsOverlaysInfoOutput{})
	pulumi.RegisterOutputType(GetOverlaysVersionsOverlaysInfoArrayOutput{})
	pulumi.RegisterOutputType(GetUrlsUrlsOutput{})
	pulumi.RegisterOutputType(GetVersionsFiltersOutput{})
	pulumi.RegisterOutputType(GetVersionsFiltersPtrOutput{})
}
