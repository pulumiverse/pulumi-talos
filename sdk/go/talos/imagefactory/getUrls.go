// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package imagefactory

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-talos/sdk/go/talos/internal"
)

// Generates URLs for different assets supported by the Talos image factory.
func GetUrls(ctx *pulumi.Context, args *GetUrlsArgs, opts ...pulumi.InvokeOption) (*GetUrlsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetUrlsResult
	err := ctx.Invoke("talos:imageFactory/getUrls:getUrls", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUrls.
type GetUrlsArgs struct {
	Architecture *string `pulumi:"architecture"`
	Platform     *string `pulumi:"platform"`
	Sbc          *string `pulumi:"sbc"`
	SchematicId  string  `pulumi:"schematicId"`
	TalosVersion string  `pulumi:"talosVersion"`
}

// A collection of values returned by getUrls.
type GetUrlsResult struct {
	Architecture string      `pulumi:"architecture"`
	Id           string      `pulumi:"id"`
	Platform     *string     `pulumi:"platform"`
	Sbc          *string     `pulumi:"sbc"`
	SchematicId  string      `pulumi:"schematicId"`
	TalosVersion string      `pulumi:"talosVersion"`
	Urls         GetUrlsUrls `pulumi:"urls"`
}

func GetUrlsOutput(ctx *pulumi.Context, args GetUrlsOutputArgs, opts ...pulumi.InvokeOption) GetUrlsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetUrlsResultOutput, error) {
			args := v.(GetUrlsArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetUrlsResult
			secret, err := ctx.InvokePackageRaw("talos:imageFactory/getUrls:getUrls", args, &rv, "", opts...)
			if err != nil {
				return GetUrlsResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetUrlsResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetUrlsResultOutput), nil
			}
			return output, nil
		}).(GetUrlsResultOutput)
}

// A collection of arguments for invoking getUrls.
type GetUrlsOutputArgs struct {
	Architecture pulumi.StringPtrInput `pulumi:"architecture"`
	Platform     pulumi.StringPtrInput `pulumi:"platform"`
	Sbc          pulumi.StringPtrInput `pulumi:"sbc"`
	SchematicId  pulumi.StringInput    `pulumi:"schematicId"`
	TalosVersion pulumi.StringInput    `pulumi:"talosVersion"`
}

func (GetUrlsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUrlsArgs)(nil)).Elem()
}

// A collection of values returned by getUrls.
type GetUrlsResultOutput struct{ *pulumi.OutputState }

func (GetUrlsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUrlsResult)(nil)).Elem()
}

func (o GetUrlsResultOutput) ToGetUrlsResultOutput() GetUrlsResultOutput {
	return o
}

func (o GetUrlsResultOutput) ToGetUrlsResultOutputWithContext(ctx context.Context) GetUrlsResultOutput {
	return o
}

func (o GetUrlsResultOutput) Architecture() pulumi.StringOutput {
	return o.ApplyT(func(v GetUrlsResult) string { return v.Architecture }).(pulumi.StringOutput)
}

func (o GetUrlsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUrlsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetUrlsResultOutput) Platform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUrlsResult) *string { return v.Platform }).(pulumi.StringPtrOutput)
}

func (o GetUrlsResultOutput) Sbc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUrlsResult) *string { return v.Sbc }).(pulumi.StringPtrOutput)
}

func (o GetUrlsResultOutput) SchematicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUrlsResult) string { return v.SchematicId }).(pulumi.StringOutput)
}

func (o GetUrlsResultOutput) TalosVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetUrlsResult) string { return v.TalosVersion }).(pulumi.StringOutput)
}

func (o GetUrlsResultOutput) Urls() GetUrlsUrlsOutput {
	return o.ApplyT(func(v GetUrlsResult) GetUrlsUrls { return v.Urls }).(GetUrlsUrlsOutput)
}

func init() {
	pulumi.RegisterOutputType(GetUrlsResultOutput{})
}
