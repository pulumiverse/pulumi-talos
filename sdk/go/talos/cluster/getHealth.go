// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cluster

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-talos/sdk/go/talos/internal"
)

// Checks the health of a Talos cluster
func GetHealth(ctx *pulumi.Context, args *GetHealthArgs, opts ...pulumi.InvokeOption) (*GetHealthResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetHealthResult
	err := ctx.Invoke("talos:cluster/getHealth:getHealth", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getHealth.
type GetHealthArgs struct {
	// The client configuration data
	ClientConfiguration GetHealthClientConfiguration `pulumi:"clientConfiguration"`
	// List of control plane nodes to check for health.
	ControlPlaneNodes []string `pulumi:"controlPlaneNodes"`
	// endpoints to use for the health check client. Use at least one control plane endpoint.
	Endpoints []string           `pulumi:"endpoints"`
	Timeouts  *GetHealthTimeouts `pulumi:"timeouts"`
	// List of worker nodes to check for health.
	WorkerNodes []string `pulumi:"workerNodes"`
}

// A collection of values returned by getHealth.
type GetHealthResult struct {
	// The client configuration data
	ClientConfiguration GetHealthClientConfiguration `pulumi:"clientConfiguration"`
	// List of control plane nodes to check for health.
	ControlPlaneNodes []string `pulumi:"controlPlaneNodes"`
	// endpoints to use for the health check client. Use at least one control plane endpoint.
	Endpoints []string `pulumi:"endpoints"`
	// The ID of this resource.
	Id       string             `pulumi:"id"`
	Timeouts *GetHealthTimeouts `pulumi:"timeouts"`
	// List of worker nodes to check for health.
	WorkerNodes []string `pulumi:"workerNodes"`
}

func GetHealthOutput(ctx *pulumi.Context, args GetHealthOutputArgs, opts ...pulumi.InvokeOption) GetHealthResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetHealthResultOutput, error) {
			args := v.(GetHealthArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetHealthResult
			secret, err := ctx.InvokePackageRaw("talos:cluster/getHealth:getHealth", args, &rv, "", opts...)
			if err != nil {
				return GetHealthResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetHealthResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetHealthResultOutput), nil
			}
			return output, nil
		}).(GetHealthResultOutput)
}

// A collection of arguments for invoking getHealth.
type GetHealthOutputArgs struct {
	// The client configuration data
	ClientConfiguration GetHealthClientConfigurationInput `pulumi:"clientConfiguration"`
	// List of control plane nodes to check for health.
	ControlPlaneNodes pulumi.StringArrayInput `pulumi:"controlPlaneNodes"`
	// endpoints to use for the health check client. Use at least one control plane endpoint.
	Endpoints pulumi.StringArrayInput   `pulumi:"endpoints"`
	Timeouts  GetHealthTimeoutsPtrInput `pulumi:"timeouts"`
	// List of worker nodes to check for health.
	WorkerNodes pulumi.StringArrayInput `pulumi:"workerNodes"`
}

func (GetHealthOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHealthArgs)(nil)).Elem()
}

// A collection of values returned by getHealth.
type GetHealthResultOutput struct{ *pulumi.OutputState }

func (GetHealthResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHealthResult)(nil)).Elem()
}

func (o GetHealthResultOutput) ToGetHealthResultOutput() GetHealthResultOutput {
	return o
}

func (o GetHealthResultOutput) ToGetHealthResultOutputWithContext(ctx context.Context) GetHealthResultOutput {
	return o
}

// The client configuration data
func (o GetHealthResultOutput) ClientConfiguration() GetHealthClientConfigurationOutput {
	return o.ApplyT(func(v GetHealthResult) GetHealthClientConfiguration { return v.ClientConfiguration }).(GetHealthClientConfigurationOutput)
}

// List of control plane nodes to check for health.
func (o GetHealthResultOutput) ControlPlaneNodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHealthResult) []string { return v.ControlPlaneNodes }).(pulumi.StringArrayOutput)
}

// endpoints to use for the health check client. Use at least one control plane endpoint.
func (o GetHealthResultOutput) Endpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHealthResult) []string { return v.Endpoints }).(pulumi.StringArrayOutput)
}

// The ID of this resource.
func (o GetHealthResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetHealthResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetHealthResultOutput) Timeouts() GetHealthTimeoutsPtrOutput {
	return o.ApplyT(func(v GetHealthResult) *GetHealthTimeouts { return v.Timeouts }).(GetHealthTimeoutsPtrOutput)
}

// List of worker nodes to check for health.
func (o GetHealthResultOutput) WorkerNodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHealthResult) []string { return v.WorkerNodes }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetHealthResultOutput{})
}
