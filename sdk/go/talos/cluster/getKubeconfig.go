// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cluster

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-talos/sdk/go/talos/internal"
)

// Retrieves the kubeconfig for a Talos cluster
func LookupKubeconfig(ctx *pulumi.Context, args *LookupKubeconfigArgs, opts ...pulumi.InvokeOption) (*LookupKubeconfigResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupKubeconfigResult
	err := ctx.Invoke("talos:cluster/getKubeconfig:getKubeconfig", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKubeconfig.
type LookupKubeconfigArgs struct {
	// The client configuration data
	ClientConfiguration GetKubeconfigClientConfiguration `pulumi:"clientConfiguration"`
	// endpoint to use for the talosclient. If not set, the node value will be used
	Endpoint *string `pulumi:"endpoint"`
	// controlplane node to retrieve the kubeconfig from
	Node     string                 `pulumi:"node"`
	Timeouts *GetKubeconfigTimeouts `pulumi:"timeouts"`
	// Wait for the kubernetes api to be available
	//
	// Deprecated: This attribute is deprecated and no-op. Will be removed in a future version. Use cluster.getHealth instead.
	Wait *bool `pulumi:"wait"`
}

// A collection of values returned by getKubeconfig.
type LookupKubeconfigResult struct {
	// The client configuration data
	ClientConfiguration GetKubeconfigClientConfiguration `pulumi:"clientConfiguration"`
	// endpoint to use for the talosclient. If not set, the node value will be used
	Endpoint string `pulumi:"endpoint"`
	// The ID of this resource.
	Id string `pulumi:"id"`
	// The raw kubeconfig
	KubeconfigRaw string `pulumi:"kubeconfigRaw"`
	// The kubernetes client configuration
	KubernetesClientConfiguration GetKubeconfigKubernetesClientConfiguration `pulumi:"kubernetesClientConfiguration"`
	// controlplane node to retrieve the kubeconfig from
	Node     string                 `pulumi:"node"`
	Timeouts *GetKubeconfigTimeouts `pulumi:"timeouts"`
	// Wait for the kubernetes api to be available
	//
	// Deprecated: This attribute is deprecated and no-op. Will be removed in a future version. Use cluster.getHealth instead.
	Wait *bool `pulumi:"wait"`
}

func LookupKubeconfigOutput(ctx *pulumi.Context, args LookupKubeconfigOutputArgs, opts ...pulumi.InvokeOption) LookupKubeconfigResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupKubeconfigResultOutput, error) {
			args := v.(LookupKubeconfigArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupKubeconfigResult
			secret, err := ctx.InvokePackageRaw("talos:cluster/getKubeconfig:getKubeconfig", args, &rv, "", opts...)
			if err != nil {
				return LookupKubeconfigResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupKubeconfigResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupKubeconfigResultOutput), nil
			}
			return output, nil
		}).(LookupKubeconfigResultOutput)
}

// A collection of arguments for invoking getKubeconfig.
type LookupKubeconfigOutputArgs struct {
	// The client configuration data
	ClientConfiguration GetKubeconfigClientConfigurationInput `pulumi:"clientConfiguration"`
	// endpoint to use for the talosclient. If not set, the node value will be used
	Endpoint pulumi.StringPtrInput `pulumi:"endpoint"`
	// controlplane node to retrieve the kubeconfig from
	Node     pulumi.StringInput            `pulumi:"node"`
	Timeouts GetKubeconfigTimeoutsPtrInput `pulumi:"timeouts"`
	// Wait for the kubernetes api to be available
	//
	// Deprecated: This attribute is deprecated and no-op. Will be removed in a future version. Use cluster.getHealth instead.
	Wait pulumi.BoolPtrInput `pulumi:"wait"`
}

func (LookupKubeconfigOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKubeconfigArgs)(nil)).Elem()
}

// A collection of values returned by getKubeconfig.
type LookupKubeconfigResultOutput struct{ *pulumi.OutputState }

func (LookupKubeconfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKubeconfigResult)(nil)).Elem()
}

func (o LookupKubeconfigResultOutput) ToLookupKubeconfigResultOutput() LookupKubeconfigResultOutput {
	return o
}

func (o LookupKubeconfigResultOutput) ToLookupKubeconfigResultOutputWithContext(ctx context.Context) LookupKubeconfigResultOutput {
	return o
}

// The client configuration data
func (o LookupKubeconfigResultOutput) ClientConfiguration() GetKubeconfigClientConfigurationOutput {
	return o.ApplyT(func(v LookupKubeconfigResult) GetKubeconfigClientConfiguration { return v.ClientConfiguration }).(GetKubeconfigClientConfigurationOutput)
}

// endpoint to use for the talosclient. If not set, the node value will be used
func (o LookupKubeconfigResultOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubeconfigResult) string { return v.Endpoint }).(pulumi.StringOutput)
}

// The ID of this resource.
func (o LookupKubeconfigResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubeconfigResult) string { return v.Id }).(pulumi.StringOutput)
}

// The raw kubeconfig
func (o LookupKubeconfigResultOutput) KubeconfigRaw() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubeconfigResult) string { return v.KubeconfigRaw }).(pulumi.StringOutput)
}

// The kubernetes client configuration
func (o LookupKubeconfigResultOutput) KubernetesClientConfiguration() GetKubeconfigKubernetesClientConfigurationOutput {
	return o.ApplyT(func(v LookupKubeconfigResult) GetKubeconfigKubernetesClientConfiguration {
		return v.KubernetesClientConfiguration
	}).(GetKubeconfigKubernetesClientConfigurationOutput)
}

// controlplane node to retrieve the kubeconfig from
func (o LookupKubeconfigResultOutput) Node() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubeconfigResult) string { return v.Node }).(pulumi.StringOutput)
}

func (o LookupKubeconfigResultOutput) Timeouts() GetKubeconfigTimeoutsPtrOutput {
	return o.ApplyT(func(v LookupKubeconfigResult) *GetKubeconfigTimeouts { return v.Timeouts }).(GetKubeconfigTimeoutsPtrOutput)
}

// Wait for the kubernetes api to be available
//
// Deprecated: This attribute is deprecated and no-op. Will be removed in a future version. Use cluster.getHealth instead.
func (o LookupKubeconfigResultOutput) Wait() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupKubeconfigResult) *bool { return v.Wait }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupKubeconfigResultOutput{})
}
