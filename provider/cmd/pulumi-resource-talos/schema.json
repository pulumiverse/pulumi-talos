{
    "name": "talos",
    "description": "A Pulumi package for creating and managing Talos Linux machines and clusters.",
    "keywords": [
        "pulumi",
        "talos",
        "category/infrastructure"
    ],
    "homepage": "https://talos.dev",
    "license": "MPL-2.0",
    "attribution": "This Pulumi package is based on the [`talos` Terraform Provider](https://github.com/siderolabs/terraform-provider-talos).",
    "repository": "https://github.com/pulumiverse/pulumi-talos",
    "logoUrl": "https://www.talos.dev/images/Sidero_stacked_darkbkgd_RGB.png",
    "pluginDownloadURL": "github://api.github.com/pulumiverse",
    "publisher": "Pulumiverse",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20",
            "rootNamespace": "Pulumiverse",
            "respectSchemaVersion": true
        },
        "go": {
            "importBasePath": "github.com/pulumiverse/pulumi-talos/sdk/go/talos",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true,
            "respectSchemaVersion": true
        },
        "nodejs": {
            "packageName": "@pulumiverse/talos",
            "packageDescription": "A Pulumi package for creating and managing Talos Linux machines and clusters.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/siderolabs/terraform-provider-talos)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-talos` repo](https://github.com/pulumiverse/pulumi-talos/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-talos` repo](https://github.com/siderolabs/terraform-provider-talos/issues).",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true,
            "respectSchemaVersion": true
        },
        "python": {
            "packageName": "pulumiverse_talos",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            },
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/siderolabs/terraform-provider-talos)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-talos` repo](https://github.com/pulumiverse/pulumi-talos/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-talos` repo](https://github.com/siderolabs/terraform-provider-talos/issues).",
            "compatibility": "tfbridge20",
            "respectSchemaVersion": true,
            "pyproject": {
                "enabled": true
            }
        }
    },
    "config": {},
    "types": {
        "talos:client/getConfigurationClientConfiguration:getConfigurationClientConfiguration": {
            "properties": {
                "caCertificate": {
                    "type": "string",
                    "description": "The client CA certificate\n"
                },
                "clientCertificate": {
                    "type": "string",
                    "description": "The client certificate\n"
                },
                "clientKey": {
                    "type": "string",
                    "description": "The client key\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "clientCertificate",
                "clientKey"
            ]
        },
        "talos:cluster/getHealthClientConfiguration:getHealthClientConfiguration": {
            "properties": {
                "caCertificate": {
                    "type": "string",
                    "description": "The client CA certificate\n"
                },
                "clientCertificate": {
                    "type": "string",
                    "description": "The client certificate\n"
                },
                "clientKey": {
                    "type": "string",
                    "description": "The client key\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "clientCertificate",
                "clientKey"
            ]
        },
        "talos:cluster/getHealthTimeouts:getHealthTimeouts": {
            "properties": {
                "read": {
                    "type": "string",
                    "description": "A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.\n"
                }
            },
            "type": "object"
        },
        "talos:cluster/getKubeconfigClientConfiguration:getKubeconfigClientConfiguration": {
            "properties": {
                "caCertificate": {
                    "type": "string",
                    "description": "The client CA certificate\n"
                },
                "clientCertificate": {
                    "type": "string",
                    "description": "The client certificate\n"
                },
                "clientKey": {
                    "type": "string",
                    "description": "The client key\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "clientCertificate",
                "clientKey"
            ]
        },
        "talos:cluster/getKubeconfigKubernetesClientConfiguration:getKubeconfigKubernetesClientConfiguration": {
            "properties": {
                "caCertificate": {
                    "type": "string",
                    "description": "The kubernetes CA certificate\n"
                },
                "clientCertificate": {
                    "type": "string",
                    "description": "The kubernetes client certificate\n"
                },
                "clientKey": {
                    "type": "string",
                    "description": "The kubernetes client key\n",
                    "secret": true
                },
                "host": {
                    "type": "string",
                    "description": "The kubernetes host\n"
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "clientCertificate",
                "clientKey",
                "host"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "talos:cluster/getKubeconfigTimeouts:getKubeconfigTimeouts": {
            "properties": {
                "read": {
                    "type": "string",
                    "description": "A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.\n"
                }
            },
            "type": "object"
        },
        "talos:machine/BootstrapClientConfiguration:BootstrapClientConfiguration": {
            "properties": {
                "caCertificate": {
                    "type": "string",
                    "description": "The client CA certificate\n"
                },
                "clientCertificate": {
                    "type": "string",
                    "description": "The client certificate\n"
                },
                "clientKey": {
                    "type": "string",
                    "description": "The client key\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "clientCertificate",
                "clientKey"
            ]
        },
        "talos:machine/BootstrapTimeouts:BootstrapTimeouts": {
            "properties": {
                "create": {
                    "type": "string",
                    "description": "A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours).\n"
                }
            },
            "type": "object"
        },
        "talos:machine/ConfigurationApplyClientConfiguration:ConfigurationApplyClientConfiguration": {
            "properties": {
                "caCertificate": {
                    "type": "string",
                    "description": "The client CA certificate\n"
                },
                "clientCertificate": {
                    "type": "string",
                    "description": "The client certificate\n"
                },
                "clientKey": {
                    "type": "string",
                    "description": "The client key\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "clientCertificate",
                "clientKey"
            ]
        },
        "talos:machine/SecretsClientConfiguration:SecretsClientConfiguration": {
            "properties": {
                "caCertificate": {
                    "type": "string",
                    "description": "The client CA certificate\n"
                },
                "clientCertificate": {
                    "type": "string",
                    "description": "The client certificate\n"
                },
                "clientKey": {
                    "type": "string",
                    "description": "The client key\n",
                    "secret": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "caCertificate",
                        "clientCertificate",
                        "clientKey"
                    ]
                }
            }
        },
        "talos:machine/SecretsMachineSecrets:SecretsMachineSecrets": {
            "properties": {
                "certs": {
                    "$ref": "#/types/talos:machine/SecretsMachineSecretsCerts:SecretsMachineSecretsCerts"
                },
                "cluster": {
                    "$ref": "#/types/talos:machine/SecretsMachineSecretsCluster:SecretsMachineSecretsCluster",
                    "description": "The cluster secrets\n"
                },
                "secrets": {
                    "$ref": "#/types/talos:machine/SecretsMachineSecretsSecrets:SecretsMachineSecretsSecrets",
                    "description": "kubernetes cluster secrets\n"
                },
                "trustdinfo": {
                    "$ref": "#/types/talos:machine/SecretsMachineSecretsTrustdinfo:SecretsMachineSecretsTrustdinfo",
                    "description": "trustd secrets\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "certs",
                        "cluster",
                        "secrets",
                        "trustdinfo"
                    ]
                }
            }
        },
        "talos:machine/SecretsMachineSecretsCerts:SecretsMachineSecretsCerts": {
            "properties": {
                "etcd": {
                    "$ref": "#/types/talos:machine/SecretsMachineSecretsCertsEtcd:SecretsMachineSecretsCertsEtcd",
                    "description": "The certificate and key pair\n"
                },
                "k8s": {
                    "$ref": "#/types/talos:machine/SecretsMachineSecretsCertsK8s:SecretsMachineSecretsCertsK8s",
                    "description": "The certificate and key pair\n"
                },
                "k8sAggregator": {
                    "$ref": "#/types/talos:machine/SecretsMachineSecretsCertsK8sAggregator:SecretsMachineSecretsCertsK8sAggregator",
                    "description": "The certificate and key pair\n"
                },
                "k8sServiceaccount": {
                    "$ref": "#/types/talos:machine/SecretsMachineSecretsCertsK8sServiceaccount:SecretsMachineSecretsCertsK8sServiceaccount",
                    "description": "The service account secrets\n"
                },
                "os": {
                    "$ref": "#/types/talos:machine/SecretsMachineSecretsCertsOs:SecretsMachineSecretsCertsOs",
                    "description": "The certificate and key pair\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "etcd",
                        "k8s",
                        "k8sAggregator",
                        "k8sServiceaccount",
                        "os"
                    ]
                }
            }
        },
        "talos:machine/SecretsMachineSecretsCertsEtcd:SecretsMachineSecretsCertsEtcd": {
            "properties": {
                "cert": {
                    "type": "string",
                    "description": "certificate data\n"
                },
                "key": {
                    "type": "string",
                    "description": "key data\n",
                    "secret": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cert",
                        "key"
                    ]
                }
            }
        },
        "talos:machine/SecretsMachineSecretsCertsK8s:SecretsMachineSecretsCertsK8s": {
            "properties": {
                "cert": {
                    "type": "string",
                    "description": "certificate data\n"
                },
                "key": {
                    "type": "string",
                    "description": "key data\n",
                    "secret": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cert",
                        "key"
                    ]
                }
            }
        },
        "talos:machine/SecretsMachineSecretsCertsK8sAggregator:SecretsMachineSecretsCertsK8sAggregator": {
            "properties": {
                "cert": {
                    "type": "string",
                    "description": "certificate data\n"
                },
                "key": {
                    "type": "string",
                    "description": "key data\n",
                    "secret": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cert",
                        "key"
                    ]
                }
            }
        },
        "talos:machine/SecretsMachineSecretsCertsK8sServiceaccount:SecretsMachineSecretsCertsK8sServiceaccount": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The service account key\n",
                    "secret": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "key"
                    ]
                }
            }
        },
        "talos:machine/SecretsMachineSecretsCertsOs:SecretsMachineSecretsCertsOs": {
            "properties": {
                "cert": {
                    "type": "string",
                    "description": "certificate data\n"
                },
                "key": {
                    "type": "string",
                    "description": "key data\n",
                    "secret": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cert",
                        "key"
                    ]
                }
            }
        },
        "talos:machine/SecretsMachineSecretsCluster:SecretsMachineSecretsCluster": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The cluster ID\n"
                },
                "secret": {
                    "type": "string",
                    "description": "The cluster secret\n",
                    "secret": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "secret"
                    ]
                }
            }
        },
        "talos:machine/SecretsMachineSecretsSecrets:SecretsMachineSecretsSecrets": {
            "properties": {
                "aescbcEncryptionSecret": {
                    "type": "string",
                    "description": "The AES-CBC encryption secret\n",
                    "secret": true
                },
                "bootstrapToken": {
                    "type": "string",
                    "description": "The bootstrap token\n",
                    "secret": true
                },
                "secretboxEncryptionSecret": {
                    "type": "string",
                    "description": "The secretbox encryption secret\n",
                    "secret": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "aescbcEncryptionSecret",
                        "bootstrapToken",
                        "secretboxEncryptionSecret"
                    ]
                }
            }
        },
        "talos:machine/SecretsMachineSecretsTrustdinfo:SecretsMachineSecretsTrustdinfo": {
            "properties": {
                "token": {
                    "type": "string",
                    "description": "The trustd token\n",
                    "secret": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "token"
                    ]
                }
            }
        },
        "talos:machine/Timeout:Timeout": {
            "properties": {
                "create": {
                    "type": "string",
                    "description": "A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours).\n"
                },
                "update": {
                    "type": "string",
                    "description": "A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours).\n"
                }
            },
            "type": "object"
        },
        "talos:machine/generated:Certificate": {
            "description": "A Machine Secrets Certificate",
            "properties": {
                "cert": {
                    "type": "string",
                    "description": "Certificate"
                },
                "key": {
                    "type": "string",
                    "description": "Private Key",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "cert",
                "key"
            ]
        },
        "talos:machine/generated:Certificates": {
            "description": "A complete Machine Secrets Certificates configuration",
            "properties": {
                "etcd": {
                    "$ref": "#types/talos:machine/generated:Certificate"
                },
                "k8s": {
                    "$ref": "#types/talos:machine/generated:Certificate"
                },
                "k8sAggregator": {
                    "$ref": "#types/talos:machine/generated:Certificate"
                },
                "k8sServiceaccount": {
                    "$ref": "#types/talos:machine/generated:Key"
                },
                "os": {
                    "$ref": "#types/talos:machine/generated:Certificate"
                }
            },
            "type": "object",
            "required": [
                "etcd",
                "k8s",
                "k8sAggregator",
                "k8sServiceaccount",
                "os"
            ]
        },
        "talos:machine/generated:ClientConfiguration": {
            "description": "A Client Configuration",
            "properties": {
                "caCertificate": {
                    "type": "string",
                    "description": "The client CA certificate"
                },
                "clientCertificate": {
                    "type": "string",
                    "description": "The client certificate"
                },
                "clientKey": {
                    "type": "string",
                    "description": "The client private key",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "clientCertificate",
                "clientKey"
            ]
        },
        "talos:machine/generated:Cluster": {
            "description": "A Machine Secrets Cluster Info",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Certificate"
                },
                "secret": {
                    "type": "string",
                    "description": "Private Key",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "id",
                "secret"
            ]
        },
        "talos:machine/generated:Key": {
            "description": "A Machine Secrets Private Key",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Private Key",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "talos:machine/generated:KubernetesSecrets": {
            "description": "A Machine Secrets Bootstrap data",
            "properties": {
                "aescbcEncryptionSecret": {
                    "type": "string",
                    "description": "The aescbc encryption secret for the talos kubernetes cluster",
                    "secret": true
                },
                "bootstrapToken": {
                    "type": "string",
                    "description": "The bootstrap token for the talos kubernetes cluster",
                    "secret": true
                },
                "secretboxEncryptionSecret": {
                    "type": "string",
                    "description": "The secretbox encryption secret for the talos kubernetes cluster",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "bootstrapToken",
                "secretboxEncryptionSecret"
            ]
        },
        "talos:machine/generated:MachineSecrets": {
            "description": "A complete Machine Secrets configuration",
            "properties": {
                "certs": {
                    "$ref": "#types/talos:machine/generated:Certificates"
                },
                "cluster": {
                    "$ref": "#types/talos:machine/generated:Cluster"
                },
                "secrets": {
                    "$ref": "#types/talos:machine/generated:KubernetesSecrets"
                },
                "trustdinfo": {
                    "$ref": "#types/talos:machine/generated:TrustdInfo"
                }
            },
            "type": "object",
            "required": [
                "certs",
                "cluster",
                "secrets",
                "trustdinfo"
            ]
        },
        "talos:machine/generated:TrustdInfo": {
            "description": "A Machine Secrets Trust daemon info",
            "properties": {
                "token": {
                    "type": "string",
                    "description": "The trustd token for the talos kubernetes cluster",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "token"
            ]
        },
        "talos:machine/getConfigurationMachineSecrets:getConfigurationMachineSecrets": {
            "properties": {
                "certs": {
                    "$ref": "#/types/talos:machine/getConfigurationMachineSecretsCerts:getConfigurationMachineSecretsCerts",
                    "description": "The certs for the talos kubernetes cluster\n"
                },
                "cluster": {
                    "$ref": "#/types/talos:machine/getConfigurationMachineSecretsCluster:getConfigurationMachineSecretsCluster",
                    "description": "The cluster secrets\n"
                },
                "secrets": {
                    "$ref": "#/types/talos:machine/getConfigurationMachineSecretsSecrets:getConfigurationMachineSecretsSecrets",
                    "description": "The secrets for the talos kubernetes cluster\n"
                },
                "trustdinfo": {
                    "$ref": "#/types/talos:machine/getConfigurationMachineSecretsTrustdinfo:getConfigurationMachineSecretsTrustdinfo",
                    "description": "The trustd info for the talos kubernetes cluster\n"
                }
            },
            "type": "object",
            "required": [
                "certs",
                "cluster",
                "secrets",
                "trustdinfo"
            ]
        },
        "talos:machine/getConfigurationMachineSecretsCerts:getConfigurationMachineSecretsCerts": {
            "properties": {
                "etcd": {
                    "$ref": "#/types/talos:machine/getConfigurationMachineSecretsCertsEtcd:getConfigurationMachineSecretsCertsEtcd",
                    "description": "The certificate and key pair\n"
                },
                "k8s": {
                    "$ref": "#/types/talos:machine/getConfigurationMachineSecretsCertsK8s:getConfigurationMachineSecretsCertsK8s",
                    "description": "The certificate and key pair\n"
                },
                "k8sAggregator": {
                    "$ref": "#/types/talos:machine/getConfigurationMachineSecretsCertsK8sAggregator:getConfigurationMachineSecretsCertsK8sAggregator",
                    "description": "The certificate and key pair\n"
                },
                "k8sServiceaccount": {
                    "$ref": "#/types/talos:machine/getConfigurationMachineSecretsCertsK8sServiceaccount:getConfigurationMachineSecretsCertsK8sServiceaccount"
                },
                "os": {
                    "$ref": "#/types/talos:machine/getConfigurationMachineSecretsCertsOs:getConfigurationMachineSecretsCertsOs",
                    "description": "The certificate and key pair\n"
                }
            },
            "type": "object",
            "required": [
                "etcd",
                "k8s",
                "k8sAggregator",
                "k8sServiceaccount",
                "os"
            ]
        },
        "talos:machine/getConfigurationMachineSecretsCertsEtcd:getConfigurationMachineSecretsCertsEtcd": {
            "properties": {
                "cert": {
                    "type": "string",
                    "description": "certificate data\n"
                },
                "key": {
                    "type": "string",
                    "description": "key data\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "cert",
                "key"
            ]
        },
        "talos:machine/getConfigurationMachineSecretsCertsK8s:getConfigurationMachineSecretsCertsK8s": {
            "properties": {
                "cert": {
                    "type": "string",
                    "description": "certificate data\n"
                },
                "key": {
                    "type": "string",
                    "description": "key data\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "cert",
                "key"
            ]
        },
        "talos:machine/getConfigurationMachineSecretsCertsK8sAggregator:getConfigurationMachineSecretsCertsK8sAggregator": {
            "properties": {
                "cert": {
                    "type": "string",
                    "description": "certificate data\n"
                },
                "key": {
                    "type": "string",
                    "description": "key data\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "cert",
                "key"
            ]
        },
        "talos:machine/getConfigurationMachineSecretsCertsK8sServiceaccount:getConfigurationMachineSecretsCertsK8sServiceaccount": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key for the k8s service account\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "talos:machine/getConfigurationMachineSecretsCertsOs:getConfigurationMachineSecretsCertsOs": {
            "properties": {
                "cert": {
                    "type": "string",
                    "description": "certificate data\n"
                },
                "key": {
                    "type": "string",
                    "description": "key data\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "cert",
                "key"
            ]
        },
        "talos:machine/getConfigurationMachineSecretsCluster:getConfigurationMachineSecretsCluster": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The cluster id\n"
                },
                "secret": {
                    "type": "string",
                    "description": "The cluster secret\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "id",
                "secret"
            ]
        },
        "talos:machine/getConfigurationMachineSecretsSecrets:getConfigurationMachineSecretsSecrets": {
            "properties": {
                "aescbcEncryptionSecret": {
                    "type": "string",
                    "description": "The aescbc encryption secret for the talos kubernetes cluster\n",
                    "secret": true
                },
                "bootstrapToken": {
                    "type": "string",
                    "description": "The bootstrap token for the talos kubernetes cluster\n",
                    "secret": true
                },
                "secretboxEncryptionSecret": {
                    "type": "string",
                    "description": "The secretbox encryption secret for the talos kubernetes cluster\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "bootstrapToken",
                "secretboxEncryptionSecret"
            ]
        },
        "talos:machine/getConfigurationMachineSecretsTrustdinfo:getConfigurationMachineSecretsTrustdinfo": {
            "properties": {
                "token": {
                    "type": "string",
                    "description": "The trustd token for the talos kubernetes cluster\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "token"
            ]
        },
        "talos:machine/getDisksClientConfiguration:getDisksClientConfiguration": {
            "properties": {
                "caCertificate": {
                    "type": "string",
                    "description": "The client CA certificate\n"
                },
                "clientCertificate": {
                    "type": "string",
                    "description": "The client certificate\n"
                },
                "clientKey": {
                    "type": "string",
                    "description": "The client key\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "clientCertificate",
                "clientKey"
            ]
        },
        "talos:machine/getDisksDisk:getDisksDisk": {
            "properties": {
                "busPath": {
                    "type": "string",
                    "description": "The bus path of the disk\n"
                },
                "modalias": {
                    "type": "string",
                    "description": "The modalias of the disk\n"
                },
                "model": {
                    "type": "string",
                    "description": "The model of the disk\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the disk\n"
                },
                "serial": {
                    "type": "string",
                    "description": "The serial number of the disk\n"
                },
                "size": {
                    "type": "string",
                    "description": "The size of the disk\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the disk\n"
                },
                "uuid": {
                    "type": "string",
                    "description": "The uuid of the disk\n"
                },
                "wwid": {
                    "type": "string",
                    "description": "The wwid of the disk\n"
                }
            },
            "type": "object",
            "required": [
                "busPath",
                "modalias",
                "model",
                "name",
                "serial",
                "size",
                "type",
                "uuid",
                "wwid"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "talos:machine/getDisksFilters:getDisksFilters": {
            "properties": {
                "busPath": {
                    "type": "string",
                    "description": "Filter disks by bus path\n"
                },
                "modalias": {
                    "type": "string",
                    "description": "Filter disks by modalias\n"
                },
                "model": {
                    "type": "string",
                    "description": "Filter disks by model\n"
                },
                "name": {
                    "type": "string",
                    "description": "Filter disks by name\n"
                },
                "serial": {
                    "type": "string",
                    "description": "Filter disks by serial number\n"
                },
                "size": {
                    "type": "string",
                    "description": "Filter disks by size\n"
                },
                "type": {
                    "type": "string",
                    "description": "Filter disks by type\n"
                },
                "uuid": {
                    "type": "string",
                    "description": "Filter disks by uuid\n"
                },
                "wwid": {
                    "type": "string",
                    "description": "Filter disks by wwid\n"
                }
            },
            "type": "object"
        },
        "talos:machine/getDisksTimeouts:getDisksTimeouts": {
            "properties": {
                "read": {
                    "type": "string",
                    "description": "A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.\n"
                }
            },
            "type": "object"
        }
    },
    "provider": {
        "description": "The provider type for the talos package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n"
    },
    "resources": {
        "talos:machine/bootstrap:Bootstrap": {
            "description": "The machine bootstrap resource allows you to bootstrap a Talos node.\n\n## Import\n\nterraform\n\nmachine bootstrap can be imported to let terraform know that the machine is already bootstrapped\n\n```sh\n$ pulumi import talos:machine/bootstrap:Bootstrap this \u003cany id\u003e\n```\n\n",
            "properties": {
                "clientConfiguration": {
                    "$ref": "#/types/talos:machine/generated:ClientConfiguration",
                    "description": "The client configuration data\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "The endpoint of the machine to bootstrap\n"
                },
                "node": {
                    "type": "string",
                    "description": "The name of the node to bootstrap\n"
                },
                "timeouts": {
                    "$ref": "#/types/talos:machine/BootstrapTimeouts:BootstrapTimeouts"
                }
            },
            "required": [
                "clientConfiguration",
                "endpoint",
                "node"
            ],
            "inputProperties": {
                "clientConfiguration": {
                    "$ref": "#/types/talos:machine/generated:ClientConfiguration",
                    "description": "The client configuration data\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "The endpoint of the machine to bootstrap\n"
                },
                "node": {
                    "type": "string",
                    "description": "The name of the node to bootstrap\n"
                },
                "timeouts": {
                    "$ref": "#/types/talos:machine/BootstrapTimeouts:BootstrapTimeouts"
                }
            },
            "requiredInputs": [
                "clientConfiguration",
                "node"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Bootstrap resources.\n",
                "properties": {
                    "clientConfiguration": {
                        "$ref": "#/types/talos:machine/generated:ClientConfiguration",
                        "description": "The client configuration data\n"
                    },
                    "endpoint": {
                        "type": "string",
                        "description": "The endpoint of the machine to bootstrap\n"
                    },
                    "node": {
                        "type": "string",
                        "description": "The name of the node to bootstrap\n"
                    },
                    "timeouts": {
                        "$ref": "#/types/talos:machine/BootstrapTimeouts:BootstrapTimeouts"
                    }
                },
                "type": "object"
            }
        },
        "talos:machine/configurationApply:ConfigurationApply": {
            "description": "The machine configuration apply resource allows to apply machine configuration to a node\n\n",
            "properties": {
                "applyMode": {
                    "type": "string",
                    "description": "The mode of the apply operation\n"
                },
                "clientConfiguration": {
                    "$ref": "#/types/talos:machine/generated:ClientConfiguration",
                    "description": "The client configuration data\n"
                },
                "configPatches": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of config patches to apply\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "The endpoint of the machine to bootstrap\n"
                },
                "machineConfiguration": {
                    "type": "string",
                    "description": "The generated machine configuration after applying patches\n",
                    "secret": true
                },
                "machineConfigurationInput": {
                    "type": "string",
                    "description": "The machine configuration to apply\n",
                    "secret": true
                },
                "node": {
                    "type": "string",
                    "description": "The name of the node to bootstrap\n"
                },
                "timeouts": {
                    "$ref": "#/types/talos:machine/Timeout:Timeout"
                }
            },
            "required": [
                "applyMode",
                "clientConfiguration",
                "endpoint",
                "machineConfiguration",
                "machineConfigurationInput",
                "node"
            ],
            "inputProperties": {
                "applyMode": {
                    "type": "string",
                    "description": "The mode of the apply operation\n"
                },
                "clientConfiguration": {
                    "$ref": "#/types/talos:machine/generated:ClientConfiguration",
                    "description": "The client configuration data\n"
                },
                "configPatches": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of config patches to apply\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "The endpoint of the machine to bootstrap\n"
                },
                "machineConfigurationInput": {
                    "type": "string",
                    "description": "The machine configuration to apply\n",
                    "secret": true
                },
                "node": {
                    "type": "string",
                    "description": "The name of the node to bootstrap\n"
                },
                "timeouts": {
                    "$ref": "#/types/talos:machine/Timeout:Timeout"
                }
            },
            "requiredInputs": [
                "clientConfiguration",
                "machineConfigurationInput",
                "node"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ConfigurationApply resources.\n",
                "properties": {
                    "applyMode": {
                        "type": "string",
                        "description": "The mode of the apply operation\n"
                    },
                    "clientConfiguration": {
                        "$ref": "#/types/talos:machine/generated:ClientConfiguration",
                        "description": "The client configuration data\n"
                    },
                    "configPatches": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of config patches to apply\n"
                    },
                    "endpoint": {
                        "type": "string",
                        "description": "The endpoint of the machine to bootstrap\n"
                    },
                    "machineConfiguration": {
                        "type": "string",
                        "description": "The generated machine configuration after applying patches\n",
                        "secret": true
                    },
                    "machineConfigurationInput": {
                        "type": "string",
                        "description": "The machine configuration to apply\n",
                        "secret": true
                    },
                    "node": {
                        "type": "string",
                        "description": "The name of the node to bootstrap\n"
                    },
                    "timeouts": {
                        "$ref": "#/types/talos:machine/Timeout:Timeout"
                    }
                },
                "type": "object"
            }
        },
        "talos:machine/secrets:Secrets": {
            "description": "Generate machine secrets for Talos cluster.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as talos from \"@pulumiverse/talos\";\n\nconst machineSecrets = new talos.machine.Secrets(\"machine_secrets\", {});\n```\n```python\nimport pulumi\nimport pulumiverse_talos as talos\n\nmachine_secrets = talos.machine.Secrets(\"machine_secrets\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Talos = Pulumiverse.Talos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var machineSecrets = new Talos.Machine.Secrets(\"machine_secrets\");\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-talos/sdk/go/talos/machine\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := machine.NewSecrets(ctx, \"machine_secrets\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.talos.machine.Secrets;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var machineSecrets = new Secrets(\"machineSecrets\");\n\n    }\n}\n```\n```yaml\nresources:\n  machineSecrets:\n    type: talos:machine:Secrets\n    name: machine_secrets\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nterraform\n\nmachine secrets can be imported from an existing secrets file\n\n```sh\n$ pulumi import talos:machine/secrets:Secrets this \u003cpath-to-secrets.yaml\u003e\n```\n\n",
            "properties": {
                "clientConfiguration": {
                    "$ref": "#/types/talos:machine/generated:ClientConfiguration",
                    "description": "The generated client configuration data\n"
                },
                "machineSecrets": {
                    "$ref": "#/types/talos:machine/generated:MachineSecrets",
                    "description": "The secrets for the talos cluster\n"
                },
                "talosVersion": {
                    "type": "string",
                    "description": "The version of talos features to use in generated machine configuration\n"
                }
            },
            "required": [
                "clientConfiguration",
                "machineSecrets",
                "talosVersion"
            ],
            "inputProperties": {
                "talosVersion": {
                    "type": "string",
                    "description": "The version of talos features to use in generated machine configuration\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Secrets resources.\n",
                "properties": {
                    "clientConfiguration": {
                        "$ref": "#/types/talos:machine/generated:ClientConfiguration",
                        "description": "The generated client configuration data\n"
                    },
                    "machineSecrets": {
                        "$ref": "#/types/talos:machine/generated:MachineSecrets",
                        "description": "The secrets for the talos cluster\n"
                    },
                    "talosVersion": {
                        "type": "string",
                        "description": "The version of talos features to use in generated machine configuration\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "talos:client/getConfiguration:getConfiguration": {
            "description": "Generate client configuration for a Talos cluster\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as talos from \"@pulumi/talos\";\nimport * as talos from \"@pulumiverse/talos\";\n\nconst thisSecrets = new talos.machine.Secrets(\"this\", {});\nconst this = talos.client.getConfigurationOutput({\n    clusterName: \"example-cluster\",\n    clientConfiguration: thisSecrets.clientConfiguration,\n    nodes: [\"10.5.0.2\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_talos as talos\nimport pulumiverse_talos as talos\n\nthis_secrets = talos.machine.Secrets(\"this\")\nthis = talos.client.get_configuration_output(cluster_name=\"example-cluster\",\n    client_configuration=this_secrets.client_configuration,\n    nodes=[\"10.5.0.2\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Talos = Pulumi.Talos;\nusing Talos = Pulumiverse.Talos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var thisSecrets = new Talos.Machine.Secrets(\"this\");\n\n    var @this = Talos.Client.GetConfiguration.Invoke(new()\n    {\n        ClusterName = \"example-cluster\",\n        ClientConfiguration = thisSecrets.ClientConfiguration,\n        Nodes = new[]\n        {\n            \"10.5.0.2\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-talos/sdk/go/talos/client\"\n\t\"github.com/pulumiverse/pulumi-talos/sdk/go/talos/machine\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tthisSecrets, err := machine.NewSecrets(ctx, \"this\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_ = client.GetConfigurationOutput(ctx, client.GetConfigurationOutputArgs{\n\t\t\tClusterName:         pulumi.String(\"example-cluster\"),\n\t\t\tClientConfiguration: thisSecrets.ClientConfiguration,\n\t\t\tNodes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"10.5.0.2\"),\n\t\t\t},\n\t\t}, nil)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.talos.machine.Secrets;\nimport com.pulumi.talos.client.ClientFunctions;\nimport com.pulumi.talos.client.inputs.GetConfigurationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var thisSecrets = new Secrets(\"thisSecrets\");\n\n        final var this = ClientFunctions.getConfiguration(GetConfigurationArgs.builder()\n            .clusterName(\"example-cluster\")\n            .clientConfiguration(thisSecrets.clientConfiguration())\n            .nodes(\"10.5.0.2\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  thisSecrets:\n    type: talos:machine:Secrets\n    name: this\nvariables:\n  this:\n    fn::invoke:\n      Function: talos:client:getConfiguration\n      Arguments:\n        clusterName: example-cluster\n        clientConfiguration: ${thisSecrets.clientConfiguration}\n        nodes:\n          - 10.5.0.2\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getConfiguration.\n",
                "properties": {
                    "clientConfiguration": {
                        "$ref": "#/types/talos:client/getConfigurationClientConfiguration:getConfigurationClientConfiguration",
                        "description": "The client configuration data\n"
                    },
                    "clusterName": {
                        "type": "string",
                        "description": "The name of the cluster in the generated config\n"
                    },
                    "endpoints": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "endpoints to set in the generated config\n"
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "nodes to set in the generated config\n"
                    }
                },
                "type": "object",
                "required": [
                    "clientConfiguration",
                    "clusterName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getConfiguration.\n",
                "properties": {
                    "clientConfiguration": {
                        "$ref": "#/types/talos:client/getConfigurationClientConfiguration:getConfigurationClientConfiguration",
                        "description": "The client configuration data\n"
                    },
                    "clusterName": {
                        "description": "The name of the cluster in the generated config\n",
                        "type": "string"
                    },
                    "endpoints": {
                        "description": "endpoints to set in the generated config\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The ID of this resource\n",
                        "type": "string"
                    },
                    "nodes": {
                        "description": "nodes to set in the generated config\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "talosConfig": {
                        "description": "The generated client configuration\n",
                        "secret": true,
                        "type": "string"
                    }
                },
                "required": [
                    "clientConfiguration",
                    "clusterName",
                    "id",
                    "talosConfig"
                ],
                "type": "object"
            }
        },
        "talos:cluster/getHealth:getHealth": {
            "description": "Checks the health of a Talos cluster\n",
            "inputs": {
                "description": "A collection of arguments for invoking getHealth.\n",
                "properties": {
                    "clientConfiguration": {
                        "$ref": "#/types/talos:cluster/getHealthClientConfiguration:getHealthClientConfiguration",
                        "description": "The client configuration data\n"
                    },
                    "controlPlaneNodes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of control plane nodes to check for health.\n"
                    },
                    "endpoints": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "endpoints to use for the health check client. Use at least one control plane endpoint.\n"
                    },
                    "timeouts": {
                        "$ref": "#/types/talos:cluster/getHealthTimeouts:getHealthTimeouts"
                    },
                    "workerNodes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of worker nodes to check for health.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clientConfiguration",
                    "controlPlaneNodes",
                    "endpoints"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getHealth.\n",
                "properties": {
                    "clientConfiguration": {
                        "$ref": "#/types/talos:cluster/getHealthClientConfiguration:getHealthClientConfiguration",
                        "description": "The client configuration data\n"
                    },
                    "controlPlaneNodes": {
                        "description": "List of control plane nodes to check for health.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "endpoints": {
                        "description": "endpoints to use for the health check client. Use at least one control plane endpoint.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The ID of this resource.\n",
                        "type": "string"
                    },
                    "timeouts": {
                        "$ref": "#/types/talos:cluster/getHealthTimeouts:getHealthTimeouts"
                    },
                    "workerNodes": {
                        "description": "List of worker nodes to check for health.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "clientConfiguration",
                    "controlPlaneNodes",
                    "endpoints",
                    "id"
                ],
                "type": "object"
            }
        },
        "talos:cluster/getKubeconfig:getKubeconfig": {
            "description": "Retrieves the kubeconfig for a Talos cluster\n\n",
            "inputs": {
                "description": "A collection of arguments for invoking getKubeconfig.\n",
                "properties": {
                    "clientConfiguration": {
                        "$ref": "#/types/talos:cluster/getKubeconfigClientConfiguration:getKubeconfigClientConfiguration",
                        "description": "The client configuration data\n"
                    },
                    "endpoint": {
                        "type": "string",
                        "description": "endpoint to use for the talosclient. If not set, the node value will be used\n"
                    },
                    "node": {
                        "type": "string",
                        "description": "controlplane node to retrieve the kubeconfig from\n"
                    },
                    "timeouts": {
                        "$ref": "#/types/talos:cluster/getKubeconfigTimeouts:getKubeconfigTimeouts"
                    },
                    "wait": {
                        "type": "boolean",
                        "description": "Wait for the kubernetes api to be available\n",
                        "deprecationMessage": "This attribute is deprecated and no-op. Will be removed in a future version. Use talos.cluster.getHealth instead."
                    }
                },
                "type": "object",
                "required": [
                    "clientConfiguration",
                    "node"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKubeconfig.\n",
                "properties": {
                    "clientConfiguration": {
                        "$ref": "#/types/talos:cluster/getKubeconfigClientConfiguration:getKubeconfigClientConfiguration",
                        "description": "The client configuration data\n"
                    },
                    "endpoint": {
                        "description": "endpoint to use for the talosclient. If not set, the node value will be used\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID of this resource.\n",
                        "type": "string"
                    },
                    "kubeconfigRaw": {
                        "description": "The raw kubeconfig\n",
                        "secret": true,
                        "type": "string"
                    },
                    "kubernetesClientConfiguration": {
                        "$ref": "#/types/talos:cluster/getKubeconfigKubernetesClientConfiguration:getKubeconfigKubernetesClientConfiguration",
                        "description": "The kubernetes client configuration\n"
                    },
                    "node": {
                        "description": "controlplane node to retrieve the kubeconfig from\n",
                        "type": "string"
                    },
                    "timeouts": {
                        "$ref": "#/types/talos:cluster/getKubeconfigTimeouts:getKubeconfigTimeouts"
                    },
                    "wait": {
                        "deprecationMessage": "This attribute is deprecated and no-op. Will be removed in a future version. Use talos.cluster.getHealth instead.",
                        "description": "Wait for the kubernetes api to be available\n",
                        "type": "boolean"
                    }
                },
                "required": [
                    "clientConfiguration",
                    "endpoint",
                    "id",
                    "kubeconfigRaw",
                    "kubernetesClientConfiguration",
                    "node"
                ],
                "type": "object"
            }
        },
        "talos:machine/getConfiguration:getConfiguration": {
            "description": "Generate a machine configuration for a node type\n\n\u003e **Note:** It is recommended to set the optional `talos_version` attribute. Otherwise when using a new version of the provider with a new major version of the Talos SDK, new machineconfig features will be enabled by default which could cause unexpected behavior.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as talos from \"@pulumi/talos\";\nimport * as talos from \"@pulumiverse/talos\";\n\nconst thisSecrets = new talos.machine.Secrets(\"this\", {});\nconst this = talos.machine.getConfigurationOutput({\n    clusterName: \"example-cluster\",\n    machineType: \"controlplane\",\n    clusterEndpoint: \"https://cluster.local:6443\",\n    machineSecrets: thisSecrets.machineSecrets,\n});\n```\n```python\nimport pulumi\nimport pulumi_talos as talos\nimport pulumiverse_talos as talos\n\nthis_secrets = talos.machine.Secrets(\"this\")\nthis = talos.machine.get_configuration_output(cluster_name=\"example-cluster\",\n    machine_type=\"controlplane\",\n    cluster_endpoint=\"https://cluster.local:6443\",\n    machine_secrets=this_secrets.machine_secrets)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Talos = Pulumi.Talos;\nusing Talos = Pulumiverse.Talos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var thisSecrets = new Talos.Machine.Secrets(\"this\");\n\n    var @this = Talos.Machine.GetConfiguration.Invoke(new()\n    {\n        ClusterName = \"example-cluster\",\n        MachineType = \"controlplane\",\n        ClusterEndpoint = \"https://cluster.local:6443\",\n        MachineSecrets = thisSecrets.MachineSecrets,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-talos/sdk/go/talos/machine\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tthisSecrets, err := machine.NewSecrets(ctx, \"this\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_ = machine.GetConfigurationOutput(ctx, machine.GetConfigurationOutputArgs{\n\t\t\tClusterName:     pulumi.String(\"example-cluster\"),\n\t\t\tMachineType:     pulumi.String(\"controlplane\"),\n\t\t\tClusterEndpoint: pulumi.String(\"https://cluster.local:6443\"),\n\t\t\tMachineSecrets:  thisSecrets.MachineSecrets,\n\t\t}, nil)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.talos.machine.Secrets;\nimport com.pulumi.talos.machine.MachineFunctions;\nimport com.pulumi.talos.machine.inputs.GetConfigurationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var thisSecrets = new Secrets(\"thisSecrets\");\n\n        final var this = MachineFunctions.getConfiguration(GetConfigurationArgs.builder()\n            .clusterName(\"example-cluster\")\n            .machineType(\"controlplane\")\n            .clusterEndpoint(\"https://cluster.local:6443\")\n            .machineSecrets(thisSecrets.machineSecrets())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  thisSecrets:\n    type: talos:machine:Secrets\n    name: this\nvariables:\n  this:\n    fn::invoke:\n      Function: talos:machine:getConfiguration\n      Arguments:\n        clusterName: example-cluster\n        machineType: controlplane\n        clusterEndpoint: https://cluster.local:6443\n        machineSecrets: ${thisSecrets.machineSecrets}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getConfiguration.\n",
                "properties": {
                    "clusterEndpoint": {
                        "type": "string",
                        "description": "The endpoint of the talos kubernetes cluster\n"
                    },
                    "clusterName": {
                        "type": "string",
                        "description": "The name of the talos kubernetes cluster\n"
                    },
                    "configPatches": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of config patches to apply to the generated configuration\n"
                    },
                    "docs": {
                        "type": "boolean",
                        "description": "Whether to generate documentation for the generated configuration\n"
                    },
                    "examples": {
                        "type": "boolean",
                        "description": "Whether to generate examples for the generated configuration\n"
                    },
                    "kubernetesVersion": {
                        "type": "string",
                        "description": "The version of kubernetes to use\n"
                    },
                    "machineSecrets": {
                        "$ref": "#/types/talos:machine/generated:MachineSecrets",
                        "description": "The secrets for the talos cluster\n"
                    },
                    "machineType": {
                        "type": "string",
                        "description": "The type of machine to generate the configuration for\n"
                    },
                    "talosVersion": {
                        "type": "string",
                        "description": "The version of talos features to use in generated machine configuration\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterEndpoint",
                    "clusterName",
                    "machineSecrets",
                    "machineType"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getConfiguration.\n",
                "properties": {
                    "clusterEndpoint": {
                        "description": "The endpoint of the talos kubernetes cluster\n",
                        "type": "string"
                    },
                    "clusterName": {
                        "description": "The name of the talos kubernetes cluster\n",
                        "type": "string"
                    },
                    "configPatches": {
                        "description": "The list of config patches to apply to the generated configuration\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "docs": {
                        "description": "Whether to generate documentation for the generated configuration\n",
                        "type": "boolean"
                    },
                    "examples": {
                        "description": "Whether to generate examples for the generated configuration\n",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "The ID of this resource.\n",
                        "type": "string"
                    },
                    "kubernetesVersion": {
                        "description": "The version of kubernetes to use\n",
                        "type": "string"
                    },
                    "machineConfiguration": {
                        "description": "The generated machine configuration\n",
                        "secret": true,
                        "type": "string"
                    },
                    "machineSecrets": {
                        "$ref": "#/types/talos:machine/generated:MachineSecrets",
                        "description": "The secrets for the talos cluster\n"
                    },
                    "machineType": {
                        "description": "The type of machine to generate the configuration for\n",
                        "type": "string"
                    },
                    "talosVersion": {
                        "description": "The version of talos features to use in generated machine configuration\n",
                        "type": "string"
                    }
                },
                "required": [
                    "clusterEndpoint",
                    "clusterName",
                    "id",
                    "machineConfiguration",
                    "machineSecrets",
                    "machineType"
                ],
                "type": "object"
            }
        },
        "talos:machine/getDisks:getDisks": {
            "description": "Generate a machine configuration for a node type\n\n\u003e **Note:** Since Talos natively supports `.machine.install.diskSelector`, the `talos.machine.getDisks` data source maybe just used to query disk information that could be used elsewhere. It's recommended to use `machine.install.diskSelector` in Talos machine configuration.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as talos from \"@pulumi/talos\";\nimport * as talos from \"@pulumiverse/talos\";\n\nconst thisSecrets = new talos.machine.Secrets(\"this\", {});\nconst this = talos.machine.getDisksOutput({\n    clientConfiguration: thisSecrets.clientConfiguration,\n    node: \"10.5.0.2\",\n    filters: {\n        size: \"\u003e 100GB\",\n        type: \"nvme\",\n    },\n});\nexport const nvmeDisks = _this.apply(_this =\u003e _this.disks.map(__item =\u003e __item.name));\n```\n```python\nimport pulumi\nimport pulumi_talos as talos\nimport pulumiverse_talos as talos\n\nthis_secrets = talos.machine.Secrets(\"this\")\nthis = talos.machine.get_disks_output(client_configuration=this_secrets.client_configuration,\n    node=\"10.5.0.2\",\n    filters={\n        \"size\": \"\u003e 100GB\",\n        \"type\": \"nvme\",\n    })\npulumi.export(\"nvmeDisks\", this.apply(lambda this: [__item.name for __item in this.disks]))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Talos = Pulumi.Talos;\nusing Talos = Pulumiverse.Talos;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var thisSecrets = new Talos.Machine.Secrets(\"this\");\n\n    var @this = Talos.Machine.GetDisks.Invoke(new()\n    {\n        ClientConfiguration = thisSecrets.ClientConfiguration,\n        Node = \"10.5.0.2\",\n        Filters = new Talos.Machine.Inputs.GetDisksFiltersInputArgs\n        {\n            Size = \"\u003e 100GB\",\n            Type = \"nvme\",\n        },\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"nvmeDisks\"] = @this.Apply(@this =\u003e @this.Apply(getDisksResult =\u003e getDisksResult.Disks).Select(__item =\u003e __item.Name).ToList()),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-talos/sdk/go/talos/machine\"\n)\nfunc main() {\npulumi.Run(func(ctx *pulumi.Context) error {\nthisSecrets, err := machine.NewSecrets(ctx, \"this\", nil)\nif err != nil {\nreturn err\n}\nthis := machine.GetDisksOutput(ctx, machine.GetDisksOutputArgs{\nClientConfiguration: thisSecrets.ClientConfiguration,\nNode: pulumi.String(\"10.5.0.2\"),\nFilters: \u0026machine.GetDisksFiltersArgs{\nSize: pulumi.String(\"\u003e 100GB\"),\nType: pulumi.String(\"nvme\"),\n},\n}, nil);\nctx.Export(\"nvmeDisks\", this.ApplyT(func(this machine.GetDisksResult) ([]*string, error) {\nvar splat0 []*string\nfor _, val0 := range this.Disks {\nsplat0 = append(splat0, val0.Name)\n}\nreturn splat0, nil\n}).(pulumi.[]*stringOutput))\nreturn nil\n})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.talos.machine.Secrets;\nimport com.pulumi.talos.machine.MachineFunctions;\nimport com.pulumi.talos.machine.inputs.GetDisksArgs;\nimport com.pulumi.talos.machine.inputs.GetDisksFiltersArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var thisSecrets = new Secrets(\"thisSecrets\");\n\n        final var this = MachineFunctions.getDisks(GetDisksArgs.builder()\n            .clientConfiguration(thisSecrets.clientConfiguration())\n            .node(\"10.5.0.2\")\n            .filters(GetDisksFiltersArgs.builder()\n                .size(\"\u003e 100GB\")\n                .type(\"nvme\")\n                .build())\n            .build());\n\n        ctx.export(\"nvmeDisks\", this_.applyValue(this_ -\u003e this_.disks().stream().map(element -\u003e element.name()).collect(toList())));\n    }\n}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDisks.\n",
                "properties": {
                    "clientConfiguration": {
                        "$ref": "#/types/talos:machine/getDisksClientConfiguration:getDisksClientConfiguration",
                        "description": "The client configuration data\n"
                    },
                    "endpoint": {
                        "type": "string",
                        "description": "endpoint to use for the talosclient. If not set, the node value will be used\n"
                    },
                    "filters": {
                        "$ref": "#/types/talos:machine/getDisksFilters:getDisksFilters",
                        "description": "Filters to apply to the disks\n"
                    },
                    "node": {
                        "type": "string",
                        "description": "controlplane node to retrieve the kubeconfig from\n"
                    },
                    "timeouts": {
                        "$ref": "#/types/talos:machine/getDisksTimeouts:getDisksTimeouts"
                    }
                },
                "type": "object",
                "required": [
                    "clientConfiguration",
                    "node"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDisks.\n",
                "properties": {
                    "clientConfiguration": {
                        "$ref": "#/types/talos:machine/getDisksClientConfiguration:getDisksClientConfiguration",
                        "description": "The client configuration data\n"
                    },
                    "disks": {
                        "description": "The disks that match the filters\n",
                        "items": {
                            "$ref": "#/types/talos:machine/getDisksDisk:getDisksDisk"
                        },
                        "type": "array"
                    },
                    "endpoint": {
                        "description": "endpoint to use for the talosclient. If not set, the node value will be used\n",
                        "type": "string"
                    },
                    "filters": {
                        "$ref": "#/types/talos:machine/getDisksFilters:getDisksFilters",
                        "description": "Filters to apply to the disks\n"
                    },
                    "id": {
                        "description": "The generated ID of this resource\n",
                        "type": "string"
                    },
                    "node": {
                        "description": "controlplane node to retrieve the kubeconfig from\n",
                        "type": "string"
                    },
                    "timeouts": {
                        "$ref": "#/types/talos:machine/getDisksTimeouts:getDisksTimeouts"
                    }
                },
                "required": [
                    "clientConfiguration",
                    "disks",
                    "endpoint",
                    "id",
                    "node"
                ],
                "type": "object"
            }
        }
    }
}